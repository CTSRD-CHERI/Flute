//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// cword_fst                      O     1
// cword_snd                      O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_aw_canPeek          O     1 reg
// mem_master_aw_peek             O    97 reg
// RDY_mem_master_aw_peek         O     1 reg
// RDY_mem_master_aw_drop         O     1 reg
// mem_master_w_canPeek           O     1 reg
// mem_master_w_peek              O    74 reg
// RDY_mem_master_w_peek          O     1 reg
// RDY_mem_master_w_drop          O     1 reg
// mem_master_b_canPut            O     1 reg
// RDY_mem_master_b_put           O     1 reg
// mem_master_ar_canPeek          O     1 reg
// mem_master_ar_peek             O    97 reg
// RDY_mem_master_ar_peek         O     1 reg
// RDY_mem_master_ar_drop         O     1 reg
// mem_master_r_canPut            O     1 reg
// RDY_mem_master_r_put           O     1 reg
// RDY_ma_ddr4_ready              O     1 const
// mv_status                      O     8
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_b_put_val           I     6 reg
// mem_master_r_put_val           I    72 reg
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// EN_mem_master_aw_drop          I     1
// EN_mem_master_w_drop           I     1
// EN_mem_master_b_put            I     1
// EN_mem_master_ar_drop          I     1
// EN_mem_master_r_put            I     1
// EN_ma_ddr4_ready               I     1
//
// Combinational paths from inputs to outputs:
//   EN_commit -> valid
//   EN_commit -> cword_fst
//   EN_commit -> cword_snd
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    cword_fst,

		    cword_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_aw_canPeek,

		    mem_master_aw_peek,
		    RDY_mem_master_aw_peek,

		    EN_mem_master_aw_drop,
		    RDY_mem_master_aw_drop,

		    mem_master_w_canPeek,

		    mem_master_w_peek,
		    RDY_mem_master_w_peek,

		    EN_mem_master_w_drop,
		    RDY_mem_master_w_drop,

		    mem_master_b_canPut,

		    mem_master_b_put_val,
		    EN_mem_master_b_put,
		    RDY_mem_master_b_put,

		    mem_master_ar_canPeek,

		    mem_master_ar_peek,
		    RDY_mem_master_ar_peek,

		    EN_mem_master_ar_drop,
		    RDY_mem_master_ar_drop,

		    mem_master_r_canPut,

		    mem_master_r_put_val,
		    EN_mem_master_r_put,
		    RDY_mem_master_r_put,

		    EN_ma_ddr4_ready,
		    RDY_ma_ddr4_ready,

		    mv_status);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method cword_fst
  output cword_fst;

  // value method cword_snd
  output [127 : 0] cword_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_canPeek
  output mem_master_aw_canPeek;

  // value method mem_master_aw_peek
  output [96 : 0] mem_master_aw_peek;
  output RDY_mem_master_aw_peek;

  // action method mem_master_aw_drop
  input  EN_mem_master_aw_drop;
  output RDY_mem_master_aw_drop;

  // value method mem_master_w_canPeek
  output mem_master_w_canPeek;

  // value method mem_master_w_peek
  output [73 : 0] mem_master_w_peek;
  output RDY_mem_master_w_peek;

  // action method mem_master_w_drop
  input  EN_mem_master_w_drop;
  output RDY_mem_master_w_drop;

  // value method mem_master_b_canPut
  output mem_master_b_canPut;

  // action method mem_master_b_put
  input  [5 : 0] mem_master_b_put_val;
  input  EN_mem_master_b_put;
  output RDY_mem_master_b_put;

  // value method mem_master_ar_canPeek
  output mem_master_ar_canPeek;

  // value method mem_master_ar_peek
  output [96 : 0] mem_master_ar_peek;
  output RDY_mem_master_ar_peek;

  // action method mem_master_ar_drop
  input  EN_mem_master_ar_drop;
  output RDY_mem_master_ar_drop;

  // value method mem_master_r_canPut
  output mem_master_r_canPut;

  // action method mem_master_r_put
  input  [71 : 0] mem_master_r_put_val;
  input  EN_mem_master_r_put;
  output RDY_mem_master_r_put;

  // action method ma_ddr4_ready
  input  EN_ma_ddr4_ready;
  output RDY_ma_ddr4_ready;

  // value method mv_status
  output [7 : 0] mv_status;

  // signals for module outputs
  wire [127 : 0] cword_snd, st_amo_val_snd;
  wire [96 : 0] mem_master_ar_peek, mem_master_aw_peek;
  wire [73 : 0] mem_master_w_peek;
  wire [63 : 0] addr;
  wire [7 : 0] mv_status;
  wire [5 : 0] exc_code;
  wire RDY_ma_ddr4_ready,
       RDY_mem_master_ar_drop,
       RDY_mem_master_ar_peek,
       RDY_mem_master_aw_drop,
       RDY_mem_master_aw_peek,
       RDY_mem_master_b_put,
       RDY_mem_master_r_put,
       RDY_mem_master_w_drop,
       RDY_mem_master_w_peek,
       RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       cword_fst,
       exc,
       mem_master_ar_canPeek,
       mem_master_aw_canPeek,
       mem_master_b_canPut,
       mem_master_r_canPut,
       mem_master_w_canPeek,
       st_amo_val_fst,
       valid;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$port0__write_1,
	       cache_ctr_wr_rsps_pending_crg$port1__read,
	       cache_ctr_wr_rsps_pending_crg$port1__write_1,
	       cache_ctr_wr_rsps_pending_crg$port2__read,
	       cache_ctr_wr_rsps_pending_crg$port3__read;
  wire cache_ctr_wr_rsps_pending_crg$EN_port2__write,
       cache_dw_output_ld_val$whas,
       cache_dw_output_st_amo_val$whas,
       cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_rw_reset_req$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_ctr_wr_rsps_pending_crg
  reg [3 : 0] cache_ctr_wr_rsps_pending_crg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$D_IN;
  wire cache_ctr_wr_rsps_pending_crg$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_allow_cap
  reg cache_rg_allow_cap;
  wire cache_rg_allow_cap$D_IN, cache_rg_allow_cap$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_cword_in_cache
  reg [7 : 0] cache_rg_cset_cword_in_cache;
  wire [7 : 0] cache_rg_cset_cword_in_cache$D_IN;
  wire cache_rg_cset_cword_in_cache$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_ddr4_ready
  reg cache_rg_ddr4_ready;
  wire cache_rg_ddr4_ready$D_IN, cache_rg_ddr4_ready$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_wr_rsp_err
  reg cache_rg_wr_rsp_err;
  wire cache_rg_wr_rsp_err$D_IN, cache_rg_wr_rsp_err$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_masterPortShim_arff
  reg [96 : 0] cache_masterPortShim_arff$D_IN;
  wire [96 : 0] cache_masterPortShim_arff$D_OUT;
  wire cache_masterPortShim_arff$CLR,
       cache_masterPortShim_arff$DEQ,
       cache_masterPortShim_arff$EMPTY_N,
       cache_masterPortShim_arff$ENQ,
       cache_masterPortShim_arff$FULL_N;

  // ports of submodule cache_masterPortShim_awff
  wire [96 : 0] cache_masterPortShim_awff$D_IN,
		cache_masterPortShim_awff$D_OUT;
  wire cache_masterPortShim_awff$CLR,
       cache_masterPortShim_awff$DEQ,
       cache_masterPortShim_awff$EMPTY_N,
       cache_masterPortShim_awff$ENQ,
       cache_masterPortShim_awff$FULL_N;

  // ports of submodule cache_masterPortShim_bff
  wire [5 : 0] cache_masterPortShim_bff$D_IN, cache_masterPortShim_bff$D_OUT;
  wire cache_masterPortShim_bff$CLR,
       cache_masterPortShim_bff$DEQ,
       cache_masterPortShim_bff$EMPTY_N,
       cache_masterPortShim_bff$ENQ,
       cache_masterPortShim_bff$FULL_N;

  // ports of submodule cache_masterPortShim_rff
  wire [71 : 0] cache_masterPortShim_rff$D_IN, cache_masterPortShim_rff$D_OUT;
  wire cache_masterPortShim_rff$CLR,
       cache_masterPortShim_rff$DEQ,
       cache_masterPortShim_rff$EMPTY_N,
       cache_masterPortShim_rff$ENQ,
       cache_masterPortShim_rff$FULL_N;

  // ports of submodule cache_masterPortShim_wff
  wire [73 : 0] cache_masterPortShim_wff$D_IN, cache_masterPortShim_wff$D_OUT;
  wire cache_masterPortShim_wff$CLR,
       cache_masterPortShim_wff$DEQ,
       cache_masterPortShim_wff$EMPTY_N,
       cache_masterPortShim_wff$ENQ,
       cache_masterPortShim_wff$FULL_N;

  // ports of submodule cache_ram_cword_set
  reg [257 : 0] cache_ram_cword_set$DIB;
  reg [7 : 0] cache_ram_cword_set$ADDRB;
  wire [257 : 0] cache_ram_cword_set$DIA, cache_ram_cword_set$DOB;
  wire [7 : 0] cache_ram_cword_set$ADDRA;
  wire cache_ram_cword_set$ENA,
       cache_ram_cword_set$ENB,
       cache_ram_cword_set$WEA,
       cache_ram_cword_set$WEB;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DIB,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_23,
       CAN_FIRE_commit,
       CAN_FIRE_ma_ddr4_ready,
       CAN_FIRE_mem_master_ar_drop,
       CAN_FIRE_mem_master_aw_drop,
       CAN_FIRE_mem_master_b_put,
       CAN_FIRE_mem_master_r_put,
       CAN_FIRE_mem_master_w_drop,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_23,
       WILL_FIRE_commit,
       WILL_FIRE_ma_ddr4_ready,
       WILL_FIRE_mem_master_ar_drop,
       WILL_FIRE_mem_master_aw_drop,
       WILL_FIRE_mem_master_b_put,
       WILL_FIRE_mem_master_r_put,
       WILL_FIRE_mem_master_w_drop,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_cword_set$a_put_3__VAL_1,
		 MUX_cache_ram_cword_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_4,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		 MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [96 : 0] MUX_cache_masterPortShim_arff$enq_1__VAL_1,
		MUX_cache_masterPortShim_arff$enq_1__VAL_2,
		MUX_cache_masterPortShim_arff$enq_1__VAL_3,
		MUX_cache_masterPortShim_arff$enq_1__VAL_4,
		MUX_cache_masterPortShim_arff$enq_1__VAL_5;
  wire [73 : 0] MUX_cache_masterPortShim_wff$enq_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_cword_set$b_put_2__VAL_2,
	       MUX_cache_ram_cword_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_4,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_11,
	       MUX_cache_rg_state$write_1__VAL_13,
	       MUX_cache_rg_state$write_1__VAL_14,
	       MUX_cache_rg_state$write_1__VAL_15,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_4,
	       MUX_cache_rg_state$write_1__VAL_8;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_dw_valid$wset_1__SEL_1,
       MUX_cache_dw_valid$wset_1__SEL_2,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_2,
       MUX_cache_masterPortShim_arff$enq_1__SEL_3,
       MUX_cache_ram_cword_set$a_put_1__SEL_1,
       MUX_cache_ram_cword_set$b_put_1__SEL_1,
       MUX_cache_ram_cword_set$b_put_1__SEL_2,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__PSEL_2,
       MUX_cache_rg_exc_code$write_1__PSEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_pa$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_11,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_4,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_rg_state$write_1__SEL_8,
       MUX_cache_rg_state$write_1__SEL_9,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h5271;
  reg [31 : 0] v__h5370;
  reg [31 : 0] v__h5526;
  reg [31 : 0] v__h35279;
  reg [31 : 0] v__h40096;
  reg [31 : 0] v__h62009;
  reg [31 : 0] v__h45543;
  reg [63 : 0] v__h45742;
  reg [31 : 0] v__h46480;
  reg [31 : 0] v__h46237;
  reg [63 : 0] v__h46640;
  reg [31 : 0] v__h46785;
  reg [31 : 0] v__h46897;
  reg [31 : 0] v__h46409;
  reg [31 : 0] v__h47535;
  reg [31 : 0] v__h47295;
  reg [63 : 0] v__h47695;
  reg [31 : 0] v__h47952;
  reg [31 : 0] v__h47840;
  reg [31 : 0] v__h47464;
  reg [31 : 0] v__h48428;
  reg [31 : 0] v__h48499;
  reg [31 : 0] v__h48581;
  reg [31 : 0] v__h48357;
  reg [31 : 0] v__h48710;
  reg [63 : 0] v__h48862;
  reg [31 : 0] v__h49431;
  reg [31 : 0] v__h49673;
  reg [31 : 0] v__h52322;
  reg [63 : 0] v__h52561;
  reg [63 : 0] v__h52665;
  reg [31 : 0] v__h52898;
  reg [31 : 0] v__h54100;
  reg [31 : 0] v__h54214;
  reg [31 : 0] v__h53930;
  reg [31 : 0] v__h54325;
  reg [31 : 0] v__h54447;
  reg [31 : 0] v__h54537;
  reg [31 : 0] v__h54756;
  reg [31 : 0] v__h54882;
  reg [63 : 0] v__h55097;
  reg [63 : 0] v__h55201;
  reg [31 : 0] v__h55378;
  reg [31 : 0] v__h55747;
  reg [31 : 0] v__h58066;
  reg [31 : 0] v__h55675;
  reg [31 : 0] v__h58683;
  reg [31 : 0] v__h58725;
  reg [31 : 0] v__h4797;
  reg [31 : 0] v__h59663;
  reg [31 : 0] v__h60981;
  reg [31 : 0] v__h4791;
  reg [31 : 0] v__h5265;
  reg [31 : 0] v__h5364;
  reg [31 : 0] v__h5520;
  reg [31 : 0] v__h35273;
  reg [31 : 0] v__h40090;
  reg [31 : 0] v__h45537;
  reg [31 : 0] v__h46231;
  reg [31 : 0] v__h46403;
  reg [31 : 0] v__h46474;
  reg [31 : 0] v__h46779;
  reg [31 : 0] v__h46891;
  reg [31 : 0] v__h47289;
  reg [31 : 0] v__h47458;
  reg [31 : 0] v__h47529;
  reg [31 : 0] v__h47834;
  reg [31 : 0] v__h47946;
  reg [31 : 0] v__h48351;
  reg [31 : 0] v__h48422;
  reg [31 : 0] v__h48493;
  reg [31 : 0] v__h48575;
  reg [31 : 0] v__h48704;
  reg [31 : 0] v__h49425;
  reg [31 : 0] v__h49667;
  reg [31 : 0] v__h52316;
  reg [31 : 0] v__h52892;
  reg [31 : 0] v__h53924;
  reg [31 : 0] v__h54094;
  reg [31 : 0] v__h54208;
  reg [31 : 0] v__h54319;
  reg [31 : 0] v__h54441;
  reg [31 : 0] v__h54531;
  reg [31 : 0] v__h54750;
  reg [31 : 0] v__h54876;
  reg [31 : 0] v__h55372;
  reg [31 : 0] v__h55669;
  reg [31 : 0] v__h55741;
  reg [31 : 0] v__h58060;
  reg [31 : 0] v__h58677;
  reg [31 : 0] v__h58719;
  reg [31 : 0] v__h59657;
  reg [31 : 0] v__h60975;
  reg [31 : 0] v__h62003;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46,
		CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153,
		b__h36559,
		b__h40626,
		new_cword__h36541;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48,
	       IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597,
	       IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929,
	       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933,
	       IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064,
	       IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803,
	       _theResult_____2__h40837,
	       _theResult_____2__h55880,
	       _theResult___fst__h39796,
	       _theResult___fst__h53129,
	       _theResult___fst__h57786,
	       _theResult___fst__h7015,
	       _theResult___fst__h8562,
	       _theResult___fst__h8608,
	       _theResult___snd_fst__h56062,
	       _theResult___snd_fst__h8564,
	       mem_req_wr_data_wdata__h3675,
	       w1__h40689,
	       w1__h40694,
	       w1__h55842,
	       w1__h55847;
  reg [7 : 0] fabric_2_strb__h3337, mem_req_wr_data_wstrb__h3676;
  reg [2 : 0] _theResult___snd_snd_fst_val__h3633, size_val__h55072;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d380,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d390,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396,
      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d266,
      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d276,
      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d282,
      IF_cache_rg_width_code_28_EQ_0_29_OR_cache_rg__ETC___d316,
      IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293,
      IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1058,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1166,
		 IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1057,
		 IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1165,
		 IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1176,
		 IF_cache_rg_victim_way_437_THEN_cache_masterPo_ETC___d1506,
		 IF_cache_rg_victim_way_437_THEN_cache_ram_cwor_ETC___d1505,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705,
		 x__h8672,
		 y__h21418,
		 y__h8673,
		 y__h8726;
  wire [127 : 0] IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707,
		 IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094,
		 b__h49891,
		 b__h55624,
		 new_st_val_128__h40838,
		 new_st_val_128__h55881,
		 x__h34112,
		 x__h45081,
		 x__h55875,
		 x__h58044;
  wire [63 : 0] IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d715,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d719,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d723,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d727,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d731,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d735,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d739,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d743,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d747,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d751,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d755,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d759,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d763,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d767,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d771,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d775,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d795,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d799,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d803,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d807,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d811,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d815,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d819,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d823,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d835,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d839,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d843,
		SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d847,
		_theResult___fst__h53193,
		cline_fabric_addr__h48763,
		lev_0_pte_pa__h47567,
		lev_0_pte_pa_w64_fa__h47569,
		lev_1_PTN_pa__h46510,
		lev_1_pte_pa__h46512,
		lev_1_pte_pa_w64_fa__h46514,
		lev_2_pte_pa__h45596,
		lev_2_pte_pa_w64_fa__h45598,
		new_st_val_64__h40843,
		new_st_val_64__h40915,
		new_st_val_64__h42112,
		new_st_val_64__h42116,
		new_st_val_64__h42120,
		new_st_val_64__h42124,
		new_st_val_64__h42129,
		new_st_val_64__h42135,
		new_st_val_64__h42140,
		new_st_val_64__h55886,
		new_st_val_64__h55958,
		new_st_val_64__h57899,
		new_st_val_64__h57903,
		new_st_val_64__h57907,
		new_st_val_64__h57911,
		new_st_val_64__h57916,
		new_st_val_64__h57922,
		new_st_val_64__h57927,
		pa___1__h7063,
		pa___1__h7112,
		pa___1__h7181,
		pte___1__h7833,
		pte___1__h7861,
		pte___2__h7012,
		pte___2__h7014,
		result_lo__h34147,
		result_lo__h34182,
		result_lo__h34215,
		result_lo__h34248,
		result_lo__h34281,
		result_lo__h34314,
		result_lo__h34347,
		result_lo__h34380,
		result_lo__h34413,
		result_lo__h34446,
		result_lo__h34479,
		result_lo__h34512,
		result_lo__h34545,
		result_lo__h34578,
		result_lo__h34611,
		result_lo__h34644,
		result_lo__h34699,
		result_lo__h34732,
		result_lo__h34765,
		result_lo__h34798,
		result_lo__h34831,
		result_lo__h34864,
		result_lo__h34897,
		result_lo__h34930,
		result_lo__h34977,
		result_lo__h35010,
		result_lo__h35043,
		result_lo__h35076,
		result_lo__h53261,
		result_lo__h53294,
		result_lo__h53327,
		result_lo__h53360,
		result_lo__h53393,
		result_lo__h53426,
		result_lo__h53459,
		result_lo__h53492,
		result_lo__h53555,
		result_lo__h53588,
		result_lo__h53621,
		result_lo__h53654,
		result_lo__h53705,
		result_lo__h53738,
		result_lo__h56834,
		result_lo__h56866,
		result_lo__h56898,
		result_lo__h56930,
		result_lo__h56962,
		result_lo__h56994,
		result_lo__h57026,
		result_lo__h57058,
		result_lo__h57090,
		result_lo__h57122,
		result_lo__h57154,
		result_lo__h57186,
		result_lo__h57218,
		result_lo__h57250,
		result_lo__h57282,
		result_lo__h57314,
		result_lo__h57368,
		result_lo__h57400,
		result_lo__h57432,
		result_lo__h57464,
		result_lo__h57496,
		result_lo__h57528,
		result_lo__h57560,
		result_lo__h57592,
		result_lo__h57638,
		result_lo__h57670,
		result_lo__h57702,
		result_lo__h57734,
		satp_pa__h2333,
		value__h7927,
		vpn_0_pa__h47566,
		vpn_1_pa__h46511,
		vpn_2_pa__h45595,
		w1___1__h40882,
		w1___1__h55925,
		w2__h40696,
		word64__h3613,
		x1_avValue_pa__h6835,
		x__h40841,
		x__h55884;
  wire [55 : 0] x__h46593, x__h5646, x__h7066, x__h7115, x__h7184;
  wire [31 : 0] IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q51,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q58,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q65,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q72,
		cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q32,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q33,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q34,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q35,
		cache_rg_st_amo_val_BITS_31_TO_0__q45,
		w10689_BITS_31_TO_0__q44,
		w15842_BITS_31_TO_0__q77;
  wire [15 : 0] IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q50,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q54,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q57,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q61,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q64,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q68,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q75,
		cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2,
		cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6,
		cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q16,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q18,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q20,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q22,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q24,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q27,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q28,
		cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q30;
  wire [7 : 0] IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q49,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q52,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q53,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q55,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q56,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q59,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q60,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q63,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q66,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q67,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q70,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q73,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q74,
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q76,
	       cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1,
	       cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4,
	       cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5,
	       cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7,
	       cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8,
	       cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11,
	       cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12,
	       cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q17,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q19,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q21,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q23,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q25,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q26,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q29,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q31,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q36,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q37,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q38,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q39,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q40,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q41,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q42,
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q43,
	       mem_req_wr_addr_awlen__h3595,
	       strobe64__h3614,
	       strobe64__h3618,
	       strobe64__h3622,
	       strobe64__h3626;
  wire [5 : 0] access_exc_code__h3077,
	       exc_code___1__h7901,
	       shift_bits__h3360,
	       x1_avValue_exc_code__h6836,
	       x1_avValue_snd__h45185,
	       y_avValue_snd__h45183;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1245,
	       IF_NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache__ETC___d1244,
	       IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1243,
	       IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d1247,
	       IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1246,
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1249,
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1250;
  wire [3 : 0] b__h45497;
  wire [1 : 0] tmp__h48919, tmp__h48920;
  wire IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d400,
       IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d286,
       IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d416,
       IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d415,
       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548,
       IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d410,
       IF_cache_tlb_lookup_cache_rg_satp_12_BITS_59_T_ETC___d184,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d379,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d389,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d399,
       NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514,
       NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447,
       NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522,
       NOT_cache_f_reset_reqs_notEmpty__4_59_AND_cach_ETC___d1519,
       NOT_cache_masterPortShim_rff_first__273_BIT_4__ETC___d1305,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d294,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d322,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d326,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d550,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d888,
       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d894,
       NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d159,
       NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d443,
       NOT_cache_rg_op_37_EQ_1_95_56_AND_NOT_cache_rg_ETC___d1232,
       NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1169,
       NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1197,
       NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1203,
       NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1209,
       NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d943,
       NOT_cache_rg_priv_09_EQ_0b0_27_20_OR_cache_tlb_ETC___d429,
       NOT_cache_rg_priv_09_EQ_0b1_31_22_OR_cache_tlb_ETC___d452,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1174,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1180,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1186,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1191,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1195,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1207,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1213,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1218,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1235,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1238,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1240,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d190,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d454,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d458,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d568,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d708,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d904,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d949,
       NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432,
       NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d445,
       NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173,
       NOT_cache_w_req_width_code_wget__898_EQ_0b0_91_ETC___d1939,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d412,
       _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526,
       cache_cfg_verbosity_read__0_ULE_1___d61,
       cache_dw_commit_whas__06_AND_cache_dw_commit_w_ETC___d942,
       cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1348,
       cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1389,
       cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1395,
       cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1338,
       cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1350,
       cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1298,
       cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1362,
       cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1689,
       cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218,
       cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224,
       cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d547,
       cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561,
       cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d874,
       cache_rg_amo_funct5_42_EQ_0b10_43_AND_cache_ra_ETC___d880,
       cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302,
       cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d428,
       cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d552,
       cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d566,
       cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d569,
       cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d1171,
       cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d564,
       cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d946,
       cache_rg_op_37_EQ_2_40_AND_cache_rg_amo_funct5_ETC___d325,
       cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160,
       cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d448,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d419,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d491,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d526,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528,
       cache_rg_priv_09_ULE_0b1___d110,
       cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166,
       cache_rg_width_code_28_EQ_0b100_87_OR_cache_rg_ETC___d402,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1224,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1229,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d876,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d890,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d903,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1241,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d151,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d435,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d518,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536,
       cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1955,
       cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1960,
       lrsc_result__h36166,
       mem_req_wr_second_data_wuser__h3478,
       y__h7576;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method cword_fst
  assign cword_fst =
	     cache_dw_output_ld_val$whas && cache_dw_output_ld_val$wget[128] ;

  // value method cword_snd
  assign cword_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst =
	     cache_dw_output_st_amo_val$whas &&
	     cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_canPeek
  assign mem_master_aw_canPeek = cache_masterPortShim_awff$EMPTY_N ;

  // value method mem_master_aw_peek
  assign mem_master_aw_peek = cache_masterPortShim_awff$D_OUT ;
  assign RDY_mem_master_aw_peek = cache_masterPortShim_awff$EMPTY_N ;

  // action method mem_master_aw_drop
  assign RDY_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign CAN_FIRE_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign WILL_FIRE_mem_master_aw_drop = EN_mem_master_aw_drop ;

  // value method mem_master_w_canPeek
  assign mem_master_w_canPeek = cache_masterPortShim_wff$EMPTY_N ;

  // value method mem_master_w_peek
  assign mem_master_w_peek = cache_masterPortShim_wff$D_OUT ;
  assign RDY_mem_master_w_peek = cache_masterPortShim_wff$EMPTY_N ;

  // action method mem_master_w_drop
  assign RDY_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign CAN_FIRE_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign WILL_FIRE_mem_master_w_drop = EN_mem_master_w_drop ;

  // value method mem_master_b_canPut
  assign mem_master_b_canPut = cache_masterPortShim_bff$FULL_N ;

  // action method mem_master_b_put
  assign RDY_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign CAN_FIRE_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign WILL_FIRE_mem_master_b_put = EN_mem_master_b_put ;

  // value method mem_master_ar_canPeek
  assign mem_master_ar_canPeek = cache_masterPortShim_arff$EMPTY_N ;

  // value method mem_master_ar_peek
  assign mem_master_ar_peek = cache_masterPortShim_arff$D_OUT ;
  assign RDY_mem_master_ar_peek = cache_masterPortShim_arff$EMPTY_N ;

  // action method mem_master_ar_drop
  assign RDY_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign CAN_FIRE_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign WILL_FIRE_mem_master_ar_drop = EN_mem_master_ar_drop ;

  // value method mem_master_r_canPut
  assign mem_master_r_canPut = cache_masterPortShim_rff$FULL_N ;

  // action method mem_master_r_put
  assign RDY_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign CAN_FIRE_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign WILL_FIRE_mem_master_r_put = EN_mem_master_r_put ;

  // action method ma_ddr4_ready
  assign RDY_ma_ddr4_ready = 1'd1 ;
  assign CAN_FIRE_ma_ddr4_ready = 1'd1 ;
  assign WILL_FIRE_ma_ddr4_ready = EN_ma_ddr4_ready ;

  // value method mv_status
  assign mv_status = cache_rg_wr_rsp_err ? 8'd1 : 8'd0 ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_masterPortShim_arff
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) cache_masterPortShim_arff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_masterPortShim_arff$D_IN),
						     .ENQ(cache_masterPortShim_arff$ENQ),
						     .DEQ(cache_masterPortShim_arff$DEQ),
						     .CLR(cache_masterPortShim_arff$CLR),
						     .D_OUT(cache_masterPortShim_arff$D_OUT),
						     .FULL_N(cache_masterPortShim_arff$FULL_N),
						     .EMPTY_N(cache_masterPortShim_arff$EMPTY_N));

  // submodule cache_masterPortShim_awff
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) cache_masterPortShim_awff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_masterPortShim_awff$D_IN),
						     .ENQ(cache_masterPortShim_awff$ENQ),
						     .DEQ(cache_masterPortShim_awff$DEQ),
						     .CLR(cache_masterPortShim_awff$CLR),
						     .D_OUT(cache_masterPortShim_awff$D_OUT),
						     .FULL_N(cache_masterPortShim_awff$FULL_N),
						     .EMPTY_N(cache_masterPortShim_awff$EMPTY_N));

  // submodule cache_masterPortShim_bff
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) cache_masterPortShim_bff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_bff$D_IN),
						    .ENQ(cache_masterPortShim_bff$ENQ),
						    .DEQ(cache_masterPortShim_bff$DEQ),
						    .CLR(cache_masterPortShim_bff$CLR),
						    .D_OUT(cache_masterPortShim_bff$D_OUT),
						    .FULL_N(cache_masterPortShim_bff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_bff$EMPTY_N));

  // submodule cache_masterPortShim_rff
  FIFO2 #(.width(32'd72),
	  .guarded(32'd1)) cache_masterPortShim_rff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_rff$D_IN),
						    .ENQ(cache_masterPortShim_rff$ENQ),
						    .DEQ(cache_masterPortShim_rff$DEQ),
						    .CLR(cache_masterPortShim_rff$CLR),
						    .D_OUT(cache_masterPortShim_rff$D_OUT),
						    .FULL_N(cache_masterPortShim_rff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_rff$EMPTY_N));

  // submodule cache_masterPortShim_wff
  FIFO2 #(.width(32'd74),
	  .guarded(32'd1)) cache_masterPortShim_wff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_wff$D_IN),
						    .ENQ(cache_masterPortShim_wff$ENQ),
						    .DEQ(cache_masterPortShim_wff$DEQ),
						    .CLR(cache_masterPortShim_wff$CLR),
						    .D_OUT(cache_masterPortShim_wff$D_OUT),
						    .FULL_N(cache_masterPortShim_wff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_wff$EMPTY_N));

  // submodule cache_ram_cword_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_cword_set(.CLKA(CLK),
						.CLKB(CLK),
						.ADDRA(cache_ram_cword_set$ADDRA),
						.ADDRB(cache_ram_cword_set$ADDRB),
						.DIA(cache_ram_cword_set$DIA),
						.DIB(cache_ram_cword_set$DIB),
						.WEA(cache_ram_cword_set$WEA),
						.WEB(cache_ram_cword_set$WEB),
						.ENA(cache_ram_cword_set$ENA),
						.ENB(cache_ram_cword_set$ENB),
						.DOA(),
						.DOB(cache_ram_cword_set$DOB));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     cache_ctr_wr_rsps_pending_crg != 4'd15 &&
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     cache_masterPortShim_awff$FULL_N &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     (cache_rg_cset_in_cache != 6'd63 ||
	      cache_f_reset_reqs$EMPTY_N && cache_f_reset_rsps$FULL_N) &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d458 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_ddr4_ready &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     cache_masterPortShim_arff$FULL_N && cache_rg_state == 5'd5 &&
	     b__h45497 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1298 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1362 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_tlb$RDY_insert) &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     b__h45497 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_5 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_5 ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     b__h45497 != 4'd0 && cache_masterPortShim_bff$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req =
	     CAN_FIRE_RL_cache_do_req && !WILL_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_23
  assign CAN_FIRE___me_check_23 = 1'b1 ;
  assign WILL_FIRE___me_check_23 = 1'b1 ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_dw_valid$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574 ;
  assign MUX_cache_dw_valid$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1174 ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_cword_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d949 ;
  assign MUX_cache_ram_cword_set$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1955 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_cword_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__898_EQ_0b0_91_ETC___d1939 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1689 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_3 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__273_BIT_4__ETC___d1305 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d904 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d568 ;
  assign MUX_cache_rg_pa$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488) ;
  assign MUX_cache_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign MUX_cache_rg_state$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_9 =
	     cache_masterPortShim_arff$FULL_N &&
	     NOT_cache_f_reset_reqs_notEmpty__4_59_AND_cach_ETC___d1519 &&
	     b__h45497 == 4'd0 ;
  assign MUX_cache_rg_state$write_1__SEL_11 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d518 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1348 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d708,
		 x__h34112 } :
	       { 65'd0, _theResult___fst__h39796 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       { 65'd0, _theResult___fst__h53129 } :
	       { 1'd0, b__h49891 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h58044 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_4 =
	     { cache_rg_allow_cap && cache_rg_ld_val[128],
	       cache_rg_ld_val[127:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h6835,
	       IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1176 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h55875 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_1 =
	     { 4'd0, lev_1_pte_pa_w64_fa__h46514, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_2 =
	     { 4'd0, lev_0_pte_pa_w64_fa__h47569, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_3 =
	     { 4'd0,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 ?
		 { 8'd0, size_val__h55072, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_4 =
	     { 4'd0, lev_2_pte_pa_w64_fa__h45598, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_5 =
	     { 4'd0, cline_fabric_addr__h48763, 29'd15532032 } ;
  assign MUX_cache_masterPortShim_wff$enq_1__VAL_2 =
	     { mem_req_wr_data_wdata__h3675,
	       mem_req_wr_data_wstrb__h3676,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h3478 } ;
  assign MUX_cache_ram_cword_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1057,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1058 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1165,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1166 } ;
  assign MUX_cache_ram_cword_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64,
		 cache_ram_cword_set$DOB[128:0] } :
	       { cache_ram_cword_set$DOB[257:129],
		 cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_cword_set$b_put_2__VAL_2 =
	     cache_rg_cset_cword_in_cache + 8'd1 ;
  assign MUX_cache_ram_cword_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       cache_rg_victim_way ?
		 cache_rg_pa[63:12] :
		 cache_ram_state_and_ctag_cset$DOB[104:53],
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       cache_rg_victim_way ?
		 cache_ram_state_and_ctag_cset$DOB[51:0] :
		 cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_4 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       exc_code___1__h7901 :
	       access_exc_code__h3077 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd__h45185 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h36166 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[128],
		 x__h45081 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h7015 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h46510 + vpn_1_pa__h46511 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h46510 + vpn_0_pa__h47566 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h2333 + vpn_2_pa__h45595 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_cache_w_req_width_code_wget__898_EQ_0b0_91_ETC___d1939 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_4 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ? 5'd15 : 5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       ((cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_11 =
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_13 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6] ||
		 !cache_masterPortShim_rff$D_OUT[7] &&
		 !cache_masterPortShim_rff$D_OUT[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_14 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd8 :
		     ((cache_masterPortShim_rff$D_OUT[22:14] == 9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_15 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd7 :
		     ((cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
		       cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     EN_commit ?
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1250 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       pte___2__h7014 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_valid$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_valid$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_valid$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_valid$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_valid$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_4;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_ld_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_valid$wset_1__SEL_1 ? 129'd0 : cache_rg_st_amo_val ;
  assign cache_dw_output_st_amo_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574 ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_ctr_wr_rsps_pending_crg$port0__write_1 =
	     cache_ctr_wr_rsps_pending_crg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_ctr_wr_rsps_pending_crg$port0__write_1 :
	       cache_ctr_wr_rsps_pending_crg ;
  assign cache_ctr_wr_rsps_pending_crg$port1__write_1 = b__h45497 - 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_ctr_wr_rsps_pending_crg$port1__write_1 :
	       cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN_port2__write =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;
  assign cache_ctr_wr_rsps_pending_crg$port3__read =
	     cache_ctr_wr_rsps_pending_crg$EN_port2__write ?
	       4'd0 :
	       cache_ctr_wr_rsps_pending_crg$port2__read ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_ctr_wr_rsps_pending_crg
  assign cache_ctr_wr_rsps_pending_crg$D_IN =
	     cache_ctr_wr_rsps_pending_crg$port3__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_allow_cap
  assign cache_rg_allow_cap$D_IN =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     pte___2__h7014[62] ;
  assign cache_rg_allow_cap$EN = MUX_cache_rg_pa$write_1__SEL_2 ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_cset_cword_in_cache
  assign cache_rg_cset_cword_in_cache$D_IN =
	     MUX_cache_ram_cword_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_cword_set$b_put_2__VAL_2 :
	       MUX_cache_ram_cword_set$b_put_2__VAL_4 ;
  assign cache_rg_cset_cword_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_ddr4_ready
  assign cache_rg_ddr4_ready$D_IN = 1'd1 ;
  assign cache_rg_ddr4_ready$EN = EN_ma_ddr4_ready ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_4;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__898_EQ_0b0_91_ETC___d1939 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__273_BIT_4__ETC___d1305 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d904 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN = cache_masterPortShim_rff$D_OUT[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_masterPortShim_rff$D_OUT[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_masterPortShim_rff$D_OUT or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_masterPortShim_rff$D_OUT[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_42_EQ_0b10_43_AND_cache_ra_ETC___d880 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d569 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d568 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_addr :
	       MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488) ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1238 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  MUX_cache_rg_state$write_1__SEL_4 or
	  MUX_cache_rg_state$write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_rg_state$write_1__SEL_8 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_11 or
	  MUX_cache_rg_state$write_1__VAL_11 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_13 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_14 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_15 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    MUX_cache_rg_state$write_1__SEL_4:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_4;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    MUX_cache_rg_state$write_1__SEL_8:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_11:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_11;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_13;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_14;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_15;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h48920[0] ;
  assign cache_rg_victim_way$EN = CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_wr_rsp_err
  assign cache_rg_wr_rsp_err$D_IN = 1'd1 ;
  assign cache_rg_wr_rsp_err$EN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	     cache_masterPortShim_bff$D_OUT[1:0] != 2'd0 ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h3337,
	       1'd1,
	       mem_req_wr_second_data_wuser__h3478 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1174 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h7927 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_masterPortShim_arff
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_3 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_2;
      MUX_cache_masterPortShim_arff$enq_1__SEL_3:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_5;
      default: cache_masterPortShim_arff$D_IN =
		   97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_masterPortShim_arff$ENQ =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign cache_masterPortShim_arff$DEQ = EN_mem_master_ar_drop ;
  assign cache_masterPortShim_arff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_awff
  assign cache_masterPortShim_awff$D_IN =
	     { 4'd0,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h3595,
	       _theResult___snd_snd_fst_val__h3633,
	       18'd65536 } ;
  assign cache_masterPortShim_awff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_awff$DEQ = EN_mem_master_aw_drop ;
  assign cache_masterPortShim_awff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_bff
  assign cache_masterPortShim_bff$D_IN = mem_master_b_put_val ;
  assign cache_masterPortShim_bff$ENQ = EN_mem_master_b_put ;
  assign cache_masterPortShim_bff$DEQ =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;
  assign cache_masterPortShim_bff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_rff
  assign cache_masterPortShim_rff$D_IN = mem_master_r_put_val ;
  assign cache_masterPortShim_rff$ENQ = EN_mem_master_r_put ;
  assign cache_masterPortShim_rff$DEQ =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_masterPortShim_rff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_wff
  assign cache_masterPortShim_wff$D_IN =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       cache_f_fabric_second_write_reqs$D_OUT :
	       MUX_cache_masterPortShim_wff$enq_1__VAL_2 ;
  assign cache_masterPortShim_wff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_wff$DEQ = EN_mem_master_w_drop ;
  assign cache_masterPortShim_wff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_ram_cword_set
  assign cache_ram_cword_set$ADDRA =
	     MUX_cache_ram_cword_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_cset_cword_in_cache ;
  always@(MUX_cache_ram_cword_set$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_cword_set$b_put_1__SEL_2 or
	  MUX_cache_ram_cword_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_cword_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_cword_set$b_put_1__SEL_1:
	  cache_ram_cword_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_cword_set$b_put_1__SEL_2:
	  cache_ram_cword_set$ADDRB = MUX_cache_ram_cword_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_cword_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_cword_set$ADDRB = MUX_cache_ram_cword_set$b_put_2__VAL_4;
      default: cache_ram_cword_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_cword_set$DIA =
	     MUX_cache_ram_cword_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_cword_set$a_put_3__VAL_1 :
	       MUX_cache_ram_cword_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_cword_set$b_put_1__SEL_1 or
	  MUX_cache_ram_cword_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_cword_set$b_put_1__SEL_1:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_cword_set$b_put_1__SEL_2:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_cword_set$DIB =
		   258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_cword_set$WEA = 1'd1 ;
  assign cache_ram_cword_set$WEB = 1'd0 ;
  assign cache_ram_cword_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d949 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign cache_ram_cword_set$ENB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ?
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d518 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1348 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d400 =
	     (x1_avValue_pa__h6835[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 :
	       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d399 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1058 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h36559 } :
	       cache_ram_cword_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1166 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h40626 } :
	       cache_ram_cword_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1245 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache__ETC___d1244 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1057 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h36559 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1165 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h40626 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1243 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ?
	       cache_rg_state :
	       5'd9 ;
  assign IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d286 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707 =
	     cache_rg_lower_word64_full ? b__h49891 : b__h55624 ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q49 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[7:0] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q50 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[15:0] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q51 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[31:0] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q52 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[15:8] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q53 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[23:16] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q54 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[31:16] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[31:24] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[39:32] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[47:32] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:32] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[47:40] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[55:48] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:48] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:56] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[71:64] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[79:64] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[95:64] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[79:72] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[87:80] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[95:80] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[95:88] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[103:96] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[111:96] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[127:96] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[111:104] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[119:112] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[127:112] ;
  assign IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[127:120] ;
  assign IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d1247 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1243 :
	       IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1246 ;
  assign IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d416 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d294 :
	       IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d415 ;
  assign IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1176 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094 } ;
  assign IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d1246 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache__ETC___d1244 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1245 ;
  assign IF_cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_ETC___d415 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_37_EQ_2_40_AND_cache_rg_amo_funct5_ETC___d325 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d326 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d412 ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1249 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1241) ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d1247 :
		  5'd13) ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1250 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1249 ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 =
	     x1_avValue_pa__h6835 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_437_THEN_cache_masterPo_ETC___d1506 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_437_THEN_cache_ram_cwor_ETC___d1505 =
	     cache_rg_victim_way ?
	       cache_ram_cword_set$DOB[128:0] :
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d410 =
	     IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 ||
	      IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407) ;
  assign IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h40838 ;
  assign IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q45[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q45 } :
	       cache_rg_st_amo_val[63:0] ;
  assign IF_cache_tlb_lookup_cache_rg_satp_12_BITS_59_T_ETC___d184 =
	     (pte___2__h7012[7] || cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb$lookup[72] ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d379 =
	     x1_avValue_pa__h6835[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d389 =
	     x1_avValue_pa__h6835[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395 =
	     x1_avValue_pa__h6835[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d399 =
	     x1_avValue_pa__h6835[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514 =
	     !pte___2__h7012[7] && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	     !cache_tlb$lookup[72] ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__4_59_AND_cach_ETC___d1519 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_masterPortShim_rff_first__273_BIT_4__ETC___d1305 =
	     !cache_masterPortShim_rff$D_OUT[4] ||
	     !cache_masterPortShim_rff$D_OUT[5] &&
	     cache_masterPortShim_rff$D_OUT[6] ||
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ||
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d294 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ||
	     IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d322 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 ||
	      IF_cache_rg_width_code_28_EQ_0_29_OR_cache_rg__ETC___d316) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 ||
	      IF_cache_rg_width_code_28_EQ_0_29_OR_cache_rg__ETC___d316) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d326 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ||
	     !EN_commit ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d550 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d888 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d894 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d159 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d151) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d443 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      cache_tlb$RDY_lookup) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$RDY_lookup) ;
  assign NOT_cache_rg_op_37_EQ_1_95_56_AND_NOT_cache_rg_ETC___d1232 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1169 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) &&
	     EN_commit ;
  assign NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1197 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d874 ;
  assign NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1203 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) &&
	     EN_commit &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d888 ;
  assign NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1209 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d943 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302) &&
	     cache_dw_commit_whas__06_AND_cache_dw_commit_w_ETC___d942 ;
  assign NOT_cache_rg_priv_09_EQ_0b0_27_20_OR_cache_tlb_ETC___d429 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d428 ;
  assign NOT_cache_rg_priv_09_EQ_0b1_31_22_OR_cache_tlb_ETC___d452 =
	     (cache_rg_priv != 2'b01 || cache_tlb$RDY_lookup) &&
	     (cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	      cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	      !cache_rg_sstatus_SUM ||
	      NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d443) &&
	     cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d448 &&
	     (cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	      cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	      !cache_rg_sstatus_SUM ||
	      NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d445) ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1174 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d1171 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1180 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1186 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1191 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1195 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1197 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1207 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1203 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1213 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1209 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1218 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h36166 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1229 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1235 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_37_EQ_1_95_56_AND_NOT_cache_rg_ETC___d1232 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1238 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1240 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488) &&
	     !cache_soc_map$m_is_mem_addr &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d190 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     IF_cache_tlb_lookup_cache_rg_satp_12_BITS_59_T_ETC___d184 ||
	     cache_tlb$RDY_insert && cache_tlb$RDY_lookup &&
	     cache_f_pte_writebacks$FULL_N ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d454 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_09_EQ_0b0_27_20_OR_cache_tlb_ETC___d429 &&
	     NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432 &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d435 ||
	     (cache_rg_priv != 2'b0 || cache_tlb$RDY_lookup) &&
	     NOT_cache_rg_priv_09_EQ_0b1_31_22_OR_cache_tlb_ETC___d452 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d458 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     (cache_cfg_verbosity_read__0_ULE_1___d61 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d419 &&
	     (!EN_commit ||
	      NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d454) ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d568 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d566 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d574 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d569 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	      lrsc_result__h36166) ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d708 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      pte___2__h7014[62]) &&
	     cache_rg_width_code == 3'b100 &&
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[128] ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d151 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d904 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d903 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d949 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d946 ;
  assign NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432 =
	     !cache_rg_st_amo_val[128] || cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	     cache_tlb$lookup[129] ;
  assign NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d445 =
	     !cache_rg_st_amo_val[128] || cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_cache_w_req_width_code_wget__898_EQ_0b0_91_ETC___d1939 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d715 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q31[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q31 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d719 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q43[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q43 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d723 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q29[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q29 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d727 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q42[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q42 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d731 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q26[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q26 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d735 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q41[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q41 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d739 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q25[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q25 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d743 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q40[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q40 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d747 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q23[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q23 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d751 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q39[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q39 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d755 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q21[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q21 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d759 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q38[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q38 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d763 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q19[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q19 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d767 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q37[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q37 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d771 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q17[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q17 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d775 =
	     { {56{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q36[7]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q36 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d795 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q30[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q30 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d799 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q28[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q28 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d803 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q27[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q27 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d807 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q24[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q24 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d811 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q22[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q22 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d815 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q20[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q20 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d819 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q18[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q18 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d823 =
	     { {48{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q16[15]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q16 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d835 =
	     { {32{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q35[31]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q35 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d839 =
	     { {32{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q34[31]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q34 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d843 =
	     { {32{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q33[31]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q33 } ;
  assign SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d847 =
	     { {32{cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q32[31]}},
	       cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q32 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d412 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 ||
	      IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407) &&
	     cache_rg_width_code_28_EQ_0b100_87_OR_cache_rg_ETC___d402 &&
	     IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d410 ;
  assign _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 =
	     8'd1 << size_val__h55072 <= 8'd8 ;
  assign _theResult___fst__h53193 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       64'd0 ;
  assign access_exc_code__h3077 = MUX_cache_rg_exc_code$write_1__VAL_4 ;
  assign b__h45497 = cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign b__h49891 =
	     { cache_masterPortShim_rff$D_OUT[67:4], cache_rg_lower_word64 } ;
  assign b__h55624 = { 64'd0, _theResult___fst__h53129 } ;
  assign cache_cfg_verbosity_read__0_ULE_1___d61 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_dw_commit_whas__06_AND_cache_dw_commit_w_ETC___d942 =
	     EN_commit &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ;
  assign cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1 =
	     cache_masterPortShim_rff$D_OUT[11:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4 =
	     cache_masterPortShim_rff$D_OUT[19:12] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2 =
	     cache_masterPortShim_rff$D_OUT[19:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5 =
	     cache_masterPortShim_rff$D_OUT[27:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6 =
	     cache_masterPortShim_rff$D_OUT[35:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 =
	     cache_masterPortShim_rff$D_OUT[35:28] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3 =
	     cache_masterPortShim_rff$D_OUT[35:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8 =
	     cache_masterPortShim_rff$D_OUT[43:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9 =
	     cache_masterPortShim_rff$D_OUT[51:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11 =
	     cache_masterPortShim_rff$D_OUT[51:44] ;
  assign cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12 =
	     cache_masterPortShim_rff$D_OUT[59:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10 =
	     cache_masterPortShim_rff$D_OUT[67:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13 =
	     cache_masterPortShim_rff$D_OUT[67:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14 =
	     cache_masterPortShim_rff$D_OUT[67:60] ;
  assign cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1348 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1389 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1395 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1338 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1350 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1298 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      ((!cache_masterPortShim_rff$D_OUT[7] &&
		!cache_masterPortShim_rff$D_OUT[5]) ?
		 cache_masterPortShim_arff$FULL_N :
		 cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
		 cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1362 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      ((!cache_masterPortShim_rff$D_OUT[7] &&
		!cache_masterPortShim_rff$D_OUT[5]) ?
		 cache_masterPortShim_arff$FULL_N :
		 cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign cache_masterPortShim_rff_i_notEmpty__272_AND_N_ETC___d1689 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_masterPortShim_rff$D_OUT[1] ||
	      cache_f_fabric_write_reqs$FULL_N) ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705 =
	     x__h8672 | y__h8673 ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q16 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:112] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q17 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[119:112] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q18 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[111:96] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q19 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[103:96] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q20 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:80] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q21 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[87:80] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q22 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[79:64] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q23 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[71:64] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q24 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:48] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q25 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[55:48] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q26 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[39:32] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q27 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[47:32] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q28 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:16] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q29 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[23:16] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q30 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[15:0] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q31 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[7:0] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q32 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:96] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q33 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:64] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q34 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:32] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q35 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:0] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q36 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:120] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q37 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[111:104] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q38 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:88] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q39 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[79:72] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q40 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:56] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q41 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[47:40] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q42 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:24] ;
  assign cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC__q43 =
	     cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[15:8] ;
  assign cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h6835[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h6835[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d547 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     EN_commit ;
  assign cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d874 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_rg_amo_funct5_42_EQ_0b10_43_AND_cache_ra_ETC___d880 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ;
  assign cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h6835 ;
  assign cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d428 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d151 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d552 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d547 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d550) ;
  assign cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d566 =
	     cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d552 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d564 ;
  assign cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_2__ETC___d569 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224) ;
  assign cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d1171 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d1169 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 ;
  assign cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d564 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d548 ;
  assign cache_rg_op_37_EQ_1_95_OR_cache_rg_op_37_EQ_2__ETC___d946 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_37_EQ_2_40_41_OR_NOT_cache_rg__ETC___d943 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 ;
  assign cache_rg_op_37_EQ_2_40_AND_cache_rg_amo_funct5_ETC___d325 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h36166 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d322 ;
  assign cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_37_EQ_0_38_39_AND_NOT_cache_rg_ETC___d159 ;
  assign cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d448 =
	     cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 ||
	     NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d445 &&
	     (cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166 ||
	      cache_tlb$RDY_lookup) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d419 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (!cache_tlb$lookup[130] ||
	      cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 ||
	      cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173) ||
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d190 &&
	     (!cache_soc_map$m_is_mem_addr ||
	      IF_cache_rg_op_37_EQ_0_38_OR_cache_rg_op_37_EQ_ETC___d416) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d491 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 ||
	      cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514 &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d526 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514 &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !pte___2__h7012[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign cache_rg_priv_09_ULE_0b1___d110 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166 =
	     cache_rg_st_amo_val[128] && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[129] ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q45 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_28_EQ_0b100_87_OR_cache_rg_ETC___d402 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1224 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d326 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1229 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d876 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d874 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d890 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d888 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d903 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 &&
	      cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d561) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1241 =
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 ||
	      cache_rg_st_amo_val_61_BIT_128_62_AND_NOT_cach_ETC___d166 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d151 =
	     cache_tlb$lookup[67] | y__h7576 ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d435 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 =
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_27_20_OR_cache_tlb_ETC___d429 &&
	     NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432 &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d435 ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d518 =
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514 ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 =
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] &&
	     (!cache_rg_st_amo_val[128] || cache_tlb$lookup[129]) &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1955 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1960 =
	     (cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1955 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cline_fabric_addr__h48763 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h7901 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign lev_0_pte_pa__h47567 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h47569 = { lev_0_pte_pa__h47567[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h46510 = { 8'd0, x__h46593 } ;
  assign lev_1_pte_pa__h46512 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h46514 = { lev_1_pte_pa__h46512[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h45596 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h45598 = { lev_2_pte_pa__h45596[63:3], 3'b0 } ;
  assign lrsc_result__h36166 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_01_EQ_IF_cache_rg_priv_09_ULE_ETC___d302 ;
  assign mem_req_wr_addr_awlen__h3595 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h3478 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h40838 = { 64'd0, x__h40841 } ;
  assign new_st_val_128__h55881 = { 64'd0, x__h55884 } ;
  assign new_st_val_64__h40843 = { 32'd0, _theResult_____2__h40837[31:0] } ;
  assign new_st_val_64__h40915 =
	     IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 +
	     IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ;
  assign new_st_val_64__h42112 = w1__h40694 ^ w2__h40696 ;
  assign new_st_val_64__h42116 = w1__h40694 & w2__h40696 ;
  assign new_st_val_64__h42120 = w1__h40694 | w2__h40696 ;
  assign new_st_val_64__h42124 =
	     (w1__h40694 < w2__h40696) ? w1__h40694 : w2__h40696 ;
  assign new_st_val_64__h42129 =
	     (w1__h40694 <= w2__h40696) ? w2__h40696 : w1__h40694 ;
  assign new_st_val_64__h42135 =
	     ((IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ^
	       64'h8000000000000000)) ?
	       w1__h40694 :
	       w2__h40696 ;
  assign new_st_val_64__h42140 =
	     ((IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ^
	       64'h8000000000000000)) ?
	       w2__h40696 :
	       w1__h40694 ;
  assign new_st_val_64__h55886 = { 32'd0, _theResult_____2__h55880[31:0] } ;
  assign new_st_val_64__h55958 =
	     IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 +
	     IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ;
  assign new_st_val_64__h57899 = w1__h55847 ^ w2__h40696 ;
  assign new_st_val_64__h57903 = w1__h55847 & w2__h40696 ;
  assign new_st_val_64__h57907 = w1__h55847 | w2__h40696 ;
  assign new_st_val_64__h57911 =
	     (w1__h55847 < w2__h40696) ? w1__h55847 : w2__h40696 ;
  assign new_st_val_64__h57916 =
	     (w1__h55847 <= w2__h40696) ? w2__h40696 : w1__h55847 ;
  assign new_st_val_64__h57922 =
	     ((IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ^
	       64'h8000000000000000)) ?
	       w1__h55847 :
	       w2__h40696 ;
  assign new_st_val_64__h57927 =
	     ((IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1066 ^
	       64'h8000000000000000)) ?
	       w2__h40696 :
	       w1__h55847 ;
  assign pa___1__h7063 = { 8'd0, x__h7066 } ;
  assign pa___1__h7112 = { 8'd0, x__h7115 } ;
  assign pa___1__h7181 = { 8'd0, x__h7184 } ;
  assign pte___1__h7833 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h7861 =
	     { pte___2__h7012[63:8], 1'd1, pte___2__h7012[6:0] } ;
  assign pte___2__h7012 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h7833 ;
  assign pte___2__h7014 =
	     (!pte___2__h7012[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h7861 :
	       pte___2__h7012 ;
  assign result_lo__h34147 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[7:0] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d715 ;
  assign result_lo__h34182 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[15:8] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d719 ;
  assign result_lo__h34215 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[23:16] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d723 ;
  assign result_lo__h34248 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:24] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d727 ;
  assign result_lo__h34281 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[39:32] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d731 ;
  assign result_lo__h34314 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[47:40] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d735 ;
  assign result_lo__h34347 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[55:48] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d739 ;
  assign result_lo__h34380 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:56] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d743 ;
  assign result_lo__h34413 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[71:64] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d747 ;
  assign result_lo__h34446 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[79:72] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d751 ;
  assign result_lo__h34479 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[87:80] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d755 ;
  assign result_lo__h34512 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:88] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d759 ;
  assign result_lo__h34545 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[103:96] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d763 ;
  assign result_lo__h34578 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[111:104] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d767 ;
  assign result_lo__h34611 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[119:112] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d771 ;
  assign result_lo__h34644 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:120] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d775 ;
  assign result_lo__h34699 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[15:0] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d795 ;
  assign result_lo__h34732 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:16] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d799 ;
  assign result_lo__h34765 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[47:32] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d803 ;
  assign result_lo__h34798 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:48] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d807 ;
  assign result_lo__h34831 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[79:64] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d811 ;
  assign result_lo__h34864 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:80] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d815 ;
  assign result_lo__h34897 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[111:96] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d819 ;
  assign result_lo__h34930 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:112] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d823 ;
  assign result_lo__h34977 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[31:0] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d835 ;
  assign result_lo__h35010 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:32] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d839 ;
  assign result_lo__h35043 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[95:64] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d843 ;
  assign result_lo__h35076 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:96] } :
	       SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d847 ;
  assign result_lo__h53261 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[11:4] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1 } ;
  assign result_lo__h53294 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[19:12] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4 } ;
  assign result_lo__h53327 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[27:20] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5 } ;
  assign result_lo__h53360 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[35:28] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 } ;
  assign result_lo__h53393 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[43:36] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8 } ;
  assign result_lo__h53426 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[51:44] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11 } ;
  assign result_lo__h53459 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[59:52] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12 } ;
  assign result_lo__h53492 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[67:60] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14 } ;
  assign result_lo__h53555 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[19:4] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2 } ;
  assign result_lo__h53588 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[35:20] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6 } ;
  assign result_lo__h53621 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[51:36] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9 } ;
  assign result_lo__h53654 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[67:52] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13 } ;
  assign result_lo__h53705 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[35:4] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3 } ;
  assign result_lo__h53738 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[67:36] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10 } ;
  assign result_lo__h56834 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q49[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q49 } ;
  assign result_lo__h56866 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q52[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q52 } ;
  assign result_lo__h56898 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q53[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q53 } ;
  assign result_lo__h56930 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q55[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h56962 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q56[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h56994 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q59[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h57026 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q60[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h57058 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h57090 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q63[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h57122 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q66[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h57154 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q67[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h57186 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h57218 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q70[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h57250 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q73[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h57282 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q74[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q74 } ;
  assign result_lo__h57314 =
	     { {56{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h57368 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q50[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q50 } ;
  assign result_lo__h57400 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q54[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q54 } ;
  assign result_lo__h57432 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q57[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h57464 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q61[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h57496 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q64[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h57528 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q68[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h57560 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q71[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h57592 =
	     { {48{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q75[15]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h57638 =
	     { {32{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q51[31]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q51 } ;
  assign result_lo__h57670 =
	     { {32{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q58[31]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h57702 =
	     { {32{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q65[31]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h57734 =
	     { {32{IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q72[31]}},
	       IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC__q72 } ;
  assign satp_pa__h2333 = { 8'd0, x__h5646 } ;
  assign shift_bits__h3360 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h3614 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3618 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3622 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3626 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h48919 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h48920 = tmp__h48919 + 2'd1 ;
  assign value__h7927 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h47566 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h46511 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h45595 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w10689_BITS_31_TO_0__q44 = w1__h40689[31:0] ;
  assign w15842_BITS_31_TO_0__q77 = w1__h55842[31:0] ;
  assign w1___1__h40882 = { 32'd0, w1__h40689[31:0] } ;
  assign w1___1__h55925 = { 32'd0, w1__h55842[31:0] } ;
  assign w2__h40696 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h3613 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h3360 ;
  assign x1_avValue_exc_code__h6836 =
	     (cache_rg_priv_09_EQ_0b0_27_AND_NOT_cache_tlb_l_ETC___d160 ||
	      NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432 &&
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d173) ?
	       exc_code___1__h7901 :
	       6'd27 ;
  assign x1_avValue_pa__h6835 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x1_avValue_snd__h45185 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h45183 ;
  assign x__h34112 =
	     { _theResult___snd_fst__h8564, _theResult___fst__h8562 } ;
  assign x__h40841 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h40843 :
	       _theResult_____2__h40837 ;
  assign x__h45081 = { _theResult___snd_fst__h8564, w1__h40689 } ;
  assign x__h46593 = { cache_masterPortShim_rff$D_OUT[57:14], 12'b0 } ;
  assign x__h55875 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h55881 ;
  assign x__h55884 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h55886 :
	       _theResult_____2__h55880 ;
  assign x__h5646 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h58044 = { _theResult___snd_fst__h56062, w1__h55842 } ;
  assign x__h7066 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h7115 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h7184 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign x__h8672 = cache_ram_cword_set$DOB[128:0] & y__h8726 ;
  assign y__h21418 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224}} ;
  assign y__h7576 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  assign y__h8673 = cache_ram_cword_set$DOB[257:129] & y__h21418 ;
  assign y__h8726 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218}} ;
  assign y_avValue_snd__h45183 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1241) ?
	       x1_avValue_exc_code__h6836 :
	       cache_rg_exc_code ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h3337 = 8'd0;
      3'b100: fabric_2_strb__h3337 = 8'b11111111;
      default: fabric_2_strb__h3337 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___fst__h39796 = 64'd1;
      default: _theResult___fst__h39796 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h3633 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h3633 = 3'b011;
      default: _theResult___snd_snd_fst_val__h3633 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h55072 = cache_rg_width_code;
      default: size_val__h55072 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h7063 or pa___1__h7112 or pa___1__h7181)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h7015 = pa___1__h7063;
      2'd1: _theResult___fst__h7015 = pa___1__h7112;
      2'd2: _theResult___fst__h7015 = pa___1__h7181;
      2'd3: _theResult___fst__h7015 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h3614 or
	  strobe64__h3618 or strobe64__h3622 or strobe64__h3626)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h3676 = strobe64__h3614;
      3'b001: mem_req_wr_data_wstrb__h3676 = strobe64__h3618;
      3'b010: mem_req_wr_data_wstrb__h3676 = strobe64__h3622;
      3'b011: mem_req_wr_data_wstrb__h3676 = strobe64__h3626;
      3'b100: mem_req_wr_data_wstrb__h3676 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h3676 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h3613)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h3675 = word64__h3613;
      default: mem_req_wr_data_wdata__h3675 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224 or
	  cache_ram_cword_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224)
      1'd0: new_cword__h36541 = cache_ram_cword_set$DOB[127:0];
      1'd1: new_cword__h36541 = cache_ram_cword_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 or
	  cache_rg_priv_09_ULE_0b1___d110 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_28_EQ_0_29_OR_cache_rg__ETC___d316 =
	      !cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_28_EQ_0_29_OR_cache_rg__ETC___d316 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d266 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
      4'd15:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d266 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d276 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d276 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d282 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d282 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d266 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d276 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d282 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d286)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d266;
      3'd1:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d276;
      3'b010:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_O_ETC___d282;
      3'd3:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d286;
      default: IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d260 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
	      IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_28_EQ_0_29_THEN_IF_cach_ETC___d293;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d389 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d390 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d390 =
		   NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d389;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d379 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d380 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      4'd15:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d380 =
	      NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d379;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 =
		   NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261 or
	  cache_rg_priv_09_ULE_0b1___d110 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d380 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d390 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d400 or
	  cache_rg_width_code_28_EQ_0b100_87_OR_cache_rg_ETC___d402)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d380;
      3'd1:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d390;
      3'b010:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396;
      3'd3:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d400;
      3'b100:
	  IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
	      cache_rg_width_code_28_EQ_0b100_87_OR_cache_rg_ETC___d402;
      default: IF_cache_rg_width_code_28_EQ_0_29_THEN_NOT_cac_ETC___d407 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d261;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_fst__h8564 = 64'd0;
      3'b100:
	  _theResult___snd_fst__h8564 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:64];
      default: _theResult___snd_fst__h8564 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h8608 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:0];
      4'h8:
	  _theResult___fst__h8608 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[127:64];
      default: _theResult___fst__h8608 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d835 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d839 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d843 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d847)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d835;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d839;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d843;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d847;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34977 or
	  result_lo__h35010 or result_lo__h35043 or result_lo__h35076)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 =
	      result_lo__h34977;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 =
	      result_lo__h35010;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 =
	      result_lo__h35043;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 =
	      result_lo__h35076;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d795 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d799 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d803 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d807 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d811 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d815 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d819 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d823)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d795;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d799;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d803;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d807;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d811;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d815;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d819;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d823;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34699 or
	  result_lo__h34732 or
	  result_lo__h34765 or
	  result_lo__h34798 or
	  result_lo__h34831 or
	  result_lo__h34864 or result_lo__h34897 or result_lo__h34930)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34699;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34732;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34765;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34798;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34831;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34864;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34897;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
	      result_lo__h34930;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d715 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d719 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d723 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d727 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d731 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d735 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d739 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d743 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d747 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d751 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d755 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d759 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d763 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d767 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d771 or
	  SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d775)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d715;
      4'h1:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d719;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d723;
      4'h3:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d727;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d731;
      4'h5:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d735;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d739;
      4'h7:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d743;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d747;
      4'h9:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d751;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d755;
      4'hB:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d759;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d763;
      4'hD:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d767;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d771;
      4'hF:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 =
	      SEXT_cache_ram_cword_set_b_read__82_BITS_128_T_ETC___d775;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933 or
	  _theResult___fst__h8608 or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h40689 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921;
      3'd1:
	  w1__h40689 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929;
      3'b010:
	  w1__h40689 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d933;
      3'd3: w1__h40689 = _theResult___fst__h8608;
      3'b100:
	  w1__h40689 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:0];
      default: w1__h40689 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 or
	  w1___1__h40882 or
	  _theResult___fst__h8608 or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h40694 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921;
      3'd1:
	  w1__h40694 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929;
      3'b010: w1__h40694 = w1___1__h40882;
      3'd3: w1__h40694 = _theResult___fst__h8608;
      3'b100:
	  w1__h40694 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:0];
      default: w1__h40694 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34147 or
	  result_lo__h34182 or
	  result_lo__h34215 or
	  result_lo__h34248 or
	  result_lo__h34281 or
	  result_lo__h34314 or
	  result_lo__h34347 or
	  result_lo__h34380 or
	  result_lo__h34413 or
	  result_lo__h34446 or
	  result_lo__h34479 or
	  result_lo__h34512 or
	  result_lo__h34545 or
	  result_lo__h34578 or result_lo__h34611 or result_lo__h34644)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34147;
      4'h1:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34182;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34215;
      4'h3:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34248;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34281;
      4'h5:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34314;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34347;
      4'h7:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34380;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34413;
      4'h9:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34446;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34479;
      4'hB:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34512;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34545;
      4'hD:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34578;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34611;
      4'hF:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 =
	      result_lo__h34644;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852 or
	  _theResult___fst__h8608 or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___fst__h8562 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d792;
      3'd1:
	  _theResult___fst__h8562 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d832;
      3'b010:
	  _theResult___fst__h8562 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d852;
      3'd3: _theResult___fst__h8562 = _theResult___fst__h8608;
      3'b100:
	  _theResult___fst__h8562 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:0];
      default: _theResult___fst__h8562 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929 or
	  w10689_BITS_31_TO_0__q44 or
	  _theResult___fst__h8608 or
	  cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d921;
      3'd1:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d929;
      3'b010:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
	      { {32{w10689_BITS_31_TO_0__q44[31]}},
		w10689_BITS_31_TO_0__q44 };
      3'd3:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
	      _theResult___fst__h8608;
      3'b100:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
	      cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705[63:0];
      default: IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1064 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h42140 or
	  new_st_val_64__h40915 or
	  w2__h40696 or
	  new_st_val_64__h42112 or
	  new_st_val_64__h42120 or
	  new_st_val_64__h42116 or
	  new_st_val_64__h42135 or
	  new_st_val_64__h42124 or new_st_val_64__h42129)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h40837 = new_st_val_64__h40915;
      5'b00001: _theResult_____2__h40837 = w2__h40696;
      5'b00100: _theResult_____2__h40837 = new_st_val_64__h42112;
      5'b01000: _theResult_____2__h40837 = new_st_val_64__h42120;
      5'b01100: _theResult_____2__h40837 = new_st_val_64__h42116;
      5'b10000: _theResult_____2__h40837 = new_st_val_64__h42135;
      5'b11000: _theResult_____2__h40837 = new_st_val_64__h42124;
      5'b11100: _theResult_____2__h40837 = new_st_val_64__h42129;
      default: _theResult_____2__h40837 = new_st_val_64__h42140;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  new_cword__h36541 or
	  IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 =
	      { new_cword__h36541[127:32],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 =
	      { new_cword__h36541[127:64],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[31:0],
		new_cword__h36541[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 =
	      { new_cword__h36541[127:96],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[31:0],
		new_cword__h36541[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 =
	      { IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[31:0],
		new_cword__h36541[95:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 =
		   new_cword__h36541;
    endcase
  end
  always@(x1_avValue_pa__h6835 or new_cword__h36541 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 =
	      { new_cword__h36541[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 =
	      { new_cword__h36541[127:64],
		cache_rg_st_amo_val[31:0],
		new_cword__h36541[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 =
	      { new_cword__h36541[127:96],
		cache_rg_st_amo_val[31:0],
		new_cword__h36541[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 =
	      { cache_rg_st_amo_val[31:0], new_cword__h36541[95:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 =
		   new_cword__h36541;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  new_cword__h36541 or
	  IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:16],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:32],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:48],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:64],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:80],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:96],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { new_cword__h36541[127:112],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
	      { IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[15:0],
		new_cword__h36541[111:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 =
		   new_cword__h36541;
    endcase
  end
  always@(x1_avValue_pa__h6835 or new_cword__h36541 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:32],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:48],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:64],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:80],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:96],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { new_cword__h36541[127:112],
		cache_rg_st_amo_val[15:0],
		new_cword__h36541[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
	      { cache_rg_st_amo_val[15:0], new_cword__h36541[111:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 =
		   new_cword__h36541;
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  new_cword__h36541 or
	  IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:8],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:16],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:24],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:32],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:40],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:48],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:56],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:64],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:72],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:80],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:88],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:96],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:104],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:112],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { new_cword__h36541[127:120],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 =
	      { IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[7:0],
		new_cword__h36541[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h6835 or
	  new_cword__h36541 or
	  IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46 =
	      { new_cword__h36541[127:64],
		IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[63:0] };
      4'h8:
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46 =
	      { IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094[63:0],
		new_cword__h36541[63:0] };
      default: CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46 =
		   new_cword__h36541;
    endcase
  end
  always@(cache_rg_width_code or
	  new_cword__h36541 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153 or
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46 or
	  IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h40626 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1127;
      3'd1:
	  b__h40626 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1144;
      3'b010:
	  b__h40626 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1153;
      3'd3:
	  b__h40626 = CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q46;
      3'b100:
	  b__h40626 =
	      IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094;
      default: b__h40626 = new_cword__h36541;
    endcase
  end
  always@(x1_avValue_pa__h6835 or new_cword__h36541 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:16],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:24],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:32],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:40],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:48],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:56],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:64],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:72],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:80],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:88],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:96],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:104],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:112],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { new_cword__h36541[127:120],
		cache_rg_st_amo_val[7:0],
		new_cword__h36541[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 =
	      { cache_rg_st_amo_val[7:0], new_cword__h36541[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h6835 or new_cword__h36541 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6835[3:0])
      4'h0:
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47 =
	      { new_cword__h36541[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47 =
	      { cache_rg_st_amo_val[63:0], new_cword__h36541[63:0] };
      default: CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47 =
		   new_cword__h36541;
    endcase
  end
  always@(cache_rg_width_code or
	  new_cword__h36541 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044 or
	  CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h36559 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1018;
      3'd1:
	  b__h36559 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1035;
      3'b010:
	  b__h36559 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1044;
      3'd3:
	  b__h36559 = CASE_x1_avValue_pa835_BITS_3_TO_0_0x0_new_cwor_ETC__q47;
      3'b100: b__h36559 = cache_rg_st_amo_val[127:0];
      default: b__h36559 = new_cword__h36541;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h53555 or
	  result_lo__h53588 or result_lo__h53621 or result_lo__h53654)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 =
	      result_lo__h53555;
      3'd2:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 =
	      result_lo__h53588;
      3'd4:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 =
	      result_lo__h53621;
      3'd6:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 =
	      result_lo__h53654;
      default: IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h53261 or
	  result_lo__h53294 or
	  result_lo__h53327 or
	  result_lo__h53360 or
	  result_lo__h53393 or
	  result_lo__h53426 or result_lo__h53459 or result_lo__h53492)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53261;
      3'd1:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53294;
      3'd2:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53327;
      3'd3:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53360;
      3'd4:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53393;
      3'd5:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53426;
      3'd6:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53459;
      3'd7:
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 =
	      result_lo__h53492;
    endcase
  end
  always@(cache_rg_addr or result_lo__h53705 or result_lo__h53738)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48 =
	      result_lo__h53705;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48 =
	      result_lo__h53738;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597 or
	  IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48 or
	  _theResult___fst__h53193 or cache_masterPortShim_rff$D_OUT)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___fst__h53129 =
	      IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1597;
      3'd1:
	  _theResult___fst__h53129 =
	      IF_cache_rg_addr_22_BITS_2_TO_0_549_EQ_0_550_T_ETC___d1617;
      3'b010:
	  _theResult___fst__h53129 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3705_ETC__q48;
      3'd3: _theResult___fst__h53129 = _theResult___fst__h53193;
      3'b100: _theResult___fst__h53129 = cache_masterPortShim_rff$D_OUT[67:4];
      default: _theResult___fst__h53129 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_fst__h56062 = 64'd0;
      3'b100:
	  _theResult___snd_fst__h56062 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[127:64];
      default: _theResult___snd_fst__h56062 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h57786 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:0];
      4'h8:
	  _theResult___fst__h57786 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[127:64];
      default: _theResult___fst__h57786 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h57638 or
	  result_lo__h57670 or result_lo__h57702 or result_lo__h57734)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 =
	      result_lo__h57638;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 =
	      result_lo__h57670;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 =
	      result_lo__h57702;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 =
	      result_lo__h57734;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h57368 or
	  result_lo__h57400 or
	  result_lo__h57432 or
	  result_lo__h57464 or
	  result_lo__h57496 or
	  result_lo__h57528 or result_lo__h57560 or result_lo__h57592)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57368;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57400;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57432;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57464;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57496;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57528;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57560;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
	      result_lo__h57592;
      default: IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h56834 or
	  result_lo__h56866 or
	  result_lo__h56898 or
	  result_lo__h56930 or
	  result_lo__h56962 or
	  result_lo__h56994 or
	  result_lo__h57026 or
	  result_lo__h57058 or
	  result_lo__h57090 or
	  result_lo__h57122 or
	  result_lo__h57154 or
	  result_lo__h57186 or
	  result_lo__h57218 or
	  result_lo__h57250 or result_lo__h57282 or result_lo__h57314)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56834;
      4'h1:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56866;
      4'h2:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56898;
      4'h3:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56930;
      4'h4:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56962;
      4'h5:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h56994;
      4'h6:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57026;
      4'h7:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57058;
      4'h8:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57090;
      4'h9:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57122;
      4'hA:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57154;
      4'hB:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57186;
      4'hC:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57218;
      4'hD:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57250;
      4'hE:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57282;
      4'hF:
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 =
	      result_lo__h57314;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791 or
	  _theResult___fst__h57786 or
	  IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h55842 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755;
      3'd1:
	  w1__h55842 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779;
      3'b010:
	  w1__h55842 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1791;
      3'd3: w1__h55842 = _theResult___fst__h57786;
      3'b100:
	  w1__h55842 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:0];
      default: w1__h55842 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 or
	  w1___1__h55925 or
	  _theResult___fst__h57786 or
	  IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h55847 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755;
      3'd1:
	  w1__h55847 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779;
      3'b010: w1__h55847 = w1___1__h55925;
      3'd3: w1__h55847 = _theResult___fst__h57786;
      3'b100:
	  w1__h55847 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:0];
      default: w1__h55847 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755 or
	  IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779 or
	  w15842_BITS_31_TO_0__q77 or
	  _theResult___fst__h57786 or
	  IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1755;
      3'd1:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
	      IF_cache_rg_addr_22_BITS_3_TO_0_30_EQ_0x0_31_T_ETC___d1779;
      3'b010:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
	      { {32{w15842_BITS_31_TO_0__q77[31]}},
		w15842_BITS_31_TO_0__q77 };
      3'd3:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
	      _theResult___fst__h57786;
      3'b100:
	  IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
	      IF_cache_rg_lower_word64_full_468_THEN_cache_m_ETC___d1707[63:0];
      default: IF_cache_rg_width_code_28_EQ_0b10_77_THEN_SEXT_ETC___d1803 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h57927 or
	  new_st_val_64__h55958 or
	  w2__h40696 or
	  new_st_val_64__h57899 or
	  new_st_val_64__h57907 or
	  new_st_val_64__h57903 or
	  new_st_val_64__h57922 or
	  new_st_val_64__h57911 or new_st_val_64__h57916)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h55880 = new_st_val_64__h55958;
      5'b00001: _theResult_____2__h55880 = w2__h40696;
      5'b00100: _theResult_____2__h55880 = new_st_val_64__h57899;
      5'b01000: _theResult_____2__h55880 = new_st_val_64__h57907;
      5'b01100: _theResult_____2__h55880 = new_st_val_64__h57903;
      5'b10000: _theResult_____2__h55880 = new_st_val_64__h57922;
      5'b11000: _theResult_____2__h55880 = new_st_val_64__h57911;
      5'b11100: _theResult_____2__h55880 = new_st_val_64__h57916;
      default: _theResult_____2__h55880 = new_st_val_64__h57927;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_ddr4_ready <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      128'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
	cache_rg_wr_rsp_err <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_ctr_wr_rsps_pending_crg$EN)
	  cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_crg$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_ddr4_ready$EN)
	  cache_rg_ddr4_ready <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_ddr4_ready$D_IN;
	if (cache_rg_ld_val$EN)
	  cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
	if (cache_rg_wr_rsp_err$EN)
	  cache_rg_wr_rsp_err <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_wr_rsp_err$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_allow_cap$EN)
      cache_rg_allow_cap <= `BSV_ASSIGNMENT_DELAY cache_rg_allow_cap$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_cset_cword_in_cache$EN)
      cache_rg_cset_cword_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_cset_cword_in_cache$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_ctr_wr_rsps_pending_crg = 4'hA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_allow_cap = 1'h0;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_cword_in_cache = 8'hAA;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_ddr4_ready = 1'h0;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_wr_rsp_err = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_addr_awlen__h3595);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", _theResult___snd_snd_fst_val__h3633, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_data_wdata__h3675);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_data_wstrb__h3676);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_second_data_wuser__h3478, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h5271 = $stime;
	  #0;
	end
    v__h5265 = v__h5271 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h5265,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h5370 = $stime;
	  #0;
	end
    v__h5364 = v__h5370 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h5364, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h5526 = $stime;
	  #0;
	end
    v__h5520 = v__h5526 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h5520,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h2333,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  CWord 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" 0x%0x", cache_ram_cword_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" 0x%0x", cache_ram_cword_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_ram_state_and_ctag_cset$DOB[52] &&
	  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d218 &&
	  cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__13_BITS__ETC___d224)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488))
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d491 &&
	  cache_tlb$lookup[130])
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !pte___2__h7014[62])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   pte___2__h7014[62]))
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", x1_avValue_exc_code__h6836);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   IF_cache_tlb_lookup_cache_rg_satp_12_BITS_59_T_ETC___d184))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  NOT_IF_cache_tlb_lookup_cache_rg_satp_12_BITS__ETC___d514)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", value__h7927, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_EQ_0b0_27_20_OR_cache_tlb_ETC___d429 &&
	  NOT_cache_rg_st_amo_val_61_BIT_128_62_30_OR_ca_ETC___d432 &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d435 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d526)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d488 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	  pte___2__h7014[62])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	  !pte___2__h7014[62])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", x1_avValue_exc_code__h6836);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("'h%h", value__h7927, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d528 &&
	  NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d876)
	begin
	  v__h35279 = $stime;
	  #0;
	end
    v__h35273 = v__h35279 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d876)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h35273,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  cache_ram_state_and_ctag_cset_b_read__13_BIT_5_ETC___d874)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d876)
	$display("        Read-hit: addr 0x%0h centry 0x%0h",
		 cache_rg_addr,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d890)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d873 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  NOT_cache_ram_state_and_ctag_cset_b_read__13_B_ETC___d894)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1180)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1186)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1191)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1195)
	$display("        AMO SC result = %0d", lrsc_result__h36166);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h6835,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1058);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1057);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1201)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1207)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h6835,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1213)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1213)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1218)
	begin
	  v__h40096 = $stime;
	  #0;
	end
    v__h40090 = v__h40096 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1218)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h40090,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1218)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d536) &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1224)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$display("          PA 0x%0h ", x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$display("          Cache word 0x%0h, load-result 0x%0h",
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705,
		 cache_ram_cword_set_b_read__82_BITS_128_TO_0_8_ETC___d705,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_28_EQ_0b100_87_THEN_cac_ETC___d1094 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$write("          New CWord_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1166);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__13_BI_ETC___d1165);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1230)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1235)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h6835);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1240)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_ddr4_ready)
	begin
	  v__h62009 = $stime;
	  #0;
	end
    v__h62003 = v__h62009 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_ddr4_ready)
	$display("%0d: %m.ma_ddr4_ready: Enabling MMU_Cache", v__h62003);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h45543 = $stime;
	  #0;
	end
    v__h45537 = v__h45543 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h45537,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h45742 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h45742);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_2_pte_pa_w64_fa__h45598);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46480 = $stime;
	  #0;
	end
    v__h46474 = v__h46480 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h46474,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46237 = $stime;
	  #0;
	end
    v__h46231 = v__h46237 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h46231,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46640 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h46640);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_1_pte_pa_w64_fa__h46514);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1338)
	begin
	  v__h46785 = $stime;
	  #0;
	end
    v__h46779 = v__h46785 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1338)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h46779,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	   cache_masterPortShim_rff$D_OUT[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1350)
	begin
	  v__h46897 = $stime;
	  #0;
	end
    v__h46891 = v__h46897 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1350)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h46891,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__273_BIT_7_284__ETC___d1350)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h46510);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46409 = $stime;
	  #0;
	end
    v__h46403 = v__h46409 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h46403,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3077);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47535 = $stime;
	  #0;
	end
    v__h47529 = v__h47535 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h47529,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47295 = $stime;
	  #0;
	end
    v__h47289 = v__h47295 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h47289,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47695 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h47695);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_0_pte_pa_w64_fa__h47569);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1389)
	begin
	  v__h47952 = $stime;
	  #0;
	end
    v__h47946 = v__h47952 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1389)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h47946,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1389)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h46510);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1395)
	begin
	  v__h47840 = $stime;
	  #0;
	end
    v__h47834 = v__h47840 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__273_BITS_3_TO__ETC___d1395)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h47834,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  cache_masterPortShim_rff$D_OUT[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47464 = $stime;
	  #0;
	end
    v__h47458 = v__h47464 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h47458,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3077);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48428 = $stime;
	  #0;
	end
    v__h48422 = v__h48428 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48422,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48499 = $stime;
	  #0;
	end
    v__h48493 = v__h48499 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h48493,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7901);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48581 = $stime;
	  #0;
	end
    v__h48575 = v__h48581 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h48575,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h46510);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48357 = $stime;
	  #0;
	end
    v__h48351 = v__h48357 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48351,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3077);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48710 = $stime;
	  #0;
	end
    v__h48704 = v__h48710 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_start_cache_refill: ", v__h48704, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48862 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h48862);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cline_fabric_addr__h48763);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h48920[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	begin
	  v__h49431 = $stime;
	  #0;
	end
    v__h49425 = v__h49431 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h49425,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h49673 = $stime;
	  #0;
	end
    v__h49667 = v__h49673 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h49667,
		 "D_MMU_Cache",
		 access_exc_code__h3077);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_masterPortShim_rff$D_OUT[0],
		   cache_masterPortShim_rff$D_OUT[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_cset_cword_in_cache[1:0] == 2'd3 &&
	  (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_cset_cword_in_cache[1:0] == 2'd3 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$display("        Updating Cache cword_set 0x%0h, cword_in_cline %0d) old => new",
		 cache_rg_cset_cword_in_cache,
		 cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(" 0x%0x", cache_ram_cword_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(" 0x%0x", cache_ram_cword_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_437_THEN_cache_ram_cwor_ETC___d1505);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_437_THEN_cache_masterPo_ETC___d1506);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_446___d1447)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    fa_req_ram_B tagCSet [0x%0x] cword_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52322 = $stime;
	  #0;
	end
    v__h52316 = v__h52322 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h52316,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52561 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h52561);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", size_val__h55072, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52665 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h52665);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52898 = $stime;
	  #0;
	end
    v__h52892 = v__h52898 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h52892,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54100 = $stime;
	  #0;
	end
    v__h54094 = v__h54100 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h54094,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___fst__h53129 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54214 = $stime;
	  #0;
	end
    v__h54208 = v__h54214 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h54208,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h53930 = $stime;
	  #0;
	end
    v__h53924 = v__h53930 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h53924,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h49891 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54325 = $stime;
	  #0;
	end
    v__h54319 = v__h54325 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h54319,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54447 = $stime;
	  #0;
	end
    v__h54441 = v__h54447 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h54441,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { cache_rg_allow_cap && cache_rg_ld_val[128],
		   cache_rg_ld_val[127:0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54537 = $stime;
	  #0;
	end
    v__h54531 = v__h54537 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h54531,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54756 = $stime;
	  #0;
	end
    v__h54750 = v__h54756 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h54750,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54882 = $stime;
	  #0;
	end
    v__h54876 = v__h54882 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54876,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55097 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h55097);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", size_val__h55072, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55201 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h55201);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_28_EQ_0_29_OR_cach_ETC___d1526 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55378 = $stime;
	  #0;
	end
    v__h55372 = v__h55378 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55372,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55747 = $stime;
	  #0;
	end
    v__h55741 = v__h55747 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_AMO_read_rsp; width_code 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h55741,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h58066 = $stime;
	  #0;
	end
    v__h58060 = v__h58066 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h58060,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h58044 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55675 = $stime;
	  #0;
	end
    v__h55669 = v__h55675 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h55669,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h58683 = $stime;
	  #0;
	end
    v__h58677 = v__h58683 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h58677,
	       "D_MMU_Cache",
	       $unsigned(b__h45497));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	begin
	  v__h58725 = $stime;
	  #0;
	end
    v__h58719 = v__h58725 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h58719,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd1 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h4797 = $stime;
	  #0;
	end
    v__h4791 = v__h4797 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h4791,
		 "D_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd32),
		 $signed(32'd4));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h59663 = $stime;
	  #0;
	end
    v__h59657 = v__h59663 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0d: %m.req: op:", v__h59657);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" width_code:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  cache_w_req_width_code_wget__898_EQ_0b0_919_OR_ETC___d1960)
	$display("    fa_req_ram_B tagCSet [0x%0x] cword_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h60981 = $stime;
	  #0;
	end
    v__h60975 = v__h60981 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.tlb_flush", v__h60975, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 1976, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 1975, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 1974, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 1973, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 1972, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

