//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1
// mem_master_awid                O     5
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     5
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct7                 I     7 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     5
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     5
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_req -> RDY_server_flush_request_put
//   EN_req -> RDY_tlb_flush
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_ICache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct7,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [6 : 0] req_amo_funct7;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [4 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [4 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [4 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [4 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [4 : 0] mem_master_arid, mem_master_awid;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [98 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [10 : 0] cache_crg_sb_to_load_delay$port0__write_1,
		cache_crg_sb_to_load_delay$port2__read;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [6 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_commit$port1__read,
       cache_crg_commit$port3__read,
       cache_crg_sb_to_load_delay$EN_port1__write,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_commit
  reg cache_crg_commit;
  wire cache_crg_commit$D_IN, cache_crg_commit$EN;

  // register cache_crg_sb_to_load_delay
  reg [10 : 0] cache_crg_sb_to_load_delay;
  wire [10 : 0] cache_crg_sb_to_load_delay$D_IN;
  wire cache_crg_sb_to_load_delay$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [98 : 0] cache_master_xactor_shim_arff_rv;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [98 : 0] cache_master_xactor_shim_awff_rv;
  wire [98 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [7 : 0] cache_master_xactor_shim_bff_rv;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [73 : 0] cache_master_xactor_shim_rff_rv;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct7
  reg [6 : 0] cache_rg_amo_funct7;
  wire [6 : 0] cache_rg_amo_funct7$D_IN;
  wire cache_rg_amo_funct7$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [52 : 0] cache_ram_state_and_ctag_cset$DIA,
		cache_ram_state_and_ctag_cset$DIB,
		cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [128 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [128 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [98 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [52 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_2,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_10,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_4,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_exc_code$write_1__SEL_8,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_17,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7383;
  reg [31 : 0] v__h7486;
  reg [31 : 0] v__h7944;
  reg [31 : 0] v__h24308;
  reg [31 : 0] v__h28888;
  reg [31 : 0] v__h34130;
  reg [31 : 0] v__h6939;
  reg [31 : 0] v__h40299;
  reg [31 : 0] v__h42362;
  reg [31 : 0] v__h42453;
  reg [31 : 0] v__h42674;
  reg [31 : 0] v__h42799;
  reg [31 : 0] v__h46277;
  reg [31 : 0] v__h46524;
  reg [31 : 0] v__h46485;
  reg [31 : 0] v__h35186;
  reg [31 : 0] v__h34943;
  reg [31 : 0] v__h35491;
  reg [31 : 0] v__h35603;
  reg [31 : 0] v__h35115;
  reg [31 : 0] v__h36245;
  reg [31 : 0] v__h36005;
  reg [31 : 0] v__h36662;
  reg [31 : 0] v__h36550;
  reg [31 : 0] v__h36174;
  reg [31 : 0] v__h37142;
  reg [31 : 0] v__h37213;
  reg [31 : 0] v__h37295;
  reg [31 : 0] v__h37071;
  reg [31 : 0] v__h40883;
  reg [31 : 0] v__h42020;
  reg [31 : 0] v__h42135;
  reg [31 : 0] v__h41858;
  reg [31 : 0] v__h42246;
  reg [31 : 0] v__h43318;
  reg [31 : 0] v__h43687;
  reg [31 : 0] v__h45967;
  reg [31 : 0] v__h43615;
  reg [31 : 0] v__h46920;
  reg [31 : 0] v__h37433;
  reg [31 : 0] v__h38226;
  reg [31 : 0] v__h38468;
  reg [31 : 0] v__h48352;
  reg [31 : 0] v__h6933;
  reg [31 : 0] v__h7377;
  reg [31 : 0] v__h7480;
  reg [31 : 0] v__h7938;
  reg [31 : 0] v__h24302;
  reg [31 : 0] v__h28882;
  reg [31 : 0] v__h34124;
  reg [31 : 0] v__h34937;
  reg [31 : 0] v__h35109;
  reg [31 : 0] v__h35180;
  reg [31 : 0] v__h35485;
  reg [31 : 0] v__h35597;
  reg [31 : 0] v__h35999;
  reg [31 : 0] v__h36168;
  reg [31 : 0] v__h36239;
  reg [31 : 0] v__h36544;
  reg [31 : 0] v__h36656;
  reg [31 : 0] v__h37065;
  reg [31 : 0] v__h37136;
  reg [31 : 0] v__h37207;
  reg [31 : 0] v__h37289;
  reg [31 : 0] v__h37427;
  reg [31 : 0] v__h38220;
  reg [31 : 0] v__h38462;
  reg [31 : 0] v__h40293;
  reg [31 : 0] v__h40877;
  reg [31 : 0] v__h41852;
  reg [31 : 0] v__h42014;
  reg [31 : 0] v__h42129;
  reg [31 : 0] v__h42240;
  reg [31 : 0] v__h42356;
  reg [31 : 0] v__h42447;
  reg [31 : 0] v__h42668;
  reg [31 : 0] v__h42793;
  reg [31 : 0] v__h43312;
  reg [31 : 0] v__h43609;
  reg [31 : 0] v__h43681;
  reg [31 : 0] v__h45961;
  reg [31 : 0] v__h46271;
  reg [31 : 0] v__h46479;
  reg [31 : 0] v__h46518;
  reg [31 : 0] v__h46914;
  reg [31 : 0] v__h48346;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56,
		CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37,
		CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931,
		IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459,
		IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817,
		IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821,
		_theResult___fst__h10423,
		_theResult___fst__h30670,
		_theResult___fst__h45695,
		q1__h29330,
		q1__h43780,
		x__h23181,
		x__h25578,
		x__h28670,
		x__h29396,
		x__h41202;
  reg [63 : 0] _theResult_____2__h29494,
	       _theResult_____2__h43826,
	       _theResult___fst__h9324,
	       mem_req_wr_data_wdata__h6069;
  reg [7 : 0] fabric_2_strb__h5654, mem_req_wr_data_wstrb__h6070;
  reg [2 : 0] _theResult___snd_snd_fst_val__h6011, size_val__h43027;
  reg CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q2,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q3,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q4,
      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d377,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d386,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d391,
      IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399,
      IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309;
  wire [128 : 0] IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1067,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583,
		 y__h10478;
  wire [127 : 0] IF_NOT_cache_rg_lower_word64_full_349_350_AND__ETC___d1500,
		 IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d749,
		 IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1048,
		 IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d590,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d594,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d598,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d602,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d606,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d610,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d614,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d618,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d622,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d626,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d630,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d634,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d638,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d642,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d646,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d650,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d670,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d674,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d678,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d682,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d686,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d690,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d694,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d698,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d710,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d714,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d718,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d722,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d730,
		 SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d734,
		 _theResult___fst__h41173,
		 new_st_val_128__h29495,
		 new_st_val_128__h43827,
		 result__h10425,
		 result__h10427,
		 result__h23192,
		 result__h23230,
		 result__h23263,
		 result__h23296,
		 result__h23329,
		 result__h23362,
		 result__h23395,
		 result__h23428,
		 result__h23461,
		 result__h23494,
		 result__h23527,
		 result__h23560,
		 result__h23593,
		 result__h23626,
		 result__h23659,
		 result__h23692,
		 result__h23747,
		 result__h23780,
		 result__h23813,
		 result__h23846,
		 result__h23879,
		 result__h23912,
		 result__h23945,
		 result__h23978,
		 result__h24025,
		 result__h24058,
		 result__h24091,
		 result__h24124,
		 result__h41175,
		 result__h41213,
		 result__h41249,
		 result__h41282,
		 result__h41315,
		 result__h41348,
		 result__h41381,
		 result__h41414,
		 result__h41447,
		 result__h41510,
		 result__h41543,
		 result__h41576,
		 result__h41609,
		 result__h41660,
		 result__h41693,
		 result__h44078,
		 result__h44775,
		 result__h44807,
		 result__h44839,
		 result__h44871,
		 result__h44903,
		 result__h44935,
		 result__h44967,
		 result__h44999,
		 result__h45031,
		 result__h45063,
		 result__h45095,
		 result__h45127,
		 result__h45159,
		 result__h45191,
		 result__h45223,
		 result__h45277,
		 result__h45309,
		 result__h45341,
		 result__h45373,
		 result__h45405,
		 result__h45437,
		 result__h45469,
		 result__h45501,
		 result__h45547,
		 result__h45579,
		 result__h45611,
		 result__h45643,
		 result__h45697,
		 result__h45726,
		 word128__h41068,
		 word128__h44003,
		 x__h38689,
		 x__h43820;
  wire [97 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40;
  wire [63 : 0] IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d1669,
		IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d948,
		IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950,
		_theResult___fst__h9017,
		_theResult___fst__h9088,
		_theResult___snd_fst__h9019,
		_theResult___snd_fst__h9090,
		_theResult___snd_fst__h9548,
		b__h29613,
		b__h30735,
		b__h43945,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q26,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q27,
		cline_fabric_addr__h37486,
		lev_0_pte_pa__h36277,
		lev_0_pte_pa_w64_fa__h36279,
		lev_1_PTN_pa__h35216,
		lev_1_pte_pa__h35218,
		lev_1_pte_pa_w64_fa__h35220,
		lev_2_pte_pa__h34183,
		lev_2_pte_pa_w64_fa__h34185,
		new_st_val_64__h29503,
		new_st_val_64__h29605,
		new_st_val_64__h30765,
		new_st_val_64__h30770,
		new_st_val_64__h30775,
		new_st_val_64__h30780,
		new_st_val_64__h30788,
		new_st_val_64__h30797,
		new_st_val_64__h30805,
		new_st_val_64__h43835,
		new_st_val_64__h43937,
		new_st_val_64__h45792,
		new_st_val_64__h45797,
		new_st_val_64__h45802,
		new_st_val_64__h45807,
		new_st_val_64__h45815,
		new_st_val_64__h45824,
		new_st_val_64__h45832,
		pa___1__h9330,
		pa___1__h9379,
		pa___1__h9448,
		pte___1__h9597,
		pte___1__h9625,
		pte___2__h9322,
		satp_pa__h4621,
		value__h9642,
		vpn_0_pa__h36276,
		vpn_1_pa__h35217,
		vpn_2_pa__h34182,
		w1___1__h29570,
		w1___1__h43902,
		w1__h29337,
		w1__h43787,
		w2__h29339,
		word1284003_BITS_127_TO_64__q75,
		word1284003_BITS_63_TO_0__q59,
		word64__h5988,
		x1_avValue_pa__h8928,
		x__h29498,
		x__h43830;
  wire [55 : 0] x__h35313, x__h8064, x__h9333, x__h9382, x__h9451;
  wire [31 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q22,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q23,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q24,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q25,
		cache_rg_st_amo_val_BITS_31_TO_0__q1,
		q13780_BITS_31_TO_0__q87,
		q19330_BITS_31_TO_0__q36,
		word1284003_BITS_127_TO_96__q82,
		word1284003_BITS_31_TO_0__q60,
		word1284003_BITS_63_TO_32__q67,
		word1284003_BITS_95_TO_64__q74;
  wire [15 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q54,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q10,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q12,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q15,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q16,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q18,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q20,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q6,
		cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q8,
		word1284003_BITS_111_TO_96__q81,
		word1284003_BITS_127_TO_112__q85,
		word1284003_BITS_15_TO_0__q58,
		word1284003_BITS_31_TO_16__q63,
		word1284003_BITS_47_TO_32__q66,
		word1284003_BITS_63_TO_48__q70,
		word1284003_BITS_79_TO_64__q73,
		word1284003_BITS_95_TO_80__q78;
  wire [7 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q53,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q55,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q11,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q13,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q14,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q17,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q19,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q21,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q28,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q29,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q30,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q31,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q32,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q33,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q34,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q35,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q7,
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q9,
	       mem_req_wr_addr_awlen__h5972,
	       strobe64__h5989,
	       strobe64__h5996,
	       strobe64__h6000,
	       strobe64__h6004,
	       word1284003_BITS_103_TO_96__q80,
	       word1284003_BITS_111_TO_104__q83,
	       word1284003_BITS_119_TO_112__q84,
	       word1284003_BITS_127_TO_120__q86,
	       word1284003_BITS_15_TO_8__q61,
	       word1284003_BITS_23_TO_16__q62,
	       word1284003_BITS_31_TO_24__q64,
	       word1284003_BITS_39_TO_32__q65,
	       word1284003_BITS_47_TO_40__q68,
	       word1284003_BITS_55_TO_48__q69,
	       word1284003_BITS_63_TO_56__q71,
	       word1284003_BITS_71_TO_64__q72,
	       word1284003_BITS_79_TO_72__q76,
	       word1284003_BITS_7_TO_0__q57,
	       word1284003_BITS_87_TO_80__q77,
	       word1284003_BITS_95_TO_88__q79;
  wire [5 : 0] shift_bits__h5677;
  wire [4 : 0] IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d481,
	       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d480,
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d483;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d395,
       IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d405,
       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d404,
       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d376,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d385,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d390,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d394,
       NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328,
       NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d1380,
       NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d417,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1183,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1245,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1287,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1189,
       NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278,
       NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d496,
       NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d474,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1054,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1118,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1123,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1130,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d505,
       NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d832,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1052,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1091,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1098,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1104,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d830,
       NOT_cache_rg_priv_66_EQ_0b0_83_35_OR_cache_tlb_ETC___d442,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1057,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1063,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1064,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1070,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1077,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1083,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1088,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1094,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1101,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1107,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1108,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1113,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1114,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1120,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1136,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1137,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d489,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d490,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d510,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d517,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d758,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d765,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d772,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d777,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d784,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d790,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d791,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d835,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d836,
       NOT_req_width_code_EQ_0b0_760_761_AND_NOT_req__ETC___d1780,
       _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1220,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1230,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1232,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1270,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276,
       cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243,
       cache_ram_state_and_ctag_cset_b_read__16_BIT_5_ETC___d497,
       cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d781,
       cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d469,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d508,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d512,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d586,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d756,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d775,
       cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1055,
       cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1060,
       cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d506,
       cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d833,
       cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d407,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d477,
       cache_rg_priv_66_ULE_0b1___d167,
       cache_rg_width_code_46_EQ_0b100_03_OR_cache_rg_ETC___d342,
       lrsc_result__h24698,
       mem_req_wr_second_data_wuser__h5792,
       req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1796,
       req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1801;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = !EN_req && cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put =
	     !EN_req && cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = !EN_req ;
  assign CAN_FIRE_tlb_flush = !EN_req ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[97:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[7] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[97:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[73] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd53),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd129),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd0)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[98] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_shift_sb_to_load_delay
  assign CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;
  assign WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     (!cache_crg_commit$port1__read ||
	      (!cache_rg_priv_66_ULE_0b1___d167 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d407) &&
	     NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d417 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d1380 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] != 5'b00010 &&
	     cache_rg_amo_funct7[6:2] != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[7] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[7] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[7] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[73] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[73] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1183 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1245 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1287 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill && !EN_req ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop && !EN_req ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !EN_req && !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq && !EN_req ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d517 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1064 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     EN_req &&
	     (req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1796 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d836 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_760_761_AND_NOT_req__ETC___d1780 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1189 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d791 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d510 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_17 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d477 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1230 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     { cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d586,
	       IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d749 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     { 1'd0,
	       IF_NOT_cache_rg_lower_word64_full_349_350_AND__ETC___d1500 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, q1__h43780 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h8928,
	       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1067 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h43820 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 6'd32, lev_1_pte_pa_w64_fa__h35220, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 6'd32, lev_0_pte_pa_w64_fa__h36279, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 6'd32,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 ?
		 { 8'd0, size_val__h43027, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 6'd32, lev_2_pte_pa_w64_fa__h34185, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 6'd32, cline_fabric_addr__h37486, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6069,
	       mem_req_wr_data_wstrb__h6070,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5792 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { 1'd1, cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1048 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     { cache_master_xactor_shim_rff_rv$port1__read[0],
	       cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_2 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       6'd12 :
	       6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     cache_crg_commit$port1__read ? 6'd12 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       { 128'd0, lrsc_result__h24698 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[128],
		 q1__h29330 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978 } ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (NOT_req_width_code_EQ_0b0_760_761_AND_NOT_req__ETC___d1780 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_10 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     cache_crg_commit$port1__read ?
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d483 :
	       5'd4 ;

  // inlined wires
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[7] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[73] ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d517 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     mem_master_arready ;
  assign cache_crg_commit$port1__read = EN_commit || cache_crg_commit ;
  assign cache_crg_commit$port3__read =
	     !EN_req && cache_crg_commit$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 6'd32,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5972,
	       _theResult___snd_snd_fst_val__h6011,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       8'd42 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       8'd42 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   99'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port2__read ;
  assign cache_crg_sb_to_load_delay$port0__write_1 =
	     { 1'd0, cache_crg_sb_to_load_delay[10:1] } ;
  assign cache_crg_sb_to_load_delay$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1057 ;
  assign cache_crg_sb_to_load_delay$port2__read =
	     cache_crg_sb_to_load_delay$EN_port1__write ?
	       11'd2047 :
	       cache_crg_sb_to_load_delay$port0__write_1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_commit
  assign cache_crg_commit$D_IN = cache_crg_commit$port3__read ;
  assign cache_crg_commit$EN = 1'b1 ;

  // register cache_crg_sb_to_load_delay
  assign cache_crg_sb_to_load_delay$D_IN =
	     cache_crg_sb_to_load_delay$port2__read ;
  assign cache_crg_sb_to_load_delay$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = EN_req ;

  // register cache_rg_amo_funct7
  assign cache_rg_amo_funct7$D_IN = req_amo_funct7 ;
  assign cache_rg_amo_funct7$EN = EN_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__VAL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_exc_code$write_1__SEL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  MUX_cache_rg_exc_code$write_1__SEL_8 or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = 6'd1;
    MUX_cache_rg_exc_code$write_1__SEL_2:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_2;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_4: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_8:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'b101010 /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_760_761_AND_NOT_req__ETC___d1780 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1189 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = EN_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d791 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = x1_avValue_pa__h8928 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d765 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d512 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d510 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = EN_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = EN_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN = EN_req ? req_addr : x1_avValue_pa__h8928 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d490 ||
	     EN_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = EN_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  lev_1_pte_pa__h35218 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  lev_0_pte_pa__h36277 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or lev_2_pte_pa__h34183)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = lev_1_pte_pa__h35218;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = lev_0_pte_pa__h36277;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = lev_2_pte_pa__h34183;
      default: cache_rg_pte_pa$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = EN_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = EN_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     EN_req ? req_st_value : MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1137 ||
	     EN_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  EN_req or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  MUX_cache_rg_state$write_1__SEL_6 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  MUX_cache_rg_state$write_1__SEL_7 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_10 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_state$write_1__SEL_17 or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    EN_req: cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    MUX_cache_rg_state$write_1__SEL_6:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    MUX_cache_rg_state$write_1__SEL_7:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_10;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    MUX_cache_rg_state$write_1__SEL_17:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d477 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     EN_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = EN_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5654,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5792 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1064 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN = 128'h0 ;
  assign cache_f_pte_writebacks$ENQ = 1'b0 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       53'h0AAAAAAAAAAAAA ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       53'h0AAAAAAAAAAAAA /* unspecified value */  :
	       53'h0AAAAAAAAAAAAA /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d836 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  MUX_cache_tlb$insert_1__SEL_2 or MUX_cache_tlb$insert_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_tlb$insert_pte_pa = cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1230 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d395 =
	     (x1_avValue_pa__h8928[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 :
	       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d394 ;
  assign IF_NOT_cache_rg_lower_word64_full_349_350_AND__ETC___d1500 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       x__h41202 :
	       x__h38689 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d405 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ||
	       IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 :
	       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d404 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d481 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       5'd9 :
	       IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d480 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d749 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       x__h23181 :
	       x__h28670 ;
  assign IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1048 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       x__h25578 :
	       x__h29396 ;
  assign IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d1067 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978 } ;
  assign IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d404 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 &&
	       lrsc_result__h24698 ||
	       cache_f_fabric_write_reqs$FULL_N :
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       cache_rg_width_code_46_EQ_0b100_03_OR_cache_rg_ETC___d342 &&
	       IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399 &&
	       IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 ;
  assign IF_cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_ETC___d480 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       5'd12 :
	       ((!cache_ram_state_and_ctag_cset$DOB[52] ||
		 !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) ?
		  5'd9 :
		  5'd12) ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d483 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 ?
		  5'd4 :
		  IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d481) ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 =
	     x1_avValue_pa__h8928 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h29495 ;
  assign IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d1669 =
	     (cache_rg_width_code == 3'b010) ? b__h43945 : q1__h43780[63:0] ;
  assign IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d948 =
	     (cache_rg_width_code == 3'b010) ? b__h29613 : q1__h29330[63:0] ;
  assign IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 =
	     (cache_rg_width_code == 3'b010) ?
	       b__h30735 :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d376 =
	     x1_avValue_pa__h8928[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d385 =
	     x1_avValue_pa__h8928[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d390 =
	     x1_avValue_pa__h8928[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d394 =
	     x1_avValue_pa__h8928[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d1380 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_11_AND_cac_ETC___d417 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd3 &&
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) ||
	      cache_crg_sb_to_load_delay$port0__write_1 == 11'd0) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1183 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1245 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1287 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1189 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d496 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 ;
  assign NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d474 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1054 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1118 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1123 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1130 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d505 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 ;
  assign NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d832 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1052 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1091 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1098 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1104 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d830 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ;
  assign NOT_cache_rg_priv_66_EQ_0b0_83_35_OR_cache_tlb_ETC___d442 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_tlb$lookup[69] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1057 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1055 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1063 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1060 ||
	      NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d832) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1064 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1063 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1070 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1077 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1083 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1088 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1094 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1091 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1094 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1101 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1098 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1107 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1104 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1108 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1107 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1113 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     lrsc_result__h24698 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1114 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1120 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1118 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1123 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1130 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1136 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d832 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1137 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1136 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d489 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_66_EQ_0b0_83_35_OR_cache_tlb_ETC___d442 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d490 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d489 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d510 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d489 &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d508 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d517 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d489 &&
	     (cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d512 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 &&
	      lrsc_result__h24698) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[69] &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d758 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d756 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d765 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d772 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d777 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d775 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d784 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d754 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d781 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d790 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 ||
	      cache_rg_op != 2'd1 && cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d791 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d790 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d835 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d833 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d836 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d835 ;
  assign NOT_req_width_code_EQ_0b0_760_761_AND_NOT_req__ETC___d1780 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d590 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q21[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d594 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q35[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d598 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q19[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d602 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q34[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d606 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q17[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q17 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d610 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q33[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d614 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q14[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q14 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d618 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q32[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q32 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d622 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q13[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q13 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d626 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q31[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d630 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q11[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q11 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d634 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q30[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d638 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q9[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q9 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d642 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d646 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q7[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q7 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d650 =
	     { {120{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d670 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q20[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d674 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q18[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q18 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d678 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q16[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q16 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d682 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q15[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q15 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d686 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q12[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q12 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d690 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q10[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q10 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d694 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q8[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q8 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d698 =
	     { {112{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q6[15]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q6 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d710 =
	     { {96{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q25[31]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d714 =
	     { {96{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q23[31]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d718 =
	     { {96{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q24[31]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d722 =
	     { {96{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q22[31]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d730 =
	     { {64{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q27[63]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d734 =
	     { {64{cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q26[63]}},
	       cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q26 } ;
  assign _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 =
	     8'd1 << size_val__h43027 <= 8'd8 ;
  assign _theResult___fst__h41173 =
	     (cache_rg_addr[2:0] == 3'd0) ? result__h41175 : 128'd0 ;
  assign _theResult___fst__h9017 =
	     cache_tlb$lookup[130] ? _theResult___fst__h9088 : cache_rg_addr ;
  assign _theResult___fst__h9088 =
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207 ||
	      !cache_tlb$lookup[72]) ?
	       cache_rg_addr :
	       _theResult___fst__h9324 ;
  assign _theResult___snd_fst__h9019 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h9090 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h9090 =
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207 ||
	      !cache_tlb$lookup[72]) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9548 ;
  assign _theResult___snd_fst__h9548 =
	     (!pte___2__h9322[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010)) ?
	       pte___1__h9625 :
	       pte___2__h9322 ;
  assign b__h29613 =
	     { {32{q19330_BITS_31_TO_0__q36[31]}},
	       q19330_BITS_31_TO_0__q36 } ;
  assign b__h30735 =
	     { {32{cache_rg_st_amo_val_BITS_31_TO_0__q1[31]}},
	       cache_rg_st_amo_val_BITS_31_TO_0__q1 } ;
  assign b__h43945 =
	     { {32{q13780_BITS_31_TO_0__q87[31]}},
	       q13780_BITS_31_TO_0__q87 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q88 =
	     cache_master_xactor_shim_arff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q39 =
	     cache_master_xactor_shim_awff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1220 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1230 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1232 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1270 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q53 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q54 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q55 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q40 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h8928[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__16_BIT_5_ETC___d497 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 ||
	     NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d496 ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583 =
	     cache_ram_word128_set$DOB & y__h10478 ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q10 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:80] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q11 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[87:80] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q12 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[79:64] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q13 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[71:64] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q14 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[55:48] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q15 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:48] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q16 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[47:32] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q17 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[39:32] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q18 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:16] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q19 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[23:16] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q20 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[15:0] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q21 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[7:0] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q22 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:96] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q23 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:32] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q24 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:64] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q25 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:0] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q26 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:64] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q27 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:0] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q28 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:120] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q29 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[111:104] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q30 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:88] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q31 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[79:72] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q32 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:56] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q33 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[47:40] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q34 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:24] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q35 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[15:8] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q6 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:112] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q7 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[119:112] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q8 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[111:96] ;
  assign cache_ram_word128_set_b_read__34_AND_cache_ram_ETC__q9 =
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[103:96] ;
  assign cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d781 =
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h8928 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d469 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d508 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__16_BIT_5_ETC___d497 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d506 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d512 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d586 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_rg_width_code == 3'b100 &&
	     cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[128] ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d756 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d775 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1055 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1052 ||
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d1054 ;
  assign cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d1060 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318) ;
  assign cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d506 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d494 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 ||
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d505 ;
  assign cache_rg_op_93_EQ_1_11_OR_cache_rg_op_93_EQ_2__ETC___d833 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d830 ||
	     NOT_cache_rg_op_93_EQ_1_11_02_AND_NOT_cache_rg_ETC___d832 ;
  assign cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) ||
	     !cache_tlb$lookup[69] ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207 ||
	      !cache_tlb$lookup[72]) ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d407 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 ?
		cache_tlb$RDY_lookup :
		IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d405) ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d477 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d212 ||
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d469 ||
	     NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d474 ;
  assign cache_rg_priv_66_ULE_0b1___d167 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q1 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_46_EQ_0b100_03_OR_cache_rg_ETC___d342 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 ;
  assign cline_fabric_addr__h37486 = { cache_rg_pa[63:6], 6'd0 } ;
  assign lev_0_pte_pa__h36277 = lev_1_PTN_pa__h35216 + vpn_0_pa__h36276 ;
  assign lev_0_pte_pa_w64_fa__h36279 = { lev_0_pte_pa__h36277[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h35216 = { 8'd0, x__h35313 } ;
  assign lev_1_pte_pa__h35218 = lev_1_PTN_pa__h35216 + vpn_1_pa__h35217 ;
  assign lev_1_pte_pa_w64_fa__h35220 = { lev_1_pte_pa__h35218[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h34183 = satp_pa__h4621 + vpn_2_pa__h34182 ;
  assign lev_2_pte_pa_w64_fa__h34185 = { lev_2_pte_pa__h34183[63:3], 3'b0 } ;
  assign lrsc_result__h24698 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_17_EQ_IF_cache_rg_priv_66_ULE_ETC___d318 ;
  assign mem_req_wr_addr_awlen__h5972 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5792 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h29495 = { 64'd0, x__h29498 } ;
  assign new_st_val_128__h43827 = { 64'd0, x__h43830 } ;
  assign new_st_val_64__h29503 = { 32'd0, _theResult_____2__h29494[31:0] } ;
  assign new_st_val_64__h29605 =
	     IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d948 +
	     IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ;
  assign new_st_val_64__h30765 = w1__h29337 ^ w2__h29339 ;
  assign new_st_val_64__h30770 = w1__h29337 & w2__h29339 ;
  assign new_st_val_64__h30775 = w1__h29337 | w2__h29339 ;
  assign new_st_val_64__h30780 =
	     (w1__h29337 < w2__h29339) ? w1__h29337 : w2__h29339 ;
  assign new_st_val_64__h30788 =
	     (w1__h29337 <= w2__h29339) ? w2__h29339 : w1__h29337 ;
  assign new_st_val_64__h30797 =
	     ((IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d948 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ^
	       64'h8000000000000000)) ?
	       w1__h29337 :
	       w2__h29339 ;
  assign new_st_val_64__h30805 =
	     ((IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d948 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ^
	       64'h8000000000000000)) ?
	       w2__h29339 :
	       w1__h29337 ;
  assign new_st_val_64__h43835 = { 32'd0, _theResult_____2__h43826[31:0] } ;
  assign new_st_val_64__h43937 =
	     IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d1669 +
	     IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ;
  assign new_st_val_64__h45792 = w1__h43787 ^ w2__h29339 ;
  assign new_st_val_64__h45797 = w1__h43787 & w2__h29339 ;
  assign new_st_val_64__h45802 = w1__h43787 | w2__h29339 ;
  assign new_st_val_64__h45807 =
	     (w1__h43787 < w2__h29339) ? w1__h43787 : w2__h29339 ;
  assign new_st_val_64__h45815 =
	     (w1__h43787 <= w2__h29339) ? w2__h29339 : w1__h43787 ;
  assign new_st_val_64__h45824 =
	     ((IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d1669 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ^
	       64'h8000000000000000)) ?
	       w1__h43787 :
	       w2__h29339 ;
  assign new_st_val_64__h45832 =
	     ((IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d1669 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_46_EQ_0b10_93_THEN_SEXT_ETC___d950 ^
	       64'h8000000000000000)) ?
	       w2__h29339 :
	       w1__h43787 ;
  assign pa___1__h9330 = { 8'd0, x__h9333 } ;
  assign pa___1__h9379 = { 8'd0, x__h9382 } ;
  assign pa___1__h9448 = { 8'd0, x__h9451 } ;
  assign pte___1__h9597 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9625 =
	     { pte___2__h9322[63:8], 1'd1, pte___2__h9322[6:0] } ;
  assign pte___2__h9322 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9597 ;
  assign q13780_BITS_31_TO_0__q87 = q1__h43780[31:0] ;
  assign q19330_BITS_31_TO_0__q36 = q1__h29330[31:0] ;
  assign req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1796 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1801 =
	     (req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1796 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign result__h10425 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:0] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d730 ;
  assign result__h10427 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:64] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d734 ;
  assign result__h23192 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d590 ;
  assign result__h23230 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d594 ;
  assign result__h23263 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d598 ;
  assign result__h23296 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d602 ;
  assign result__h23329 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d606 ;
  assign result__h23362 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d610 ;
  assign result__h23395 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d614 ;
  assign result__h23428 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d618 ;
  assign result__h23461 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d622 ;
  assign result__h23494 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d626 ;
  assign result__h23527 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d630 ;
  assign result__h23560 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d634 ;
  assign result__h23593 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d638 ;
  assign result__h23626 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d642 ;
  assign result__h23659 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d646 ;
  assign result__h23692 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d650 ;
  assign result__h23747 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d670 ;
  assign result__h23780 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d674 ;
  assign result__h23813 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d678 ;
  assign result__h23846 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d682 ;
  assign result__h23879 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d686 ;
  assign result__h23912 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d690 ;
  assign result__h23945 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d694 ;
  assign result__h23978 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d698 ;
  assign result__h24025 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d710 ;
  assign result__h24058 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d714 ;
  assign result__h24091 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d718 ;
  assign result__h24124 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d722 ;
  assign result__h41175 =
	     cache_rg_is_unsigned ?
	       word128__h41068 :
	       { {64{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41[63]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 } ;
  assign result__h41213 =
	     cache_rg_is_unsigned ?
	       { 120'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 } ;
  assign result__h41249 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 } ;
  assign result__h41282 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 } ;
  assign result__h41315 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 } ;
  assign result__h41348 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 } ;
  assign result__h41381 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50 } ;
  assign result__h41414 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q53[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q53 } ;
  assign result__h41447 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q55[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q55 } ;
  assign result__h41510 =
	     cache_rg_is_unsigned ?
	       { 112'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 } ;
  assign result__h41543 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 } ;
  assign result__h41576 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51 } ;
  assign result__h41609 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q54[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q54 } ;
  assign result__h41660 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 } ;
  assign result__h41693 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52 } ;
  assign result__h44078 =
	     { {120{word1284003_BITS_7_TO_0__q57[7]}},
	       word1284003_BITS_7_TO_0__q57 } ;
  assign result__h44775 =
	     { {120{word1284003_BITS_15_TO_8__q61[7]}},
	       word1284003_BITS_15_TO_8__q61 } ;
  assign result__h44807 =
	     { {120{word1284003_BITS_23_TO_16__q62[7]}},
	       word1284003_BITS_23_TO_16__q62 } ;
  assign result__h44839 =
	     { {120{word1284003_BITS_31_TO_24__q64[7]}},
	       word1284003_BITS_31_TO_24__q64 } ;
  assign result__h44871 =
	     { {120{word1284003_BITS_39_TO_32__q65[7]}},
	       word1284003_BITS_39_TO_32__q65 } ;
  assign result__h44903 =
	     { {120{word1284003_BITS_47_TO_40__q68[7]}},
	       word1284003_BITS_47_TO_40__q68 } ;
  assign result__h44935 =
	     { {120{word1284003_BITS_55_TO_48__q69[7]}},
	       word1284003_BITS_55_TO_48__q69 } ;
  assign result__h44967 =
	     { {120{word1284003_BITS_63_TO_56__q71[7]}},
	       word1284003_BITS_63_TO_56__q71 } ;
  assign result__h44999 =
	     { {120{word1284003_BITS_71_TO_64__q72[7]}},
	       word1284003_BITS_71_TO_64__q72 } ;
  assign result__h45031 =
	     { {120{word1284003_BITS_79_TO_72__q76[7]}},
	       word1284003_BITS_79_TO_72__q76 } ;
  assign result__h45063 =
	     { {120{word1284003_BITS_87_TO_80__q77[7]}},
	       word1284003_BITS_87_TO_80__q77 } ;
  assign result__h45095 =
	     { {120{word1284003_BITS_95_TO_88__q79[7]}},
	       word1284003_BITS_95_TO_88__q79 } ;
  assign result__h45127 =
	     { {120{word1284003_BITS_103_TO_96__q80[7]}},
	       word1284003_BITS_103_TO_96__q80 } ;
  assign result__h45159 =
	     { {120{word1284003_BITS_111_TO_104__q83[7]}},
	       word1284003_BITS_111_TO_104__q83 } ;
  assign result__h45191 =
	     { {120{word1284003_BITS_119_TO_112__q84[7]}},
	       word1284003_BITS_119_TO_112__q84 } ;
  assign result__h45223 =
	     { {120{word1284003_BITS_127_TO_120__q86[7]}},
	       word1284003_BITS_127_TO_120__q86 } ;
  assign result__h45277 =
	     { {112{word1284003_BITS_15_TO_0__q58[15]}},
	       word1284003_BITS_15_TO_0__q58 } ;
  assign result__h45309 =
	     { {112{word1284003_BITS_31_TO_16__q63[15]}},
	       word1284003_BITS_31_TO_16__q63 } ;
  assign result__h45341 =
	     { {112{word1284003_BITS_47_TO_32__q66[15]}},
	       word1284003_BITS_47_TO_32__q66 } ;
  assign result__h45373 =
	     { {112{word1284003_BITS_63_TO_48__q70[15]}},
	       word1284003_BITS_63_TO_48__q70 } ;
  assign result__h45405 =
	     { {112{word1284003_BITS_79_TO_64__q73[15]}},
	       word1284003_BITS_79_TO_64__q73 } ;
  assign result__h45437 =
	     { {112{word1284003_BITS_95_TO_80__q78[15]}},
	       word1284003_BITS_95_TO_80__q78 } ;
  assign result__h45469 =
	     { {112{word1284003_BITS_111_TO_96__q81[15]}},
	       word1284003_BITS_111_TO_96__q81 } ;
  assign result__h45501 =
	     { {112{word1284003_BITS_127_TO_112__q85[15]}},
	       word1284003_BITS_127_TO_112__q85 } ;
  assign result__h45547 =
	     { {96{word1284003_BITS_31_TO_0__q60[31]}},
	       word1284003_BITS_31_TO_0__q60 } ;
  assign result__h45579 =
	     { {96{word1284003_BITS_63_TO_32__q67[31]}},
	       word1284003_BITS_63_TO_32__q67 } ;
  assign result__h45611 =
	     { {96{word1284003_BITS_95_TO_64__q74[31]}},
	       word1284003_BITS_95_TO_64__q74 } ;
  assign result__h45643 =
	     { {96{word1284003_BITS_127_TO_96__q82[31]}},
	       word1284003_BITS_127_TO_96__q82 } ;
  assign result__h45697 =
	     { {64{word1284003_BITS_63_TO_0__q59[63]}},
	       word1284003_BITS_63_TO_0__q59 } ;
  assign result__h45726 =
	     { {64{word1284003_BITS_127_TO_64__q75[63]}},
	       word1284003_BITS_127_TO_64__q75 } ;
  assign satp_pa__h4621 = { 8'd0, x__h8064 } ;
  assign shift_bits__h5677 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5989 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5996 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6000 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6004 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign value__h9642 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h9019 :
	       cache_tlb$lookup[129:66] ;
  assign vpn_0_pa__h36276 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h35217 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h34182 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w1___1__h29570 = { 32'd0, q1__h29330[31:0] } ;
  assign w1___1__h43902 = { 32'd0, q1__h43780[31:0] } ;
  assign w1__h29337 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h29570 :
	       q1__h29330[63:0] ;
  assign w1__h43787 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h43902 :
	       q1__h43780[63:0] ;
  assign w2__h29339 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word1284003_BITS_103_TO_96__q80 = word128__h44003[103:96] ;
  assign word1284003_BITS_111_TO_104__q83 = word128__h44003[111:104] ;
  assign word1284003_BITS_111_TO_96__q81 = word128__h44003[111:96] ;
  assign word1284003_BITS_119_TO_112__q84 = word128__h44003[119:112] ;
  assign word1284003_BITS_127_TO_112__q85 = word128__h44003[127:112] ;
  assign word1284003_BITS_127_TO_120__q86 = word128__h44003[127:120] ;
  assign word1284003_BITS_127_TO_64__q75 = word128__h44003[127:64] ;
  assign word1284003_BITS_127_TO_96__q82 = word128__h44003[127:96] ;
  assign word1284003_BITS_15_TO_0__q58 = word128__h44003[15:0] ;
  assign word1284003_BITS_15_TO_8__q61 = word128__h44003[15:8] ;
  assign word1284003_BITS_23_TO_16__q62 = word128__h44003[23:16] ;
  assign word1284003_BITS_31_TO_0__q60 = word128__h44003[31:0] ;
  assign word1284003_BITS_31_TO_16__q63 = word128__h44003[31:16] ;
  assign word1284003_BITS_31_TO_24__q64 = word128__h44003[31:24] ;
  assign word1284003_BITS_39_TO_32__q65 = word128__h44003[39:32] ;
  assign word1284003_BITS_47_TO_32__q66 = word128__h44003[47:32] ;
  assign word1284003_BITS_47_TO_40__q68 = word128__h44003[47:40] ;
  assign word1284003_BITS_55_TO_48__q69 = word128__h44003[55:48] ;
  assign word1284003_BITS_63_TO_0__q59 = word128__h44003[63:0] ;
  assign word1284003_BITS_63_TO_32__q67 = word128__h44003[63:32] ;
  assign word1284003_BITS_63_TO_48__q70 = word128__h44003[63:48] ;
  assign word1284003_BITS_63_TO_56__q71 = word128__h44003[63:56] ;
  assign word1284003_BITS_71_TO_64__q72 = word128__h44003[71:64] ;
  assign word1284003_BITS_79_TO_64__q73 = word128__h44003[79:64] ;
  assign word1284003_BITS_79_TO_72__q76 = word128__h44003[79:72] ;
  assign word1284003_BITS_7_TO_0__q57 = word128__h44003[7:0] ;
  assign word1284003_BITS_87_TO_80__q77 = word128__h44003[87:80] ;
  assign word1284003_BITS_95_TO_64__q74 = word128__h44003[95:64] ;
  assign word1284003_BITS_95_TO_80__q78 = word128__h44003[95:80] ;
  assign word1284003_BITS_95_TO_88__q79 = word128__h44003[95:88] ;
  assign word128__h41068 =
	     { 64'd0, cache_master_xactor_shim_rff_rv$port1__read[67:4] } ;
  assign word128__h44003 =
	     cache_rg_lower_word64_full ? x__h38689 : x__h41202 ;
  assign word64__h5988 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5677 ;
  assign x1_avValue_pa__h8928 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h9017 :
	       cache_rg_addr ;
  assign x__h29498 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h29503 :
	       _theResult_____2__h29494 ;
  assign x__h35313 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h38689 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign x__h43820 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h43827 ;
  assign x__h43830 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h43835 :
	       _theResult_____2__h43826 ;
  assign x__h8064 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9333 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9382 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9451 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10478 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__16_BITS__ETC___d243}} ;
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: x__h28670 = 128'd1;
      default: x__h28670 = 128'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5654 = 8'd0;
      3'b100: fabric_2_strb__h5654 = 8'b11111111;
      default: fabric_2_strb__h5654 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h6011 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h6011 = 3'b011;
      default: _theResult___snd_snd_fst_val__h6011 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h43027 = cache_rg_width_code;
      default: size_val__h43027 = 3'b100;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5989 or
	  strobe64__h5996 or strobe64__h6000 or strobe64__h6004)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6070 = strobe64__h5989;
      3'b001: mem_req_wr_data_wstrb__h6070 = strobe64__h5996;
      3'b010: mem_req_wr_data_wstrb__h6070 = strobe64__h6000;
      3'b011: mem_req_wr_data_wstrb__h6070 = strobe64__h6004;
      3'b100: mem_req_wr_data_wstrb__h6070 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6070 = 8'd0;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9330 or pa___1__h9379 or pa___1__h9448)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9324 = pa___1__h9330;
      2'd1: _theResult___fst__h9324 = pa___1__h9379;
      2'd2: _theResult___fst__h9324 = pa___1__h9448;
      2'd3: _theResult___fst__h9324 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5988)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6069 = word64__h5988;
      default: mem_req_wr_data_wdata__h6069 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q2 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
      4'd15:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q2 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q3 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q3 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q4 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q4 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q2 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q3 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q4 or
	  cache_rg_addr)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q2;
      3'd1:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q3;
      3'b010:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q4;
      3'd3:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 =
	      (cache_rg_addr[3:0] == 4'h0) ?
		NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278 :
		cache_rg_addr[3:0] != 4'h8 ||
		NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
      default: IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__16_B_ETC___d278;
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 =
	      IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309;
      default: CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5 =
		   cache_rg_amo_funct7[6:2] != 5'b10100 ||
		   IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_cach_ETC___d309;
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d390 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d391 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5;
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d391 =
		   NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d390;
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d385 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d386 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5;
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d386 =
		   NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d385;
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d376 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d377 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q5;
      4'd15:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d377 =
	      NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d376;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d395 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d377 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d386 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d391)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d377;
      3'd1:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d386;
      3'b010:
	  IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d391;
      default: IF_cache_rg_width_code_46_EQ_0_47_THEN_IF_IF_c_ETC___d399 =
		   cache_rg_width_code != 3'd3 ||
		   IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d395;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d730 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d734)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h30670 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d730;
      4'h8:
	  _theResult___fst__h30670 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d734;
      default: _theResult___fst__h30670 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h10425 or result__h10427)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h10423 = result__h10425;
      4'h8: _theResult___fst__h10423 = result__h10427;
      default: _theResult___fst__h10423 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d710 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d714 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d718 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d722)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d710;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d714;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d718;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d722;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h24025 or
	  result__h24058 or result__h24091 or result__h24124)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 =
	      result__h24025;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 =
	      result__h24058;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 =
	      result__h24091;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 =
	      result__h24124;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d670 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d674 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d678 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d682 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d686 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d690 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d694 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d698)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d670;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d674;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d678;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d682;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d686;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d690;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d694;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d698;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h23747 or
	  result__h23780 or
	  result__h23813 or
	  result__h23846 or
	  result__h23879 or
	  result__h23912 or result__h23945 or result__h23978)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23747;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23780;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23813;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23846;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23879;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23912;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23945;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
	      result__h23978;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h23192 or
	  result__h23230 or
	  result__h23263 or
	  result__h23296 or
	  result__h23329 or
	  result__h23362 or
	  result__h23395 or
	  result__h23428 or
	  result__h23461 or
	  result__h23494 or
	  result__h23527 or
	  result__h23560 or
	  result__h23593 or
	  result__h23626 or result__h23659 or result__h23692)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23192;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23230;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23263;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23296;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23329;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23362;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23395;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23428;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23461;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23494;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23527;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23560;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23593;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23626;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23659;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 =
	      result__h23692;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727 or
	  _theResult___fst__h10423 or
	  cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h23181 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d667;
      3'd1:
	  x__h23181 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d707;
      3'b010:
	  x__h23181 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d727;
      3'd3: x__h23181 = _theResult___fst__h10423;
      3'b100:
	  x__h23181 =
	      cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:0];
      default: x__h23181 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d590 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d594 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d598 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d602 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d606 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d610 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d614 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d618 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d622 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d626 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d630 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d634 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d638 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d642 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d646 or
	  SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d650)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d590;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d594;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d598;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d602;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d606;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d610;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d614;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d618;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d622;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d626;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d630;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d634;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d638;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d642;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d646;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 =
	      SEXT_cache_ram_word128_set_b_read__34_AND_cach_ETC___d650;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821 or
	  _theResult___fst__h30670 or
	  cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h29330 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d809;
      3'd1:
	  q1__h29330 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d817;
      3'b010:
	  q1__h29330 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d821;
      3'd3: q1__h29330 = _theResult___fst__h30670;
      3'b100:
	  q1__h29330 =
	      cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583[127:0];
      default: q1__h29330 = 128'd0;
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 =
	      { cache_rg_st_amo_val[31:0], cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
	      { cache_rg_st_amo_val[15:0], cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:24],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:40],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:56],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:72],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:88],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:104],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_ram_word128_set$DOB[127:120],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 =
	      { cache_rg_st_amo_val[7:0], cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37 =
	      { cache_rg_st_amo_val[63:0], cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931 or
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h25578 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d905;
      3'd1:
	  x__h25578 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d922;
      3'b010:
	  x__h25578 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d931;
      3'd3:
	  x__h25578 = CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q37;
      3'b100: x__h25578 = cache_rg_st_amo_val[127:0];
      default: x__h25578 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  new_st_val_64__h30805 or
	  new_st_val_64__h29605 or
	  w2__h29339 or
	  new_st_val_64__h30765 or
	  new_st_val_64__h30775 or
	  new_st_val_64__h30770 or
	  new_st_val_64__h30797 or
	  new_st_val_64__h30780 or new_st_val_64__h30788)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0: _theResult_____2__h29494 = new_st_val_64__h29605;
      5'b00001: _theResult_____2__h29494 = w2__h29339;
      5'b00100: _theResult_____2__h29494 = new_st_val_64__h30765;
      5'b01000: _theResult_____2__h29494 = new_st_val_64__h30775;
      5'b01100: _theResult_____2__h29494 = new_st_val_64__h30770;
      5'b10000: _theResult_____2__h29494 = new_st_val_64__h30797;
      5'b11000: _theResult_____2__h29494 = new_st_val_64__h30780;
      5'b11100: _theResult_____2__h29494 = new_st_val_64__h30788;
      default: _theResult_____2__h29494 = new_st_val_64__h30805;
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 =
	      { IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[31:0],
		cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
	      { IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[15:0],
		cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:8],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:24],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:40],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:56],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:72],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:88],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:104],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { cache_ram_word128_set$DOB[127:120],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 =
	      { IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[7:0],
		cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8928 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978)
  begin
    case (x1_avValue_pa__h8928[3:0])
      4'h0:
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[63:0] };
      4'h8:
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38 =
	      { IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978[63:0],
		cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037 or
	  CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38 or
	  IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h29396 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1011;
      3'd1:
	  x__h29396 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1028;
      3'b010:
	  x__h29396 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1037;
      3'd3:
	  x__h29396 = CASE_x1_avValue_pa928_BITS_3_TO_0_0x0_cache_ra_ETC__q38;
      3'b100:
	  x__h29396 =
	      IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978;
      default: x__h29396 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  result__h41510 or
	  result__h41543 or result__h41576 or result__h41609)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 =
	      result__h41510;
      3'd2:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 =
	      result__h41543;
      3'd4:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 =
	      result__h41576;
      3'd6:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 =
	      result__h41609;
      default: IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h41213 or
	  result__h41249 or
	  result__h41282 or
	  result__h41315 or
	  result__h41348 or
	  result__h41381 or result__h41414 or result__h41447)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41213;
      3'd1:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41249;
      3'd2:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41282;
      3'd3:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41315;
      3'd4:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41348;
      3'd5:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41381;
      3'd6:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41414;
      3'd7:
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 =
	      result__h41447;
    endcase
  end
  always@(cache_rg_addr or result__h41660 or result__h41693)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56 =
	      result__h41660;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56 =
	      result__h41693;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56 =
		   128'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459 or
	  IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56 or
	  _theResult___fst__h41173 or word128__h41068)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h41202 =
	      IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1459;
      3'd1:
	  x__h41202 =
	      IF_cache_rg_addr_77_BITS_2_TO_0_411_EQ_0_412_T_ETC___d1479;
      3'b010:
	  x__h41202 = CASE_cache_rg_addr_BITS_2_TO_0_0_result1660_4__ETC__q56;
      3'd3: x__h41202 = _theResult___fst__h41173;
      3'b100: x__h41202 = word128__h41068;
      default: x__h41202 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h45697 or result__h45726)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h45695 = result__h45697;
      4'h8: _theResult___fst__h45695 = result__h45726;
      default: _theResult___fst__h45695 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h45547 or
	  result__h45579 or result__h45611 or result__h45643)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 =
	      result__h45547;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 =
	      result__h45579;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 =
	      result__h45611;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 =
	      result__h45643;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h45277 or
	  result__h45309 or
	  result__h45341 or
	  result__h45373 or
	  result__h45405 or
	  result__h45437 or result__h45469 or result__h45501)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45277;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45309;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45341;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45373;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45405;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45437;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45469;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
	      result__h45501;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h44078 or
	  result__h44775 or
	  result__h44807 or
	  result__h44839 or
	  result__h44871 or
	  result__h44903 or
	  result__h44935 or
	  result__h44967 or
	  result__h44999 or
	  result__h45031 or
	  result__h45063 or
	  result__h45095 or
	  result__h45127 or
	  result__h45159 or result__h45191 or result__h45223)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44078;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44775;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44807;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44839;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44871;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44903;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44935;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44967;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h44999;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45031;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45063;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45095;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45127;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45159;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45191;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 =
	      result__h45223;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654 or
	  _theResult___fst__h45695 or word128__h44003)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h43780 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1618;
      3'd1:
	  q1__h43780 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1642;
      3'b010:
	  q1__h43780 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_48_EQ_0x0_49_T_ETC___d1654;
      3'd3: q1__h43780 = _theResult___fst__h45695;
      3'b100: q1__h43780 = word128__h44003;
      default: q1__h43780 = 128'd0;
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  new_st_val_64__h45832 or
	  new_st_val_64__h43937 or
	  w2__h29339 or
	  new_st_val_64__h45792 or
	  new_st_val_64__h45802 or
	  new_st_val_64__h45797 or
	  new_st_val_64__h45824 or
	  new_st_val_64__h45807 or new_st_val_64__h45815)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0: _theResult_____2__h43826 = new_st_val_64__h43937;
      5'b00001: _theResult_____2__h43826 = w2__h29339;
      5'b00100: _theResult_____2__h43826 = new_st_val_64__h45792;
      5'b01000: _theResult_____2__h43826 = new_st_val_64__h45802;
      5'b01100: _theResult_____2__h43826 = new_st_val_64__h45797;
      5'b10000: _theResult_____2__h43826 = new_st_val_64__h45824;
      5'b11000: _theResult_____2__h43826 = new_st_val_64__h45807;
      5'b11100: _theResult_____2__h43826 = new_st_val_64__h45815;
      default: _theResult_____2__h43826 = new_st_val_64__h45832;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_commit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY 11'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 8'd42;
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    74'h0AAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    75'h2AAAAAAAAAAAAAAAAAA;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_commit$EN)
	  cache_crg_commit <= `BSV_ASSIGNMENT_DELAY cache_crg_commit$D_IN;
	if (cache_crg_sb_to_load_delay$EN)
	  cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY
	      cache_crg_sb_to_load_delay$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct7$EN)
      cache_rg_amo_funct7 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct7$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_commit = 1'h0;
    cache_crg_sb_to_load_delay = 11'h2AA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 8'hAA;
    cache_master_xactor_shim_rff_rv = 74'h2AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct7 = 7'h2A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5972);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h6011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6069);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6070);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5792, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7383 = $stime;
	  #0;
	end
    v__h7377 = v__h7383 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7377,
		 "I_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7486 = $stime;
	  #0;
	end
    v__h7480 = v__h7486 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7480, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7944 = $stime;
	  #0;
	end
    v__h7938 = v__h7944 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7938,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4621,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130] &&
	   NOT_cache_rg_priv_66_EQ_0b0_83_35_OR_cache_tlb_ETC___d442 &&
	   cache_tlb$lookup[72]))
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_66_ULE_0b1___d167 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d207 ||
	   !cache_tlb$lookup[72]) &&
	  cache_tlb$lookup[130])
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_66_ULE_0b1___d167 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9642, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d758)
	begin
	  v__h24308 = $stime;
	  #0;
	end
    v__h24302 = v__h24308 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d758)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h24302,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d772)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d758)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d777)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d784)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1070)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1077)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1083)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1088)
	$display("        AMO SC result = %0d", lrsc_result__h24698);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8928,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h25578 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1095)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1101)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8928,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1108)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1108)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1114)
	begin
	  v__h28888 = $stime;
	  #0;
	end
    v__h28882 = v__h28888 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1114)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h28882,
		 "I_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1114)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1120)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$display("        AMO: addr 0x%0h amo_f7 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct7,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$display("          PA 0x%0h ", x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583,
		 cache_ram_word128_set_b_read__34_AND_cache_ram_ETC___d583,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_46_EQ_0b100_03_THEN_cac_ETC___d978 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h29396 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1126)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8928);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34130 = $stime;
	  #0;
	end
    v__h34124 = v__h34130 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h34124,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h34185);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h6939 = $stime;
	  #0;
	end
    v__h6933 = v__h6939 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_reset", v__h6933, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40299 = $stime;
	  #0;
	end
    v__h40293 = v__h40299 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h40293,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43027, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42362 = $stime;
	  #0;
	end
    v__h42356 = v__h42362 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42356,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42453 = $stime;
	  #0;
	end
    v__h42447 = v__h42453 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h42447,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42674 = $stime;
	  #0;
	end
    v__h42668 = v__h42674 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h42668,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42799 = $stime;
	  #0;
	end
    v__h42793 = v__h42799 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h42793,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43027, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_46_EQ_0_47_OR_cach_ETC___d1390 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h46277 = $stime;
	  #0;
	end
    v__h46271 = v__h46277 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h46271,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46524 = $stime;
	  #0;
	end
    v__h46518 = v__h46524 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h46518,
	       "I_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h46485 = $stime;
	  #0;
	end
    v__h46479 = v__h46485 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h46479,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35186 = $stime;
	  #0;
	end
    v__h35180 = v__h35186 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h35180,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34943 = $stime;
	  #0;
	end
    v__h34937 = v__h34943 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h34937,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h35220);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1220)
	begin
	  v__h35491 = $stime;
	  #0;
	end
    v__h35485 = v__h35491 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1220)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h35485,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1232)
	begin
	  v__h35603 = $stime;
	  #0;
	end
    v__h35597 = v__h35603 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1232)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h35597,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1232)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35216);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35115 = $stime;
	  #0;
	end
    v__h35109 = v__h35115 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h35109,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36245 = $stime;
	  #0;
	end
    v__h36239 = v__h36245 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h36239,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36005 = $stime;
	  #0;
	end
    v__h35999 = v__h36005 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h35999,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h36279);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1270)
	begin
	  v__h36662 = $stime;
	  #0;
	end
    v__h36656 = v__h36662 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1270)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h36656,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1270)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35216);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276)
	begin
	  v__h36550 = $stime;
	  #0;
	end
    v__h36544 = v__h36550 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h36544,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36174 = $stime;
	  #0;
	end
    v__h36168 = v__h36174 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h36168,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37142 = $stime;
	  #0;
	end
    v__h37136 = v__h37142 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h37136,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37213 = $stime;
	  #0;
	end
    v__h37207 = v__h37213 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h37207,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37295 = $stime;
	  #0;
	end
    v__h37289 = v__h37295 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h37289,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h35216);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37071 = $stime;
	  #0;
	end
    v__h37065 = v__h37071 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h37065,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40883 = $stime;
	  #0;
	end
    v__h40877 = v__h40883 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h40877,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42020 = $stime;
	  #0;
	end
    v__h42014 = v__h42020 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42014,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h41202 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42135 = $stime;
	  #0;
	end
    v__h42129 = v__h42135 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42129,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41858 = $stime;
	  #0;
	end
    v__h41852 = v__h41858 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h41852,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h38689 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42246 = $stime;
	  #0;
	end
    v__h42240 = v__h42246 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42240,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43318 = $stime;
	  #0;
	end
    v__h43312 = v__h43318 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h43312,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43687 = $stime;
	  #0;
	end
    v__h43681 = v__h43687 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h43681,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h45967 = $stime;
	  #0;
	end
    v__h45961 = v__h45967 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h45961,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, q1__h43780 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43615 = $stime;
	  #0;
	end
    v__h43609 = v__h43615 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h43609,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46920 = $stime;
	  #0;
	end
    v__h46914 = v__h46920 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h46914);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct7 = 0x%0h", req_amo_funct7);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req &&
	  req_width_code_EQ_0b0_760_OR_req_width_code_EQ_ETC___d1801)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37433 = $stime;
	  #0;
	end
    v__h37427 = v__h37433 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h37427, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h37486);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	begin
	  v__h38226 = $stime;
	  #0;
	end
    v__h38220 = v__h38226 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h38220,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h38468 = $stime;
	  #0;
	end
    v__h38462 = v__h38468 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h38462,
		 "I_MMU_Cache",
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write(" 0x%0x",
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_327___d1328)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48352 = $stime;
	  #0;
	end
    v__h48346 = v__h48352 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h48346, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_ICache

