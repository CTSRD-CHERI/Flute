//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1
// mem_master_awid                O     5
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     5
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     5
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     5
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_req -> RDY_server_flush_request_put
//   EN_req -> RDY_tlb_flush
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_ICache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [4 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [4 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [4 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [4 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [4 : 0] mem_master_arid, mem_master_awid;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [98 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [10 : 0] cache_crg_sb_to_load_delay$port0__write_1,
		cache_crg_sb_to_load_delay$port2__read;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [6 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_commit$port1__read,
       cache_crg_commit$port3__read,
       cache_crg_sb_to_load_delay$EN_port1__write,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_commit
  reg cache_crg_commit;
  wire cache_crg_commit$D_IN, cache_crg_commit$EN;

  // register cache_crg_sb_to_load_delay
  reg [10 : 0] cache_crg_sb_to_load_delay;
  wire [10 : 0] cache_crg_sb_to_load_delay$D_IN;
  wire cache_crg_sb_to_load_delay$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [98 : 0] cache_master_xactor_shim_arff_rv;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [98 : 0] cache_master_xactor_shim_awff_rv;
  wire [98 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [7 : 0] cache_master_xactor_shim_bff_rv;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [73 : 0] cache_master_xactor_shim_rff_rv;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  reg [105 : 0] cache_ram_state_and_ctag_cset$DIB;
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [257 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [257 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1;
  wire [98 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_2,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_10,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_2__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_4,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_exc_code$write_1__SEL_8,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_17,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7502;
  reg [31 : 0] v__h7603;
  reg [31 : 0] v__h8040;
  reg [31 : 0] v__h37571;
  reg [31 : 0] v__h42305;
  reg [31 : 0] v__h47643;
  reg [63 : 0] v__h47913;
  reg [31 : 0] v__h6953;
  reg [31 : 0] v__h54917;
  reg [63 : 0] v__h55181;
  reg [63 : 0] v__h55301;
  reg [31 : 0] v__h57016;
  reg [31 : 0] v__h57107;
  reg [31 : 0] v__h57328;
  reg [31 : 0] v__h57453;
  reg [63 : 0] v__h57708;
  reg [63 : 0] v__h57828;
  reg [31 : 0] v__h60898;
  reg [31 : 0] v__h61145;
  reg [31 : 0] v__h61106;
  reg [31 : 0] v__h48717;
  reg [31 : 0] v__h48474;
  reg [63 : 0] v__h48895;
  reg [31 : 0] v__h49040;
  reg [31 : 0] v__h49152;
  reg [31 : 0] v__h48646;
  reg [31 : 0] v__h49794;
  reg [31 : 0] v__h49554;
  reg [63 : 0] v__h49972;
  reg [31 : 0] v__h50229;
  reg [31 : 0] v__h50117;
  reg [31 : 0] v__h49723;
  reg [31 : 0] v__h50709;
  reg [31 : 0] v__h50780;
  reg [31 : 0] v__h50862;
  reg [31 : 0] v__h50638;
  reg [31 : 0] v__h55537;
  reg [31 : 0] v__h56674;
  reg [31 : 0] v__h56789;
  reg [31 : 0] v__h56512;
  reg [31 : 0] v__h56900;
  reg [31 : 0] v__h58008;
  reg [31 : 0] v__h58377;
  reg [31 : 0] v__h60588;
  reg [31 : 0] v__h58305;
  reg [31 : 0] v__h61541;
  reg [31 : 0] v__h51000;
  reg [63 : 0] v__h51168;
  reg [31 : 0] v__h52023;
  reg [31 : 0] v__h52265;
  reg [31 : 0] v__h63176;
  reg [31 : 0] v__h6947;
  reg [31 : 0] v__h7496;
  reg [31 : 0] v__h7597;
  reg [31 : 0] v__h8034;
  reg [31 : 0] v__h37565;
  reg [31 : 0] v__h42299;
  reg [31 : 0] v__h47637;
  reg [31 : 0] v__h48468;
  reg [31 : 0] v__h48640;
  reg [31 : 0] v__h48711;
  reg [31 : 0] v__h49034;
  reg [31 : 0] v__h49146;
  reg [31 : 0] v__h49548;
  reg [31 : 0] v__h49717;
  reg [31 : 0] v__h49788;
  reg [31 : 0] v__h50111;
  reg [31 : 0] v__h50223;
  reg [31 : 0] v__h50632;
  reg [31 : 0] v__h50703;
  reg [31 : 0] v__h50774;
  reg [31 : 0] v__h50856;
  reg [31 : 0] v__h50994;
  reg [31 : 0] v__h52017;
  reg [31 : 0] v__h52259;
  reg [31 : 0] v__h54911;
  reg [31 : 0] v__h55531;
  reg [31 : 0] v__h56506;
  reg [31 : 0] v__h56668;
  reg [31 : 0] v__h56783;
  reg [31 : 0] v__h56894;
  reg [31 : 0] v__h57010;
  reg [31 : 0] v__h57101;
  reg [31 : 0] v__h57322;
  reg [31 : 0] v__h57447;
  reg [31 : 0] v__h58002;
  reg [31 : 0] v__h58299;
  reg [31 : 0] v__h58371;
  reg [31 : 0] v__h60582;
  reg [31 : 0] v__h60892;
  reg [31 : 0] v__h61100;
  reg [31 : 0] v__h61139;
  reg [31 : 0] v__h61535;
  reg [31 : 0] v__h63170;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53,
		CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32,
		CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140,
		IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149,
		IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593,
		IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922,
		IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926,
		_theResult___fst__h10977,
		_theResult___fst__h44067,
		_theResult___fst__h60336,
		b__h38780,
		b__h42706,
		new_word128__h38761,
		q1__h42776,
		q1__h58470,
		x__h36444,
		x__h42087,
		x__h55856;
  reg [63 : 0] _theResult_____2__h42934,
	       _theResult_____2__h58510,
	       _theResult___fst__h9782,
	       mem_req_wr_data_wdata__h6093;
  reg [7 : 0] fabric_2_strb__h5678, mem_req_wr_data_wstrb__h6094;
  reg [2 : 0] _theResult___snd_snd_fst_val__h6035, size_val__h57681;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1,
      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d399,
      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d409,
      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d415,
      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d292,
      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d302,
      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d308,
      IF_cache_rg_width_code_54_EQ_0_55_OR_cache_rg__ETC___d337,
      IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319,
      IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1053,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1162,
		 IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1052,
		 IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1161,
		 IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d1182,
		 IF_cache_rg_victim_way_437_THEN_cache_master_x_ETC___d1507,
		 IF_cache_rg_victim_way_437_THEN_cache_ram_word_ETC___d1506,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689,
		 x__h11029,
		 y__h11030,
		 y__h11045,
		 y__h23741;
  wire [127 : 0] IF_NOT_cache_rg_lower_word64_full_468_469_AND__ETC___d1634,
		 IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d855,
		 IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d696,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d700,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d704,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d708,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d712,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d716,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d720,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d724,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d728,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d732,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d736,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d740,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d744,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d748,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d752,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d756,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d776,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d780,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d784,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d788,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d792,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d796,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d800,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d804,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d816,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d820,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d824,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d828,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d836,
		 SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d840,
		 _theResult___fst__h55827,
		 b__h52483,
		 new_st_val_128__h42935,
		 new_st_val_128__h58511,
		 result__h10979,
		 result__h10981,
		 result__h36455,
		 result__h36493,
		 result__h36526,
		 result__h36559,
		 result__h36592,
		 result__h36625,
		 result__h36658,
		 result__h36691,
		 result__h36724,
		 result__h36757,
		 result__h36790,
		 result__h36823,
		 result__h36856,
		 result__h36889,
		 result__h36922,
		 result__h36955,
		 result__h37010,
		 result__h37043,
		 result__h37076,
		 result__h37109,
		 result__h37142,
		 result__h37175,
		 result__h37208,
		 result__h37241,
		 result__h37288,
		 result__h37321,
		 result__h37354,
		 result__h37387,
		 result__h55829,
		 result__h55867,
		 result__h55903,
		 result__h55936,
		 result__h55969,
		 result__h56002,
		 result__h56035,
		 result__h56068,
		 result__h56101,
		 result__h56164,
		 result__h56197,
		 result__h56230,
		 result__h56263,
		 result__h56314,
		 result__h56347,
		 result__h58719,
		 result__h59416,
		 result__h59448,
		 result__h59480,
		 result__h59512,
		 result__h59544,
		 result__h59576,
		 result__h59608,
		 result__h59640,
		 result__h59672,
		 result__h59704,
		 result__h59736,
		 result__h59768,
		 result__h59800,
		 result__h59832,
		 result__h59864,
		 result__h59918,
		 result__h59950,
		 result__h59982,
		 result__h60014,
		 result__h60046,
		 result__h60078,
		 result__h60110,
		 result__h60142,
		 result__h60188,
		 result__h60220,
		 result__h60252,
		 result__h60284,
		 result__h60338,
		 result__h60367,
		 word128__h55722,
		 word128__h58644,
		 x__h58505;
  wire [97 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37;
  wire [63 : 0] IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1060,
		IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062,
		IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1805,
		_theResult___fst__h9475,
		_theResult___fst__h9546,
		_theResult___snd_fst__h10006,
		_theResult___snd_fst__h9477,
		_theResult___snd_fst__h9548,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q22,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q23,
		cline_fabric_addr__h51053,
		lev_0_pte_pa__h49826,
		lev_0_pte_pa_w64_fa__h49828,
		lev_1_PTN_pa__h48747,
		lev_1_pte_pa__h48749,
		lev_1_pte_pa_w64_fa__h48751,
		lev_2_pte_pa__h47696,
		lev_2_pte_pa_w64_fa__h47698,
		new_st_val_64__h42940,
		new_st_val_64__h43012,
		new_st_val_64__h44158,
		new_st_val_64__h44162,
		new_st_val_64__h44166,
		new_st_val_64__h44170,
		new_st_val_64__h44175,
		new_st_val_64__h44181,
		new_st_val_64__h44186,
		new_st_val_64__h58516,
		new_st_val_64__h58588,
		new_st_val_64__h60429,
		new_st_val_64__h60433,
		new_st_val_64__h60437,
		new_st_val_64__h60441,
		new_st_val_64__h60446,
		new_st_val_64__h60452,
		new_st_val_64__h60457,
		pa___1__h9788,
		pa___1__h9837,
		pa___1__h9906,
		pte___1__h10055,
		pte___1__h10083,
		pte___2__h9780,
		satp_pa__h4622,
		value__h10100,
		vpn_0_pa__h49825,
		vpn_1_pa__h48748,
		vpn_2_pa__h47695,
		w1___1__h42979,
		w1___1__h58555,
		w1__h42783,
		w1__h58477,
		w2__h42785,
		word1288644_BITS_127_TO_64__q72,
		word1288644_BITS_63_TO_0__q57,
		word64__h6012,
		x1_avValue_pa__h9386,
		x__h42938,
		x__h58514;
  wire [55 : 0] x__h48844, x__h8160, x__h9791, x__h9840, x__h9909;
  wire [51 : 0] x__h52720, x__h52788;
  wire [31 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q18,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q19,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q20,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q21,
		cache_rg_st_amo_val_BITS_31_TO_0__q33,
		q12776_BITS_31_TO_0__q34,
		q18470_BITS_31_TO_0__q84,
		word1288644_BITS_127_TO_96__q79,
		word1288644_BITS_31_TO_0__q56,
		word1288644_BITS_63_TO_32__q64,
		word1288644_BITS_95_TO_64__q71;
  wire [15 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q10,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q12,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q13,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q16,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q2,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q4,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q6,
		cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q8,
		word1288644_BITS_111_TO_96__q78,
		word1288644_BITS_127_TO_112__q82,
		word1288644_BITS_15_TO_0__q55,
		word1288644_BITS_31_TO_16__q60,
		word1288644_BITS_47_TO_32__q63,
		word1288644_BITS_63_TO_48__q67,
		word1288644_BITS_79_TO_64__q70,
		word1288644_BITS_95_TO_80__q75;
  wire [7 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q11,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q14,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q15,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q17,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q24,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q25,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q26,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q27,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q28,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q29,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q3,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q30,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q31,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q5,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q7,
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q9,
	       mem_req_wr_addr_awlen__h5996,
	       strobe64__h6013,
	       strobe64__h6020,
	       strobe64__h6024,
	       strobe64__h6028,
	       word1288644_BITS_103_TO_96__q77,
	       word1288644_BITS_111_TO_104__q80,
	       word1288644_BITS_119_TO_112__q81,
	       word1288644_BITS_127_TO_120__q83,
	       word1288644_BITS_15_TO_8__q58,
	       word1288644_BITS_23_TO_16__q59,
	       word1288644_BITS_31_TO_24__q61,
	       word1288644_BITS_39_TO_32__q62,
	       word1288644_BITS_47_TO_40__q65,
	       word1288644_BITS_55_TO_48__q66,
	       word1288644_BITS_63_TO_56__q68,
	       word1288644_BITS_71_TO_64__q69,
	       word1288644_BITS_79_TO_72__q73,
	       word1288644_BITS_7_TO_0__q54,
	       word1288644_BITS_87_TO_80__q74,
	       word1288644_BITS_95_TO_88__q76;
  wire [5 : 0] shift_bits__h5701;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d513,
	       IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d515,
	       IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d514,
	       IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d517;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire [1 : 0] tmp__h51225, tmp__h51226;
  wire IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d419,
       IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d312,
       IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d435,
       IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d434,
       IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534,
       IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d429,
       NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d398,
       NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d408,
       NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d414,
       NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d418,
       NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447,
       NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d1515,
       NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d447,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1297,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1360,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1403,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1303,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d320,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d343,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d433,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d536,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d878,
       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d885,
       NOT_cache_rg_op_95_EQ_0_96_97_AND_NOT_cache_rg_ETC___d508,
       NOT_cache_rg_op_95_EQ_1_21_42_AND_NOT_cache_rg_ETC___d937,
       NOT_cache_rg_op_95_EQ_1_21_42_AND_cache_ram_st_ETC___d892,
       NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1167,
       NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1206,
       NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1212,
       NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1218,
       NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d935,
       NOT_cache_rg_priv_68_EQ_0b0_85_69_OR_cache_tlb_ETC___d476,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1172,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1178,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1179,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1185,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1192,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1198,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1203,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1209,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1215,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1221,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1222,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1227,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1228,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1234,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1239,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1245,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1249,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1250,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d524,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d529,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d550,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d557,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d863,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d864,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d871,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d876,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d880,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d889,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d895,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d896,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d940,
       NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d941,
       NOT_req_width_code_EQ_0b0_896_897_AND_NOT_req__ETC___d1916,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431,
       _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1335,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1345,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1347,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1386,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1392,
       cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244,
       cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250,
       cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1166,
       cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1242,
       cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d533,
       cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d544,
       cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861,
       cache_rg_amo_funct5_00_EQ_0b10_01_AND_cache_ra_ETC___d868,
       cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328,
       cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d503,
       cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d538,
       cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d548,
       cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d552,
       cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d692,
       cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1170,
       cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1175,
       cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d546,
       cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d938,
       cache_rg_op_95_EQ_2_98_AND_cache_rg_amo_funct5_ETC___d345,
       cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208,
       cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213,
       cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d437,
       cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d511,
       cache_rg_priv_68_ULE_0b1___d169,
       cache_rg_width_code_54_EQ_0b100_13_OR_cache_rg_ETC___d421,
       lrsc_result__h37961,
       mem_req_wr_second_data_wuser__h5816,
       req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1932,
       req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1937;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = !EN_req && cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put =
	     !EN_req && cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = !EN_req ;
  assign CAN_FIRE_tlb_flush = !EN_req ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[97:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[7] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[97:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[73] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd0)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[98] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_shift_sb_to_load_delay
  assign CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;
  assign WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     (!cache_crg_commit$port1__read ||
	      (!cache_rg_priv_68_ULE_0b1___d169 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d437) &&
	     NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d447 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d1515 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[7] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[7] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[7] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[73] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[73] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1297 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1360 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1403 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill && !EN_req ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop && !EN_req ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !EN_req && !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq && !EN_req ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d557 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1179 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     EN_req &&
	     (req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1932 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d941 ;
  assign MUX_cache_ram_word128_set$b_put_2__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_896_897_AND_NOT_req__ETC___d1916 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1303 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d896 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d550 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_17 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d511 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1345 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     { cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d692,
	       IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d855 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     { 1'd0,
	       IF_NOT_cache_rg_lower_word64_full_468_469_AND__ETC___d1634 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, q1__h58470 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h9386,
	       IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d1182 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h58505 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 6'd32, lev_1_pte_pa_w64_fa__h48751, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 6'd32, lev_0_pte_pa_w64_fa__h49828, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 6'd32,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 ?
		 { 8'd0, size_val__h57681, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 6'd32, lev_2_pte_pa_w64_fa__h47698, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 6'd32, cline_fabric_addr__h51053, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6093,
	       mem_req_wr_data_wstrb__h6094,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5816 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       x__h52720,
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       x__h52788 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1052,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1053 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1161,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1162 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64,
		 cache_ram_word128_set$DOB[128:0] } :
	       { cache_ram_word128_set$DOB[257:129],
		 cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_2 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       6'd12 :
	       6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     cache_crg_commit$port1__read ? 6'd12 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h37961 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[128],
		 q1__h42776 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090 } ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (NOT_req_width_code_EQ_0b0_896_897_AND_NOT_req__ETC___d1916 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_10 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     cache_crg_commit$port1__read ?
	       IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d517 :
	       5'd4 ;

  // inlined wires
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[7] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[73] ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d557 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     mem_master_arready ;
  assign cache_crg_commit$port1__read = EN_commit || cache_crg_commit ;
  assign cache_crg_commit$port3__read =
	     !EN_req && cache_crg_commit$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 6'd32,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5996,
	       _theResult___snd_snd_fst_val__h6035,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       8'd42 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       8'd42 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   99'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       99'h2AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port2__read ;
  assign cache_crg_sb_to_load_delay$port0__write_1 =
	     { 1'd0, cache_crg_sb_to_load_delay[10:1] } ;
  assign cache_crg_sb_to_load_delay$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1172 ;
  assign cache_crg_sb_to_load_delay$port2__read =
	     cache_crg_sb_to_load_delay$EN_port1__write ?
	       11'd2047 :
	       cache_crg_sb_to_load_delay$port0__write_1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_commit
  assign cache_crg_commit$D_IN = cache_crg_commit$port3__read ;
  assign cache_crg_commit$EN = 1'b1 ;

  // register cache_crg_sb_to_load_delay
  assign cache_crg_sb_to_load_delay$D_IN =
	     cache_crg_sb_to_load_delay$port2__read ;
  assign cache_crg_sb_to_load_delay$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = EN_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = EN_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__VAL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_exc_code$write_1__SEL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  MUX_cache_rg_exc_code$write_1__SEL_8 or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = 6'd1;
    MUX_cache_rg_exc_code$write_1__SEL_2:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_2;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_4: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_8:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'b101010 /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_896_897_AND_NOT_req__ETC___d1916 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1303 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = EN_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d896 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = x1_avValue_pa__h9386 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d871 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d552 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d550 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = EN_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = EN_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN = EN_req ? req_addr : x1_avValue_pa__h9386 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d524 ||
	     EN_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = EN_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  lev_1_pte_pa__h48749 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  lev_0_pte_pa__h49826 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or lev_2_pte_pa__h47696)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = lev_1_pte_pa__h48749;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = lev_0_pte_pa__h49826;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = lev_2_pte_pa__h47696;
      default: cache_rg_pte_pa$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = EN_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = EN_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     EN_req ? req_st_value : MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1250 ||
	     EN_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  EN_req or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  MUX_cache_rg_state$write_1__SEL_6 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  MUX_cache_rg_state$write_1__SEL_7 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_10 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_state$write_1__SEL_17 or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    EN_req: cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    MUX_cache_rg_state$write_1__SEL_6:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    MUX_cache_rg_state$write_1__SEL_7:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_10;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    MUX_cache_rg_state$write_1__SEL_17:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d511 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     EN_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h51226[0] ;
  assign cache_rg_victim_way$EN = WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = EN_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_2__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5678,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5816 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1179 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN = 128'h0 ;
  assign cache_f_pte_writebacks$ENQ = 1'b0 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_reset_response_get || EN_server_flush_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_word128_set_in_cache[7:2] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       106'h15555555555554AAAAAAAAAAAAA ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_state_and_ctag_cset$DIB =
		   106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB =
	     !MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 &&
	     !WILL_FIRE_RL_cache_rl_rereq ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_2__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_2__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_2__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_2__SEL_2:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d941 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  MUX_cache_tlb$insert_1__SEL_2 or MUX_cache_tlb$insert_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_tlb$insert_pte_pa = cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1345 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d419 =
	     (x1_avValue_pa__h9386[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 :
	       NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d418 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1053 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38780 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1162 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42706 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d513 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_lower_word64_full_468_469_AND__ETC___d1634 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       x__h55856 :
	       b__h52483 ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1052 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38780 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1161 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42706 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d312 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 ;
  assign IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d435 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d320 :
	       IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d434 ;
  assign IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d515 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       5'd9 :
	       IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d514 ;
  assign IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d855 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       x__h36444 :
	       x__h42087 ;
  assign IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d1182 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090 } ;
  assign IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d434 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_95_EQ_2_98_AND_cache_rg_amo_funct5_ETC___d345 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d433 ;
  assign IF_cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_ETC___d514 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       5'd12 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d513 ;
  assign IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d517 =
	     (cache_rg_priv_68_ULE_0b1___d169 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 ?
		  5'd4 :
		  IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d515) ;
  assign IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 =
	     x1_avValue_pa__h9386 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_437_THEN_cache_master_x_ETC___d1507 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_437_THEN_cache_ram_word_ETC___d1506 =
	     cache_rg_victim_way ?
	       cache_ram_word128_set$DOB[128:0] :
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d429 =
	     IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 ||
	      IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426) ;
  assign IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h42935 ;
  assign IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1060 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{q12776_BITS_31_TO_0__q34[31]}},
		 q12776_BITS_31_TO_0__q34 } :
	       q1__h42776[63:0] ;
  assign IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q33[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q33 } :
	       cache_rg_st_amo_val[63:0] ;
  assign IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1805 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{q18470_BITS_31_TO_0__q84[31]}},
		 q18470_BITS_31_TO_0__q84 } :
	       q1__h58470[63:0] ;
  assign NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d398 =
	     x1_avValue_pa__h9386[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d408 =
	     x1_avValue_pa__h9386[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d414 =
	     x1_avValue_pa__h9386[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d418 =
	     x1_avValue_pa__h9386[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d1515 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_41_AND_cac_ETC___d447 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd3 &&
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      cache_crg_sb_to_load_delay$port0__write_1 == 11'd0) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1297 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1360 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1403 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1303 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_68_ULE_0b1___d169 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_68_ULE_0b1___d169 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d320 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ||
	     IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d343 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 ||
	      IF_cache_rg_width_code_54_EQ_0_55_OR_cache_rg__ETC___d337) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 ||
	      IF_cache_rg_width_code_54_EQ_0_55_OR_cache_rg__ETC___d337) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d433 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d536 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d878 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d885 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_95_EQ_0_96_97_AND_NOT_cache_rg_ETC___d508 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) ;
  assign NOT_cache_rg_op_95_EQ_1_21_42_AND_NOT_cache_rg_ETC___d937 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign NOT_cache_rg_op_95_EQ_1_21_42_AND_cache_ram_st_ETC___d892 =
	     cache_rg_op != 2'd1 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1167 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1166 ;
  assign NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1206 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861 ;
  assign NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1212 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d878 ;
  assign NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1218 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d935 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign NOT_cache_rg_priv_68_EQ_0b0_85_69_OR_cache_tlb_ETC___d476 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb$lookup[69] ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1172 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1170 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1178 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1175 ||
	      NOT_cache_rg_op_95_EQ_1_21_42_AND_NOT_cache_rg_ETC___d937) ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1179 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1178 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1185 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1192 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1198 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1203 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1209 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1206 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1209 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1215 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1212 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1221 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1218 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1222 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1221 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1227 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37961 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1228 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1227 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1234 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d878 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1239 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1239 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1245 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1242 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1249 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_95_EQ_1_21_42_AND_NOT_cache_rg_ETC___d937 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1250 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1249 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523 =
	     !cache_rg_priv_68_ULE_0b1___d169 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_68_EQ_0b0_85_69_OR_cache_tlb_ETC___d476 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d524 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d529 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 &&
	     cache_ram_state_and_ctag_cset$DOB[105] &&
	     cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d550 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523 &&
	     cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d548 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d557 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d523 &&
	     (cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d552 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	      lrsc_result__h37961) ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 =
	     !cache_rg_priv_68_ULE_0b1___d169 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[69] &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d863 =
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d864 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d863 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d871 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_00_EQ_0b10_01_AND_cache_ra_ETC___d868 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d876 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d880 =
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d878 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d889 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d860 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d885 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d895 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      NOT_cache_rg_op_95_EQ_1_21_42_AND_cache_ram_st_ETC___d892) ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d896 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d895 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d940 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130]) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d938 ;
  assign NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d941 =
	     (!cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d940 ;
  assign NOT_req_width_code_EQ_0b0_896_897_AND_NOT_req__ETC___d1916 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d696 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q17[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q17 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d700 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q31[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d704 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q15[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q15 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d708 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q30[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d712 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q14[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q14 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d716 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d720 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q11[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q11 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d724 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d728 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q9[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q9 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d732 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q27[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d736 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q7[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q7 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d740 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d744 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q5[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q5 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d748 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q25[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d752 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q3[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q3 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d756 =
	     { {120{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q24[7]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d776 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q16[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q16 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d780 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q13[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q13 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d784 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q12[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q12 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d788 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q10[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q10 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d792 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q8[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q8 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d796 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q6[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q6 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d800 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q4[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q4 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d804 =
	     { {112{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q2[15]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q2 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d816 =
	     { {96{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q21[31]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d820 =
	     { {96{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q20[31]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d824 =
	     { {96{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q19[31]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d828 =
	     { {96{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q18[31]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q18 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d836 =
	     { {64{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q23[63]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d840 =
	     { {64{cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q22[63]}},
	       cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q22 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 ||
	      IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426) &&
	     cache_rg_width_code_54_EQ_0b100_13_OR_cache_rg_ETC___d421 &&
	     IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d429 ;
  assign _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 =
	     8'd1 << size_val__h57681 <= 8'd8 ;
  assign _theResult___fst__h55827 =
	     (cache_rg_addr[2:0] == 3'd0) ? result__h55829 : 128'd0 ;
  assign _theResult___fst__h9475 =
	     cache_tlb$lookup[130] ? _theResult___fst__h9546 : cache_rg_addr ;
  assign _theResult___fst__h9546 =
	     (cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208 ||
	      !cache_tlb$lookup[72]) ?
	       cache_rg_addr :
	       _theResult___fst__h9782 ;
  assign _theResult___snd_fst__h10006 =
	     (!pte___2__h9780[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h10083 :
	       pte___2__h9780 ;
  assign _theResult___snd_fst__h9477 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h9548 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h9548 =
	     (cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208 ||
	      !cache_tlb$lookup[72]) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h10006 ;
  assign b__h52483 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q85 =
	     cache_master_xactor_shim_arff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q36 =
	     cache_master_xactor_shim_awff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1335 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1345 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1347 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1386 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1392 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q37 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h9386[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h9386[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1166 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1242 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d533 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d544 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 ;
  assign cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d861 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689 =
	     x__h11029 | y__h11030 ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q10 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:48] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q11 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[55:48] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q12 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[47:32] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q13 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:16] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q14 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[39:32] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q15 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[23:16] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q16 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[15:0] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q17 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[7:0] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q18 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:96] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q19 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:64] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q2 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:112] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q20 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:32] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q21 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:0] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q22 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:64] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q23 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:0] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q24 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:120] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q25 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[111:104] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q26 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:88] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q27 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[79:72] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q28 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[47:40] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q29 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:56] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q3 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[119:112] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q30 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:24] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q31 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[15:8] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q4 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[111:96] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q5 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[103:96] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q6 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:80] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q7 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[87:80] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q8 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[79:64] ;
  assign cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC__q9 =
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[71:64] ;
  assign cache_rg_amo_funct5_00_EQ_0b10_01_AND_cache_ra_ETC___d868 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h9386 ;
  assign cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d503 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d538 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d533 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d536) ;
  assign cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d548 =
	     cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d538 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d546 ;
  assign cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d552 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250) ;
  assign cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d692 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_rg_width_code == 3'b100 &&
	     cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[128] ;
  assign cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1170 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d1167 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d1166 ;
  assign cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d1175 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328) ;
  assign cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d546 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_sa_ETC___d534 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__17_BIT_5_ETC___d544 ;
  assign cache_rg_op_95_EQ_1_21_OR_cache_rg_op_95_EQ_2__ETC___d938 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_95_EQ_2_98_99_OR_NOT_cache_rg__ETC___d935 ||
	     NOT_cache_rg_op_95_EQ_1_21_42_AND_NOT_cache_rg_ETC___d937 ;
  assign cache_rg_op_95_EQ_2_98_AND_cache_rg_amo_funct5_ETC___d345 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37961 ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d343 ;
  assign cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	     !cache_tlb$lookup[69] ;
  assign cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 =
	     cache_rg_priv_68_ULE_0b1___d169 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208 ||
	      !cache_tlb$lookup[72]) ;
  assign cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d437 =
	     cache_rg_priv_68_ULE_0b1___d169 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 ?
		cache_tlb$RDY_lookup :
		IF_cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_ETC___d435) ;
  assign cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d511 =
	     cache_rg_priv_68_ULE_0b1___d169 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_satp__ETC___d213 ||
	     cache_rg_op_95_EQ_0_96_OR_cache_rg_op_95_EQ_2__ETC___d503 ||
	     NOT_cache_rg_op_95_EQ_0_96_97_AND_NOT_cache_rg_ETC___d508 ;
  assign cache_rg_priv_68_ULE_0b1___d169 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q33 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_54_EQ_0b100_13_OR_cache_rg_ETC___d421 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign cline_fabric_addr__h51053 = { cache_rg_pa[63:6], 6'd0 } ;
  assign lev_0_pte_pa__h49826 = lev_1_PTN_pa__h48747 + vpn_0_pa__h49825 ;
  assign lev_0_pte_pa_w64_fa__h49828 = { lev_0_pte_pa__h49826[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h48747 = { 8'd0, x__h48844 } ;
  assign lev_1_pte_pa__h48749 = lev_1_PTN_pa__h48747 + vpn_1_pa__h48748 ;
  assign lev_1_pte_pa_w64_fa__h48751 = { lev_1_pte_pa__h48749[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h47696 = satp_pa__h4622 + vpn_2_pa__h47695 ;
  assign lev_2_pte_pa_w64_fa__h47698 = { lev_2_pte_pa__h47696[63:3], 3'b0 } ;
  assign lrsc_result__h37961 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_27_EQ_IF_cache_rg_priv_68_ULE_ETC___d328 ;
  assign mem_req_wr_addr_awlen__h5996 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5816 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h42935 = { 64'd0, x__h42938 } ;
  assign new_st_val_128__h58511 = { 64'd0, x__h58514 } ;
  assign new_st_val_64__h42940 = { 32'd0, _theResult_____2__h42934[31:0] } ;
  assign new_st_val_64__h43012 =
	     IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1060 +
	     IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ;
  assign new_st_val_64__h44158 = w1__h42783 ^ w2__h42785 ;
  assign new_st_val_64__h44162 = w1__h42783 & w2__h42785 ;
  assign new_st_val_64__h44166 = w1__h42783 | w2__h42785 ;
  assign new_st_val_64__h44170 =
	     (w1__h42783 < w2__h42785) ? w1__h42783 : w2__h42785 ;
  assign new_st_val_64__h44175 =
	     (w1__h42783 <= w2__h42785) ? w2__h42785 : w1__h42783 ;
  assign new_st_val_64__h44181 =
	     ((IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1060 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ^
	       64'h8000000000000000)) ?
	       w1__h42783 :
	       w2__h42785 ;
  assign new_st_val_64__h44186 =
	     ((IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1060 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ^
	       64'h8000000000000000)) ?
	       w2__h42785 :
	       w1__h42783 ;
  assign new_st_val_64__h58516 = { 32'd0, _theResult_____2__h58510[31:0] } ;
  assign new_st_val_64__h58588 =
	     IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1805 +
	     IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ;
  assign new_st_val_64__h60429 = w1__h58477 ^ w2__h42785 ;
  assign new_st_val_64__h60433 = w1__h58477 & w2__h42785 ;
  assign new_st_val_64__h60437 = w1__h58477 | w2__h42785 ;
  assign new_st_val_64__h60441 =
	     (w1__h58477 < w2__h42785) ? w1__h58477 : w2__h42785 ;
  assign new_st_val_64__h60446 =
	     (w1__h58477 <= w2__h42785) ? w2__h42785 : w1__h58477 ;
  assign new_st_val_64__h60452 =
	     ((IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1805 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ^
	       64'h8000000000000000)) ?
	       w1__h58477 :
	       w2__h42785 ;
  assign new_st_val_64__h60457 =
	     ((IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1805 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_54_EQ_0b10_03_THEN_SEXT_ETC___d1062 ^
	       64'h8000000000000000)) ?
	       w2__h42785 :
	       w1__h58477 ;
  assign pa___1__h9788 = { 8'd0, x__h9791 } ;
  assign pa___1__h9837 = { 8'd0, x__h9840 } ;
  assign pa___1__h9906 = { 8'd0, x__h9909 } ;
  assign pte___1__h10055 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h10083 =
	     { pte___2__h9780[63:8], 1'd1, pte___2__h9780[6:0] } ;
  assign pte___2__h9780 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h10055 ;
  assign q12776_BITS_31_TO_0__q34 = q1__h42776[31:0] ;
  assign q18470_BITS_31_TO_0__q84 = q1__h58470[31:0] ;
  assign req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1932 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1937 =
	     (req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1932 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign result__h10979 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:0] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d836 ;
  assign result__h10981 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:64] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d840 ;
  assign result__h36455 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d696 ;
  assign result__h36493 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d700 ;
  assign result__h36526 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d704 ;
  assign result__h36559 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d708 ;
  assign result__h36592 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d712 ;
  assign result__h36625 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d716 ;
  assign result__h36658 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d720 ;
  assign result__h36691 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d724 ;
  assign result__h36724 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d728 ;
  assign result__h36757 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d732 ;
  assign result__h36790 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d736 ;
  assign result__h36823 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d740 ;
  assign result__h36856 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d744 ;
  assign result__h36889 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d748 ;
  assign result__h36922 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d752 ;
  assign result__h36955 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d756 ;
  assign result__h37010 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d776 ;
  assign result__h37043 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d780 ;
  assign result__h37076 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d784 ;
  assign result__h37109 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d788 ;
  assign result__h37142 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d792 ;
  assign result__h37175 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d796 ;
  assign result__h37208 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d800 ;
  assign result__h37241 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d804 ;
  assign result__h37288 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d816 ;
  assign result__h37321 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d820 ;
  assign result__h37354 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d824 ;
  assign result__h37387 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d828 ;
  assign result__h55829 =
	     cache_rg_is_unsigned ?
	       word128__h55722 :
	       { {64{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38[63]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38 } ;
  assign result__h55867 =
	     cache_rg_is_unsigned ?
	       { 120'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39 } ;
  assign result__h55903 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 } ;
  assign result__h55936 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 } ;
  assign result__h55969 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 } ;
  assign result__h56002 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 } ;
  assign result__h56035 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 } ;
  assign result__h56068 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q51 } ;
  assign result__h56101 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q50 } ;
  assign result__h56164 =
	     cache_rg_is_unsigned ?
	       { 112'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40 } ;
  assign result__h56197 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 } ;
  assign result__h56230 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 } ;
  assign result__h56263 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q52 } ;
  assign result__h56314 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 } ;
  assign result__h56347 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 } ;
  assign result__h58719 =
	     { {120{word1288644_BITS_7_TO_0__q54[7]}},
	       word1288644_BITS_7_TO_0__q54 } ;
  assign result__h59416 =
	     { {120{word1288644_BITS_15_TO_8__q58[7]}},
	       word1288644_BITS_15_TO_8__q58 } ;
  assign result__h59448 =
	     { {120{word1288644_BITS_23_TO_16__q59[7]}},
	       word1288644_BITS_23_TO_16__q59 } ;
  assign result__h59480 =
	     { {120{word1288644_BITS_31_TO_24__q61[7]}},
	       word1288644_BITS_31_TO_24__q61 } ;
  assign result__h59512 =
	     { {120{word1288644_BITS_39_TO_32__q62[7]}},
	       word1288644_BITS_39_TO_32__q62 } ;
  assign result__h59544 =
	     { {120{word1288644_BITS_47_TO_40__q65[7]}},
	       word1288644_BITS_47_TO_40__q65 } ;
  assign result__h59576 =
	     { {120{word1288644_BITS_55_TO_48__q66[7]}},
	       word1288644_BITS_55_TO_48__q66 } ;
  assign result__h59608 =
	     { {120{word1288644_BITS_63_TO_56__q68[7]}},
	       word1288644_BITS_63_TO_56__q68 } ;
  assign result__h59640 =
	     { {120{word1288644_BITS_71_TO_64__q69[7]}},
	       word1288644_BITS_71_TO_64__q69 } ;
  assign result__h59672 =
	     { {120{word1288644_BITS_79_TO_72__q73[7]}},
	       word1288644_BITS_79_TO_72__q73 } ;
  assign result__h59704 =
	     { {120{word1288644_BITS_87_TO_80__q74[7]}},
	       word1288644_BITS_87_TO_80__q74 } ;
  assign result__h59736 =
	     { {120{word1288644_BITS_95_TO_88__q76[7]}},
	       word1288644_BITS_95_TO_88__q76 } ;
  assign result__h59768 =
	     { {120{word1288644_BITS_103_TO_96__q77[7]}},
	       word1288644_BITS_103_TO_96__q77 } ;
  assign result__h59800 =
	     { {120{word1288644_BITS_111_TO_104__q80[7]}},
	       word1288644_BITS_111_TO_104__q80 } ;
  assign result__h59832 =
	     { {120{word1288644_BITS_119_TO_112__q81[7]}},
	       word1288644_BITS_119_TO_112__q81 } ;
  assign result__h59864 =
	     { {120{word1288644_BITS_127_TO_120__q83[7]}},
	       word1288644_BITS_127_TO_120__q83 } ;
  assign result__h59918 =
	     { {112{word1288644_BITS_15_TO_0__q55[15]}},
	       word1288644_BITS_15_TO_0__q55 } ;
  assign result__h59950 =
	     { {112{word1288644_BITS_31_TO_16__q60[15]}},
	       word1288644_BITS_31_TO_16__q60 } ;
  assign result__h59982 =
	     { {112{word1288644_BITS_47_TO_32__q63[15]}},
	       word1288644_BITS_47_TO_32__q63 } ;
  assign result__h60014 =
	     { {112{word1288644_BITS_63_TO_48__q67[15]}},
	       word1288644_BITS_63_TO_48__q67 } ;
  assign result__h60046 =
	     { {112{word1288644_BITS_79_TO_64__q70[15]}},
	       word1288644_BITS_79_TO_64__q70 } ;
  assign result__h60078 =
	     { {112{word1288644_BITS_95_TO_80__q75[15]}},
	       word1288644_BITS_95_TO_80__q75 } ;
  assign result__h60110 =
	     { {112{word1288644_BITS_111_TO_96__q78[15]}},
	       word1288644_BITS_111_TO_96__q78 } ;
  assign result__h60142 =
	     { {112{word1288644_BITS_127_TO_112__q82[15]}},
	       word1288644_BITS_127_TO_112__q82 } ;
  assign result__h60188 =
	     { {96{word1288644_BITS_31_TO_0__q56[31]}},
	       word1288644_BITS_31_TO_0__q56 } ;
  assign result__h60220 =
	     { {96{word1288644_BITS_63_TO_32__q64[31]}},
	       word1288644_BITS_63_TO_32__q64 } ;
  assign result__h60252 =
	     { {96{word1288644_BITS_95_TO_64__q71[31]}},
	       word1288644_BITS_95_TO_64__q71 } ;
  assign result__h60284 =
	     { {96{word1288644_BITS_127_TO_96__q79[31]}},
	       word1288644_BITS_127_TO_96__q79 } ;
  assign result__h60338 =
	     { {64{word1288644_BITS_63_TO_0__q57[63]}},
	       word1288644_BITS_63_TO_0__q57 } ;
  assign result__h60367 =
	     { {64{word1288644_BITS_127_TO_64__q72[63]}},
	       word1288644_BITS_127_TO_64__q72 } ;
  assign satp_pa__h4622 = { 8'd0, x__h8160 } ;
  assign shift_bits__h5701 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h6013 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6020 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6024 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6028 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h51225 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h51226 = tmp__h51225 + 2'd1 ;
  assign value__h10100 =
	     (cache_rg_priv_68_ULE_0b1___d169 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h9477 :
	       cache_tlb$lookup[129:66] ;
  assign vpn_0_pa__h49825 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h48748 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h47695 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w1___1__h42979 = { 32'd0, q1__h42776[31:0] } ;
  assign w1___1__h58555 = { 32'd0, q1__h58470[31:0] } ;
  assign w1__h42783 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h42979 :
	       q1__h42776[63:0] ;
  assign w1__h58477 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h58555 :
	       q1__h58470[63:0] ;
  assign w2__h42785 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word1288644_BITS_103_TO_96__q77 = word128__h58644[103:96] ;
  assign word1288644_BITS_111_TO_104__q80 = word128__h58644[111:104] ;
  assign word1288644_BITS_111_TO_96__q78 = word128__h58644[111:96] ;
  assign word1288644_BITS_119_TO_112__q81 = word128__h58644[119:112] ;
  assign word1288644_BITS_127_TO_112__q82 = word128__h58644[127:112] ;
  assign word1288644_BITS_127_TO_120__q83 = word128__h58644[127:120] ;
  assign word1288644_BITS_127_TO_64__q72 = word128__h58644[127:64] ;
  assign word1288644_BITS_127_TO_96__q79 = word128__h58644[127:96] ;
  assign word1288644_BITS_15_TO_0__q55 = word128__h58644[15:0] ;
  assign word1288644_BITS_15_TO_8__q58 = word128__h58644[15:8] ;
  assign word1288644_BITS_23_TO_16__q59 = word128__h58644[23:16] ;
  assign word1288644_BITS_31_TO_0__q56 = word128__h58644[31:0] ;
  assign word1288644_BITS_31_TO_16__q60 = word128__h58644[31:16] ;
  assign word1288644_BITS_31_TO_24__q61 = word128__h58644[31:24] ;
  assign word1288644_BITS_39_TO_32__q62 = word128__h58644[39:32] ;
  assign word1288644_BITS_47_TO_32__q63 = word128__h58644[47:32] ;
  assign word1288644_BITS_47_TO_40__q65 = word128__h58644[47:40] ;
  assign word1288644_BITS_55_TO_48__q66 = word128__h58644[55:48] ;
  assign word1288644_BITS_63_TO_0__q57 = word128__h58644[63:0] ;
  assign word1288644_BITS_63_TO_32__q64 = word128__h58644[63:32] ;
  assign word1288644_BITS_63_TO_48__q67 = word128__h58644[63:48] ;
  assign word1288644_BITS_63_TO_56__q68 = word128__h58644[63:56] ;
  assign word1288644_BITS_71_TO_64__q69 = word128__h58644[71:64] ;
  assign word1288644_BITS_79_TO_64__q70 = word128__h58644[79:64] ;
  assign word1288644_BITS_79_TO_72__q73 = word128__h58644[79:72] ;
  assign word1288644_BITS_7_TO_0__q54 = word128__h58644[7:0] ;
  assign word1288644_BITS_87_TO_80__q74 = word128__h58644[87:80] ;
  assign word1288644_BITS_95_TO_64__q71 = word128__h58644[95:64] ;
  assign word1288644_BITS_95_TO_80__q75 = word128__h58644[95:80] ;
  assign word1288644_BITS_95_TO_88__q76 = word128__h58644[95:88] ;
  assign word128__h55722 =
	     { 64'd0, cache_master_xactor_shim_rff_rv$port1__read[67:4] } ;
  assign word128__h58644 =
	     cache_rg_lower_word64_full ? b__h52483 : x__h55856 ;
  assign word64__h6012 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5701 ;
  assign x1_avValue_pa__h9386 =
	     (cache_rg_priv_68_ULE_0b1___d169 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h9475 :
	       cache_rg_addr ;
  assign x__h11029 = cache_ram_word128_set$DOB[128:0] & y__h11045 ;
  assign x__h42938 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h42940 :
	       _theResult_____2__h42934 ;
  assign x__h48844 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h52720 =
	     cache_rg_victim_way ?
	       cache_rg_pa[63:12] :
	       cache_ram_state_and_ctag_cset$DOB[104:53] ;
  assign x__h52788 =
	     cache_rg_victim_way ?
	       cache_ram_state_and_ctag_cset$DOB[51:0] :
	       cache_rg_pa[63:12] ;
  assign x__h58505 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h58511 ;
  assign x__h58514 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h58516 :
	       _theResult_____2__h58510 ;
  assign x__h8160 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9791 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9840 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9909 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h11030 = cache_ram_word128_set$DOB[257:129] & y__h23741 ;
  assign y__h11045 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d244}} ;
  assign y__h23741 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250}} ;
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: x__h42087 = 128'd1;
      default: x__h42087 = 128'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5678 = 8'd0;
      3'b100: fabric_2_strb__h5678 = 8'b11111111;
      default: fabric_2_strb__h5678 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h6035 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h6035 = 3'b011;
      default: _theResult___snd_snd_fst_val__h6035 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h57681 = cache_rg_width_code;
      default: size_val__h57681 = 3'b100;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h6013 or
	  strobe64__h6020 or strobe64__h6024 or strobe64__h6028)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6094 = strobe64__h6013;
      3'b001: mem_req_wr_data_wstrb__h6094 = strobe64__h6020;
      3'b010: mem_req_wr_data_wstrb__h6094 = strobe64__h6024;
      3'b011: mem_req_wr_data_wstrb__h6094 = strobe64__h6028;
      3'b100: mem_req_wr_data_wstrb__h6094 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6094 = 8'd0;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9788 or pa___1__h9837 or pa___1__h9906)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9782 = pa___1__h9788;
      2'd1: _theResult___fst__h9782 = pa___1__h9837;
      2'd2: _theResult___fst__h9782 = pa___1__h9906;
      2'd3: _theResult___fst__h9782 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h6012)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6093 = word64__h6012;
      default: mem_req_wr_data_wdata__h6093 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250 or
	  cache_ram_word128_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__17_BITS__ETC___d250)
      1'd0: new_word128__h38761 = cache_ram_word128_set$DOB[127:0];
      1'd1: new_word128__h38761 = cache_ram_word128_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 or
	  cache_rg_priv_68_ULE_0b1___d169 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_54_EQ_0_55_OR_cache_rg__ETC___d337 =
	      !cache_rg_priv_68_ULE_0b1___d169 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_54_EQ_0_55_OR_cache_rg__ETC___d337 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d292 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
      4'd15:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d292 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d302 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d302 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d308 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d308 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d292 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d302 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d308 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d312)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d292;
      3'd1:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d302;
      3'b010:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_O_ETC___d308;
      3'd3:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d312;
      default: IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d286 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 =
	      IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_54_EQ_0_55_THEN_IF_cach_ETC___d319;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d408 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d409 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d409 =
		   NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d408;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d398 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d399 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      4'd15:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d399 =
	      NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d398;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d414 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d415 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d415 =
		   NOT_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_r_ETC___d414;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287 or
	  cache_rg_priv_68_ULE_0b1___d169 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d399 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d409 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d415 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d419 or
	  cache_rg_width_code_54_EQ_0b100_13_OR_cache_rg_ETC___d421)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_68_ULE_0b1___d169 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d399;
      3'd1:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_68_ULE_0b1___d169 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d409;
      3'b010:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_68_ULE_0b1___d169 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d415;
      3'd3:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_68_ULE_0b1___d169 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d419;
      3'b100:
	  IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
	      cache_rg_width_code_54_EQ_0b100_13_OR_cache_rg_ETC___d421;
      default: IF_cache_rg_width_code_54_EQ_0_55_THEN_NOT_cac_ETC___d426 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__17_B_ETC___d287;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d836 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d840)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h44067 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d836;
      4'h8:
	  _theResult___fst__h44067 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d840;
      default: _theResult___fst__h44067 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h10979 or result__h10981)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h10977 = result__h10979;
      4'h8: _theResult___fst__h10977 = result__h10981;
      default: _theResult___fst__h10977 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d816 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d820 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d824 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d828)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d816;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d820;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d824;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d828;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h37288 or
	  result__h37321 or result__h37354 or result__h37387)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 =
	      result__h37288;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 =
	      result__h37321;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 =
	      result__h37354;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 =
	      result__h37387;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d776 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d780 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d784 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d788 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d792 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d796 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d800 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d804)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d776;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d780;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d784;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d788;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d792;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d796;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d800;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d804;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h37010 or
	  result__h37043 or
	  result__h37076 or
	  result__h37109 or
	  result__h37142 or
	  result__h37175 or result__h37208 or result__h37241)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37010;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37043;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37076;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37109;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37142;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37175;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37208;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
	      result__h37241;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d696 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d700 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d704 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d708 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d712 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d716 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d720 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d724 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d728 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d732 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d736 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d740 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d744 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d748 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d752 or
	  SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d756)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d696;
      4'h1:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d700;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d704;
      4'h3:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d708;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d712;
      4'h5:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d716;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d720;
      4'h7:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d724;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d728;
      4'h9:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d732;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d736;
      4'hB:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d740;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d744;
      4'hD:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d748;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d752;
      4'hF:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 =
	      SEXT_cache_ram_word128_set_b_read__66_BITS_128_ETC___d756;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926 or
	  _theResult___fst__h44067 or
	  cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h42776 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d914;
      3'd1:
	  q1__h42776 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d922;
      3'b010:
	  q1__h42776 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d926;
      3'd3: q1__h42776 = _theResult___fst__h44067;
      3'b100:
	  q1__h42776 =
	      cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:0];
      default: q1__h42776 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h36455 or
	  result__h36493 or
	  result__h36526 or
	  result__h36559 or
	  result__h36592 or
	  result__h36625 or
	  result__h36658 or
	  result__h36691 or
	  result__h36724 or
	  result__h36757 or
	  result__h36790 or
	  result__h36823 or
	  result__h36856 or
	  result__h36889 or result__h36922 or result__h36955)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36455;
      4'h1:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36493;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36526;
      4'h3:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36559;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36592;
      4'h5:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36625;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36658;
      4'h7:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36691;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36724;
      4'h9:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36757;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36790;
      4'hB:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36823;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36856;
      4'hD:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36889;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36922;
      4'hF:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 =
	      result__h36955;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833 or
	  _theResult___fst__h10977 or
	  cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h36444 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d773;
      3'd1:
	  x__h36444 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d813;
      3'b010:
	  x__h36444 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d833;
      3'd3: x__h36444 = _theResult___fst__h10977;
      3'b100:
	  x__h36444 =
	      cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689[127:0];
      default: x__h36444 = 128'd0;
    endcase
  end
  always@(x1_avValue_pa__h9386 or new_word128__h38761 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38761[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38761[127:64],
		cache_rg_st_amo_val[31:0],
		new_word128__h38761[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38761[127:96],
		cache_rg_st_amo_val[31:0],
		new_word128__h38761[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 =
	      { cache_rg_st_amo_val[31:0], new_word128__h38761[95:0] };
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 =
		   new_word128__h38761;
    endcase
  end
  always@(x1_avValue_pa__h9386 or new_word128__h38761 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:32],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:48],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:64],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:80],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:96],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { new_word128__h38761[127:112],
		cache_rg_st_amo_val[15:0],
		new_word128__h38761[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
	      { cache_rg_st_amo_val[15:0], new_word128__h38761[111:0] };
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 =
		   new_word128__h38761;
    endcase
  end
  always@(x1_avValue_pa__h9386 or new_word128__h38761 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:16],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:24],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:32],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:40],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:48],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:56],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:64],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:72],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:80],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:88],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:96],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:104],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:112],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { new_word128__h38761[127:120],
		cache_rg_st_amo_val[7:0],
		new_word128__h38761[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 =
	      { cache_rg_st_amo_val[7:0], new_word128__h38761[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9386 or new_word128__h38761 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32 =
	      { new_word128__h38761[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32 =
	      { cache_rg_st_amo_val[63:0], new_word128__h38761[63:0] };
      default: CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32 =
		   new_word128__h38761;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38761 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039 or
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h38780 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1013;
      3'd1:
	  b__h38780 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1030;
      3'b010:
	  b__h38780 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1039;
      3'd3:
	  b__h38780 = CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q32;
      3'b100: b__h38780 = cache_rg_st_amo_val[127:0];
      default: b__h38780 = new_word128__h38761;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h44186 or
	  new_st_val_64__h43012 or
	  w2__h42785 or
	  new_st_val_64__h44158 or
	  new_st_val_64__h44166 or
	  new_st_val_64__h44162 or
	  new_st_val_64__h44181 or
	  new_st_val_64__h44170 or new_st_val_64__h44175)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h42934 = new_st_val_64__h43012;
      5'b00001: _theResult_____2__h42934 = w2__h42785;
      5'b00100: _theResult_____2__h42934 = new_st_val_64__h44158;
      5'b01000: _theResult_____2__h42934 = new_st_val_64__h44166;
      5'b01100: _theResult_____2__h42934 = new_st_val_64__h44162;
      5'b10000: _theResult_____2__h42934 = new_st_val_64__h44181;
      5'b11000: _theResult_____2__h42934 = new_st_val_64__h44170;
      5'b11100: _theResult_____2__h42934 = new_st_val_64__h44175;
      default: _theResult_____2__h42934 = new_st_val_64__h44186;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  new_word128__h38761 or
	  IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 =
	      { new_word128__h38761[127:32],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 =
	      { new_word128__h38761[127:64],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[31:0],
		new_word128__h38761[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 =
	      { new_word128__h38761[127:96],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[31:0],
		new_word128__h38761[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 =
	      { IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[31:0],
		new_word128__h38761[95:0] };
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 =
		   new_word128__h38761;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  new_word128__h38761 or
	  IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:16],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:32],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:48],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:64],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:80],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:96],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { new_word128__h38761[127:112],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
	      { IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[15:0],
		new_word128__h38761[111:0] };
      default: IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 =
		   new_word128__h38761;
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  new_word128__h38761 or
	  IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:8],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:16],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:24],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:32],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:40],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:48],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:56],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:64],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:72],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:80],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:88],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:96],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:104],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:112],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { new_word128__h38761[127:120],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 =
	      { IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[7:0],
		new_word128__h38761[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9386 or
	  new_word128__h38761 or
	  IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090)
  begin
    case (x1_avValue_pa__h9386[3:0])
      4'h0:
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35 =
	      { new_word128__h38761[127:64],
		IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[63:0] };
      4'h8:
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35 =
	      { IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090[63:0],
		new_word128__h38761[63:0] };
      default: CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35 =
		   new_word128__h38761;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38761 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140 or
	  IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149 or
	  CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35 or
	  IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h42706 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1123;
      3'd1:
	  b__h42706 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1140;
      3'b010:
	  b__h42706 =
	      IF_IF_cache_rg_priv_68_ULE_0b1_69_AND_cache_rg_ETC___d1149;
      3'd3:
	  b__h42706 = CASE_x1_avValue_pa386_BITS_3_TO_0_0x0_new_word_ETC__q35;
      3'b100:
	  b__h42706 =
	      IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090;
      default: b__h42706 = new_word128__h38761;
    endcase
  end
  always@(cache_rg_addr or
	  result__h56164 or
	  result__h56197 or result__h56230 or result__h56263)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 =
	      result__h56164;
      3'd2:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 =
	      result__h56197;
      3'd4:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 =
	      result__h56230;
      3'd6:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 =
	      result__h56263;
      default: IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h55867 or
	  result__h55903 or
	  result__h55936 or
	  result__h55969 or
	  result__h56002 or
	  result__h56035 or result__h56068 or result__h56101)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h55867;
      3'd1:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h55903;
      3'd2:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h55936;
      3'd3:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h55969;
      3'd4:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h56002;
      3'd5:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h56035;
      3'd6:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h56068;
      3'd7:
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 =
	      result__h56101;
    endcase
  end
  always@(cache_rg_addr or result__h56314 or result__h56347)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53 =
	      result__h56314;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53 =
	      result__h56347;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53 =
		   128'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593 or
	  IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53 or
	  _theResult___fst__h55827 or word128__h55722)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h55856 =
	      IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1593;
      3'd1:
	  x__h55856 =
	      IF_cache_rg_addr_79_BITS_2_TO_0_545_EQ_0_546_T_ETC___d1613;
      3'b010:
	  x__h55856 = CASE_cache_rg_addr_BITS_2_TO_0_0_result6314_4__ETC__q53;
      3'd3: x__h55856 = _theResult___fst__h55827;
      3'b100: x__h55856 = word128__h55722;
      default: x__h55856 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h60338 or result__h60367)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h60336 = result__h60338;
      4'h8: _theResult___fst__h60336 = result__h60367;
      default: _theResult___fst__h60336 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h60188 or
	  result__h60220 or result__h60252 or result__h60284)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 =
	      result__h60188;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 =
	      result__h60220;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 =
	      result__h60252;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 =
	      result__h60284;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h59918 or
	  result__h59950 or
	  result__h59982 or
	  result__h60014 or
	  result__h60046 or
	  result__h60078 or result__h60110 or result__h60142)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h59918;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h59950;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h59982;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h60014;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h60046;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h60078;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h60110;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
	      result__h60142;
      default: IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h58719 or
	  result__h59416 or
	  result__h59448 or
	  result__h59480 or
	  result__h59512 or
	  result__h59544 or
	  result__h59576 or
	  result__h59608 or
	  result__h59640 or
	  result__h59672 or
	  result__h59704 or
	  result__h59736 or
	  result__h59768 or
	  result__h59800 or result__h59832 or result__h59864)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h58719;
      4'h1:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59416;
      4'h2:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59448;
      4'h3:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59480;
      4'h4:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59512;
      4'h5:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59544;
      4'h6:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59576;
      4'h7:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59608;
      4'h8:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59640;
      4'h9:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59672;
      4'hA:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59704;
      4'hB:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59736;
      4'hC:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59768;
      4'hD:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59800;
      4'hE:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59832;
      4'hF:
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 =
	      result__h59864;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778 or
	  IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790 or
	  _theResult___fst__h60336 or word128__h58644)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h58470 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1754;
      3'd1:
	  q1__h58470 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1778;
      3'b010:
	  q1__h58470 =
	      IF_cache_rg_addr_79_BITS_3_TO_0_56_EQ_0x0_57_T_ETC___d1790;
      3'd3: q1__h58470 = _theResult___fst__h60336;
      3'b100: q1__h58470 = word128__h58644;
      default: q1__h58470 = 128'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h60457 or
	  new_st_val_64__h58588 or
	  w2__h42785 or
	  new_st_val_64__h60429 or
	  new_st_val_64__h60437 or
	  new_st_val_64__h60433 or
	  new_st_val_64__h60452 or
	  new_st_val_64__h60441 or new_st_val_64__h60446)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h58510 = new_st_val_64__h58588;
      5'b00001: _theResult_____2__h58510 = w2__h42785;
      5'b00100: _theResult_____2__h58510 = new_st_val_64__h60429;
      5'b01000: _theResult_____2__h58510 = new_st_val_64__h60437;
      5'b01100: _theResult_____2__h58510 = new_st_val_64__h60433;
      5'b10000: _theResult_____2__h58510 = new_st_val_64__h60452;
      5'b11000: _theResult_____2__h58510 = new_st_val_64__h60441;
      5'b11100: _theResult_____2__h58510 = new_st_val_64__h60446;
      default: _theResult_____2__h58510 = new_st_val_64__h60457;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_commit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY 11'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 8'd42;
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    74'h0AAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    75'h2AAAAAAAAAAAAAAAAAA;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_commit$EN)
	  cache_crg_commit <= `BSV_ASSIGNMENT_DELAY cache_crg_commit$D_IN;
	if (cache_crg_sb_to_load_delay$EN)
	  cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY
	      cache_crg_sb_to_load_delay$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_commit = 1'h0;
    cache_crg_sb_to_load_delay = 11'h2AA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 8'hAA;
    cache_master_xactor_shim_rff_rv = 74'h2AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5996);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h6035, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6093);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6094);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5816, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7502 = $stime;
	  #0;
	end
    v__h7496 = v__h7502 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7496,
		 "I_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7603 = $stime;
	  #0;
	end
    v__h7597 = v__h7603 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7597, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h8040 = $stime;
	  #0;
	end
    v__h8034 = v__h8040 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h8034,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4622,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130] &&
	   NOT_cache_rg_priv_68_EQ_0b0_85_69_OR_cache_tlb_ETC___d476 &&
	   cache_tlb$lookup[72]))
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_68_ULE_0b1___d169 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  (cache_rg_priv_68_EQ_0b0_85_AND_NOT_cache_tlb_l_ETC___d208 ||
	   !cache_tlb$lookup[72]) &&
	  cache_tlb$lookup[130])
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_68_ULE_0b1___d169 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h10100, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d529)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d864)
	begin
	  v__h37571 = $stime;
	  #0;
	end
    v__h37565 = v__h37571 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d864)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h37565,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d876)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d864)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d880)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d889)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1185)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1192)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1198)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1203)
	$display("        AMO SC result = %0d", lrsc_result__h37961);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9386,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1052);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1210)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1215)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9386,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1222)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1222)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1228)
	begin
	  v__h42305 = $stime;
	  #0;
	end
    v__h42299 = v__h42305 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1228)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h42299,
		 "I_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1228)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1234)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$display("          PA 0x%0h ", x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689,
		 cache_ram_word128_set_b_read__66_BITS_128_TO_0_ETC___d689,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_54_EQ_0b100_13_THEN_cac_ETC___d1090 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1162);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__17_BI_ETC___d1161);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1240)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_68_ULE_0b1___d169 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_68_ULE_0b1_69_70_OR_NOT_cach_ETC___d1245)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9386);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47643 = $stime;
	  #0;
	end
    v__h47637 = v__h47643 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h47637,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47913 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h47913);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h47698);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h6953 = $stime;
	  #0;
	end
    v__h6947 = v__h6953 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h6947,
		 "I_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54917 = $stime;
	  #0;
	end
    v__h54911 = v__h54917 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54911,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55181 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h55181);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57681, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55301 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h55301);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57016 = $stime;
	  #0;
	end
    v__h57010 = v__h57016 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h57010,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57107 = $stime;
	  #0;
	end
    v__h57101 = v__h57107 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57101,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57328 = $stime;
	  #0;
	end
    v__h57322 = v__h57328 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57322,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57453 = $stime;
	  #0;
	end
    v__h57447 = v__h57453 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h57447,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57708 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57708);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57681, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57828 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_54_EQ_0_55_OR_cach_ETC___d1522 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h60898 = $stime;
	  #0;
	end
    v__h60892 = v__h60898 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h60892,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h61145 = $stime;
	  #0;
	end
    v__h61139 = v__h61145 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h61139,
	       "I_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h61106 = $stime;
	  #0;
	end
    v__h61100 = v__h61106 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h61100,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48717 = $stime;
	  #0;
	end
    v__h48711 = v__h48717 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48711,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48474 = $stime;
	  #0;
	end
    v__h48468 = v__h48474 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h48468,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48895 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h48895);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h48751);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1335)
	begin
	  v__h49040 = $stime;
	  #0;
	end
    v__h49034 = v__h49040 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1335)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h49034,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1347)
	begin
	  v__h49152 = $stime;
	  #0;
	end
    v__h49146 = v__h49152 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1347)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h49146,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1347)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48747);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48646 = $stime;
	  #0;
	end
    v__h48640 = v__h48646 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48640,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49794 = $stime;
	  #0;
	end
    v__h49788 = v__h49794 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h49788,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49554 = $stime;
	  #0;
	end
    v__h49548 = v__h49554 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h49548,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49972 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h49972);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h49828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1386)
	begin
	  v__h50229 = $stime;
	  #0;
	end
    v__h50223 = v__h50229 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1386)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h50223,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1386)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48747);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1392)
	begin
	  v__h50117 = $stime;
	  #0;
	end
    v__h50111 = v__h50117 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1392)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h50111,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49723 = $stime;
	  #0;
	end
    v__h49717 = v__h49723 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49717,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50709 = $stime;
	  #0;
	end
    v__h50703 = v__h50709 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h50703,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50780 = $stime;
	  #0;
	end
    v__h50774 = v__h50780 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h50774,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50862 = $stime;
	  #0;
	end
    v__h50856 = v__h50862 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h50856,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h48747);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50638 = $stime;
	  #0;
	end
    v__h50632 = v__h50638 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h50632,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55537 = $stime;
	  #0;
	end
    v__h55531 = v__h55537 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55531,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56674 = $stime;
	  #0;
	end
    v__h56668 = v__h56674 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56668,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h55856 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56789 = $stime;
	  #0;
	end
    v__h56783 = v__h56789 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56783,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56512 = $stime;
	  #0;
	end
    v__h56506 = v__h56512 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56506,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h52483 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56900 = $stime;
	  #0;
	end
    v__h56894 = v__h56900 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56894,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58008 = $stime;
	  #0;
	end
    v__h58002 = v__h58008 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h58002,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58377 = $stime;
	  #0;
	end
    v__h58371 = v__h58377 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h58371,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60588 = $stime;
	  #0;
	end
    v__h60582 = v__h60588 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h60582,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, q1__h58470 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58305 = $stime;
	  #0;
	end
    v__h58299 = v__h58305 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h58299,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h61541 = $stime;
	  #0;
	end
    v__h61535 = v__h61541 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h61535);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req &&
	  req_width_code_EQ_0b0_896_OR_req_width_code_EQ_ETC___d1937)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51000 = $stime;
	  #0;
	end
    v__h50994 = v__h51000 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h50994, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51168 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h51168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h51053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h51226[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	begin
	  v__h52023 = $stime;
	  #0;
	end
    v__h52017 = v__h52023 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h52017,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h52265 = $stime;
	  #0;
	end
    v__h52259 = v__h52265 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h52259,
		 "I_MMU_Cache",
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_word128_set_in_cache[7:2],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_word128_set_in_cache[7:2],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_437_THEN_cache_ram_word_ETC___d1506);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_437_THEN_cache_master_x_ETC___d1507);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_446___d1447)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h63176 = $stime;
	  #0;
	end
    v__h63170 = v__h63176 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h63170, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_ICache

