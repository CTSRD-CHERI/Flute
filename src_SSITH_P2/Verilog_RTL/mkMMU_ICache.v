//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_awid                O     5
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     5
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     5
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     5
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_ICache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [4 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [4 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [4 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [4 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [4 : 0] mem_master_arid, mem_master_awid;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [98 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port1__write_1,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port2__write_1,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port1__write_1,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port1__write_1,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [6 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas,
       cache_rw_reset_req$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [98 : 0] cache_master_xactor_shim_arff_rv;
  wire [98 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [98 : 0] cache_master_xactor_shim_awff_rv;
  wire [98 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [7 : 0] cache_master_xactor_shim_bff_rv;
  wire [7 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [73 : 0] cache_master_xactor_shim_rff_rv;
  wire [73 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DIB,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [257 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [257 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_37,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_37,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		 MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [98 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_4,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_4,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7450;
  reg [31 : 0] v__h7551;
  reg [31 : 0] v__h7707;
  reg [31 : 0] v__h37270;
  reg [31 : 0] v__h42260;
  reg [31 : 0] v__h47839;
  reg [63 : 0] v__h48109;
  reg [31 : 0] v__h51192;
  reg [63 : 0] v__h51360;
  reg [31 : 0] v__h6899;
  reg [31 : 0] v__h54844;
  reg [63 : 0] v__h55108;
  reg [63 : 0] v__h55228;
  reg [31 : 0] v__h56992;
  reg [31 : 0] v__h57083;
  reg [31 : 0] v__h57304;
  reg [31 : 0] v__h57429;
  reg [63 : 0] v__h57684;
  reg [63 : 0] v__h57804;
  reg [31 : 0] v__h60976;
  reg [31 : 0] v__h61223;
  reg [31 : 0] v__h61184;
  reg [31 : 0] v__h48913;
  reg [31 : 0] v__h48670;
  reg [63 : 0] v__h49091;
  reg [31 : 0] v__h49236;
  reg [31 : 0] v__h49348;
  reg [31 : 0] v__h48842;
  reg [31 : 0] v__h49990;
  reg [31 : 0] v__h49750;
  reg [63 : 0] v__h50168;
  reg [31 : 0] v__h50425;
  reg [31 : 0] v__h50313;
  reg [31 : 0] v__h49919;
  reg [31 : 0] v__h50905;
  reg [31 : 0] v__h50976;
  reg [31 : 0] v__h51058;
  reg [31 : 0] v__h50834;
  reg [31 : 0] v__h51933;
  reg [31 : 0] v__h52175;
  reg [31 : 0] v__h55464;
  reg [31 : 0] v__h56650;
  reg [31 : 0] v__h56765;
  reg [31 : 0] v__h56488;
  reg [31 : 0] v__h56876;
  reg [31 : 0] v__h57984;
  reg [31 : 0] v__h58355;
  reg [31 : 0] v__h60666;
  reg [31 : 0] v__h58283;
  reg [31 : 0] v__h62155;
  reg [31 : 0] v__h63520;
  reg [31 : 0] v__h6893;
  reg [31 : 0] v__h7444;
  reg [31 : 0] v__h7545;
  reg [31 : 0] v__h7701;
  reg [31 : 0] v__h37264;
  reg [31 : 0] v__h42254;
  reg [31 : 0] v__h47833;
  reg [31 : 0] v__h48664;
  reg [31 : 0] v__h48836;
  reg [31 : 0] v__h48907;
  reg [31 : 0] v__h49230;
  reg [31 : 0] v__h49342;
  reg [31 : 0] v__h49744;
  reg [31 : 0] v__h49913;
  reg [31 : 0] v__h49984;
  reg [31 : 0] v__h50307;
  reg [31 : 0] v__h50419;
  reg [31 : 0] v__h50828;
  reg [31 : 0] v__h50899;
  reg [31 : 0] v__h50970;
  reg [31 : 0] v__h51052;
  reg [31 : 0] v__h51186;
  reg [31 : 0] v__h51927;
  reg [31 : 0] v__h52169;
  reg [31 : 0] v__h54838;
  reg [31 : 0] v__h55458;
  reg [31 : 0] v__h56482;
  reg [31 : 0] v__h56644;
  reg [31 : 0] v__h56759;
  reg [31 : 0] v__h56870;
  reg [31 : 0] v__h56986;
  reg [31 : 0] v__h57077;
  reg [31 : 0] v__h57298;
  reg [31 : 0] v__h57423;
  reg [31 : 0] v__h57978;
  reg [31 : 0] v__h58277;
  reg [31 : 0] v__h58349;
  reg [31 : 0] v__h60660;
  reg [31 : 0] v__h60970;
  reg [31 : 0] v__h61178;
  reg [31 : 0] v__h61217;
  reg [31 : 0] v__h62149;
  reg [31 : 0] v__h63514;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32,
		CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996,
		b__h38550,
		b__h42789,
		new_word128__h38531;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50,
	       IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529,
	       IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880,
	       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884,
	       IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016,
	       IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735,
	       _theResult_____2__h43017,
	       _theResult_____2__h58488,
	       _theResult___fst__h9467,
	       _theResult___snd__h10620,
	       _theResult___snd__h60395,
	       _theResult___snd_fst__h36100,
	       _theResult___snd_fst__h42000,
	       _theResult___snd_fst__h55790,
	       _theResult___snd_snd__h36101,
	       _theResult___snd_snd__h58671,
	       mem_req_wr_data_wdata__h6039,
	       w1__h42861,
	       w1__h42866,
	       w1__h58450,
	       w1__h58455;
  reg [7 : 0] fabric_2_strb__h5624, mem_req_wr_data_wstrb__h6040;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5981, size_val__h57657;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d399,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d409,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d415,
      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d285,
      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d295,
      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d301,
      IF_cache_rg_width_code_47_EQ_0_48_OR_cache_rg__ETC___d335,
      IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312,
      IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1010,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1118,
		 IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1009,
		 IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1117,
		 IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1127,
		 IF_cache_rg_victim_way_374_THEN_cache_master_x_ETC___d1443,
		 IF_cache_rg_victim_way_374_THEN_cache_ram_word_ETC___d1442,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664,
		 x__h10678,
		 y__h10679,
		 y__h10700,
		 y__h23396;
  wire [127 : 0] IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639,
		 IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046,
		 b__h52393,
		 b__h58232,
		 new_st_val_128__h43018,
		 new_st_val_128__h58489,
		 x__h36099,
		 x__h47389,
		 x__h58483,
		 x__h60644;
  wire [97 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35;
  wire [63 : 0] IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d673,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d677,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d681,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d685,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d689,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d693,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d697,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d701,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d705,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d709,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d713,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d717,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d721,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d725,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d729,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d733,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d753,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d757,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d761,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d765,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d769,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d773,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d777,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d781,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d793,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d797,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d801,
		SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d805,
		_theResult___fst__h9142,
		_theResult___fst__h9213,
		_theResult___snd__h55758,
		_theResult___snd_fst__h9144,
		_theResult___snd_fst__h9215,
		_theResult___snd_fst__h9691,
		cline_fabric_addr__h51245,
		lev_0_pte_pa__h50022,
		lev_0_pte_pa_w64_fa__h50024,
		lev_1_PTN_pa__h48943,
		lev_1_pte_pa__h48945,
		lev_1_pte_pa_w64_fa__h48947,
		lev_2_pte_pa__h47892,
		lev_2_pte_pa_w64_fa__h47894,
		new_st_val_64__h43023,
		new_st_val_64__h43095,
		new_st_val_64__h44292,
		new_st_val_64__h44296,
		new_st_val_64__h44300,
		new_st_val_64__h44304,
		new_st_val_64__h44309,
		new_st_val_64__h44315,
		new_st_val_64__h44320,
		new_st_val_64__h58494,
		new_st_val_64__h58566,
		new_st_val_64__h60507,
		new_st_val_64__h60511,
		new_st_val_64__h60515,
		new_st_val_64__h60519,
		new_st_val_64__h60524,
		new_st_val_64__h60530,
		new_st_val_64__h60535,
		pa___1__h9473,
		pa___1__h9522,
		pa___1__h9591,
		pte___1__h9740,
		pte___1__h9768,
		pte___2__h9465,
		result_lo__h36138,
		result_lo__h36173,
		result_lo__h36206,
		result_lo__h36239,
		result_lo__h36272,
		result_lo__h36305,
		result_lo__h36338,
		result_lo__h36371,
		result_lo__h36404,
		result_lo__h36437,
		result_lo__h36470,
		result_lo__h36503,
		result_lo__h36536,
		result_lo__h36569,
		result_lo__h36602,
		result_lo__h36635,
		result_lo__h36690,
		result_lo__h36723,
		result_lo__h36756,
		result_lo__h36789,
		result_lo__h36822,
		result_lo__h36855,
		result_lo__h36888,
		result_lo__h36921,
		result_lo__h36968,
		result_lo__h37001,
		result_lo__h37034,
		result_lo__h37067,
		result_lo__h55827,
		result_lo__h55860,
		result_lo__h55893,
		result_lo__h55926,
		result_lo__h55959,
		result_lo__h55992,
		result_lo__h56025,
		result_lo__h56058,
		result_lo__h56121,
		result_lo__h56154,
		result_lo__h56187,
		result_lo__h56220,
		result_lo__h56271,
		result_lo__h56304,
		result_lo__h59442,
		result_lo__h59474,
		result_lo__h59506,
		result_lo__h59538,
		result_lo__h59570,
		result_lo__h59602,
		result_lo__h59634,
		result_lo__h59666,
		result_lo__h59698,
		result_lo__h59730,
		result_lo__h59762,
		result_lo__h59794,
		result_lo__h59826,
		result_lo__h59858,
		result_lo__h59890,
		result_lo__h59922,
		result_lo__h59976,
		result_lo__h60008,
		result_lo__h60040,
		result_lo__h60072,
		result_lo__h60104,
		result_lo__h60136,
		result_lo__h60168,
		result_lo__h60200,
		result_lo__h60246,
		result_lo__h60278,
		result_lo__h60310,
		result_lo__h60342,
		satp_pa__h4568,
		value__h9785,
		vpn_0_pa__h50021,
		vpn_1_pa__h48944,
		vpn_2_pa__h47891,
		w1___1__h43062,
		w1___1__h58533,
		w2__h42868,
		word64__h5958,
		x1_avValue_pa__h9053,
		x__h43021,
		x__h58492;
  wire [55 : 0] x__h49040, x__h7827, x__h9476, x__h9525, x__h9594;
  wire [51 : 0] x__h52635, x__h52703;
  wire [31 : 0] IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q53,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q60,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q67,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q74,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q18,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q19,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q20,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q21,
		cache_rg_st_amo_val_BITS_31_TO_0__q31,
		w12861_BITS_31_TO_0__q30,
		w18450_BITS_31_TO_0__q79;
  wire [15 : 0] IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q52,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q56,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q59,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q63,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q66,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q73,
		IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q77,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q37,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q12,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q14,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q16,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q2,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q4,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q6,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q8,
		cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q9;
  wire [7 : 0] IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q51,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q54,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q55,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q57,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q58,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q61,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q64,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q65,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q68,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q70,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q72,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q75,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q76,
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q78,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q36,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q10,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q11,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q13,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q15,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q17,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q22,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q23,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q24,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q25,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q26,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q27,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q28,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q29,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q3,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q5,
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q7,
	       mem_req_wr_addr_awlen__h5942,
	       strobe64__h5959,
	       strobe64__h5966,
	       strobe64__h5970,
	       strobe64__h5974;
  wire [5 : 0] shift_bits__h5647,
	       x1_avValue_snd__h47489,
	       y_avValue_snd__h47487;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1182,
	       IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1181,
	       IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1180,
	       IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1184,
	       IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1183,
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1186;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire [1 : 0] tmp__h51417, tmp__h51418;
  wire IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d419,
       IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d305,
       IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d435,
       IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d434,
       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509,
       IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d429,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d398,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d408,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d414,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d418,
       NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384,
       NOT_cache_f_reset_reqs_notEmpty__26_53_AND_cac_ETC___d1451,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1237,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1300,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1343,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1243,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d313,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d341,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d345,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d511,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d843,
       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d848,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1156,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1176,
       NOT_cache_rg_op_89_EQ_1_14_17_AND_NOT_cache_rg_ETC___d1173,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1121,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1144,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1149,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1154,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d894,
       NOT_cache_rg_priv_63_EQ_0b0_79_37_OR_cache_tlb_ETC___d444,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1125,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1130,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1142,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1167,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1175,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d834,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d845,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d855,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d899,
       NOT_cache_w_req_width_code_wget__833_EQ_0b0_85_ETC___d1874,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431,
       _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_dw_commit_whas__25_AND_cache_dw_commit_w_ETC___d893,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1275,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1285,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1287,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1326,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1332,
       cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237,
       cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243,
       cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d508,
       cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522,
       cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d832,
       cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d837,
       cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d513,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d527,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d529,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d532,
       cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d1123,
       cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d525,
       cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d897,
       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1160,
       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d344,
       cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1179,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d450,
       cache_rg_priv_63_ULE_0b1___d164,
       cache_rg_width_code_47_EQ_0b100_06_OR_cache_rg_ETC___d421,
       cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1890,
       cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1895,
       lrsc_result__h38156,
       mem_req_wr_second_data_wuser__h5762;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[97:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[7] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[97:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[73] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd0)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[98] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d450 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_53_AND_cac_ETC___d1451 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[98] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[7] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[7] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[7] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[73] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[73] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1237 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1300 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1343 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req = CAN_FIRE_RL_cache_do_req ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_37
  assign CAN_FIRE___me_check_37 = 1'b1 ;
  assign WILL_FIRE___me_check_37 = 1'b1 ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[98] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d532 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1125 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1890 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d899 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__833_EQ_0b0_85_ETC___d1874 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1243 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d855 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d527 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1285 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[128],
		 x__h36099 } :
	       { 65'd0, _theResult___snd_fst__h42000 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       { 65'd0, _theResult___snd_fst__h55790 } :
	       { 1'd0, b__h52393 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h60644 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h9053,
	       IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1127 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h58483 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 6'd32, lev_1_pte_pa_w64_fa__h48947, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 6'd32, lev_0_pte_pa_w64_fa__h50024, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 6'd32,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 ?
		 { 8'd0, size_val__h57657, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 6'd32, lev_2_pte_pa_w64_fa__h47894, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 6'd32, cline_fabric_addr__h51245, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6039,
	       mem_req_wr_data_wstrb__h6040,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5762 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       x__h52635,
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       x__h52703 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1009,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1010 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1117,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1118 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64,
		 cache_ram_word128_set$DOB[128:0] } :
	       { cache_ram_word128_set$DOB[257:129],
		 cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       6'd12 :
	       6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd__h47489 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h38156 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[128],
		 x__h47389 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_cache_w_req_width_code_wget__833_EQ_0b0_85_ETC___d1874 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_4 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     EN_commit ?
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1186 :
	       5'd4 ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[7] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[73] ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_output_ld_val$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d532 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[98] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[98] &&
	     mem_master_arready ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 6'd32,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5942,
	       _theResult___snd_snd_fst_val__h5981,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       cache_master_xactor_shim_wff_rv$port2__write_1 :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port2__write_1 =
	     { 1'd0,
	       74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_wff_rv$port2__write_1 :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port1__write_1 =
	     { 1'd0, 7'bxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   99'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port1__write_1 =
	     { 1'd0,
	       98'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port1__write_1 =
	     { 1'd0,
	       73'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port2__read ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = 6'd1;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__833_EQ_0b0_85_ETC___d1874 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1243 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d855 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = x1_avValue_pa__h9053 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d837 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d529 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d527 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ? req_addr : x1_avValue_pa__h9053 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  lev_1_pte_pa__h48945 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  lev_0_pte_pa__h50022 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or lev_2_pte_pa__h47892)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = lev_1_pte_pa__h48945;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = lev_0_pte_pa__h50022;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = lev_2_pte_pa__h47892;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1176 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  MUX_cache_rg_state$write_1__SEL_4 or
	  MUX_cache_rg_state$write_1__VAL_4 or
	  MUX_cache_rg_state$write_1__SEL_5 or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    MUX_cache_rg_state$write_1__SEL_4:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_4;
    MUX_cache_rg_state$write_1__SEL_5:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h51418[0] ;
  assign cache_rg_victim_way$EN = CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5624,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5762 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1125 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN = 128'h0 ;
  assign cache_f_pte_writebacks$ENQ = 1'b0 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d899 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  MUX_cache_tlb$insert_1__SEL_2 or MUX_cache_tlb$insert_1__SEL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_tlb$insert_pte_pa = cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1285 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d419 =
	     (x1_avValue_pa__h9053[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 :
	       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d418 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1010 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38550 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1118 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42789 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1182 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1181 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1009 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38550 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1117 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42789 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1180 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ?
	       cache_rg_state :
	       5'd9 ;
  assign IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d305 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639 =
	     cache_rg_lower_word64_full ? b__h52393 : b__h58232 ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q51 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[7:0] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q52 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[15:0] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q53 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[31:0] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q54 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[15:8] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[23:16] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[31:16] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[31:24] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[39:32] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[47:32] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:32] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[47:40] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[55:48] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:48] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:56] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[71:64] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[79:64] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[95:64] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[79:72] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[87:80] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[95:88] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[95:80] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[103:96] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[111:96] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[127:96] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[111:104] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[119:112] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q77 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[127:112] ;
  assign IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q78 =
	     IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[127:120] ;
  assign IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1184 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1180 :
	       IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1183 ;
  assign IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d435 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d313 :
	       IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d434 ;
  assign IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1127 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046 } ;
  assign IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d1183 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1181 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1182 ;
  assign IF_cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_ETC___d434 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d344 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d345 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431 ;
  assign IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1186 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       (cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1179 ?
		  5'd4 :
		  IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1184) ;
  assign IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 =
	     x1_avValue_pa__h9053 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_374_THEN_cache_master_x_ETC___d1443 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_374_THEN_cache_ram_word_ETC___d1442 =
	     cache_rg_victim_way ?
	       cache_ram_word128_set$DOB[128:0] :
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d429 =
	     IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 ||
	      IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426) ;
  assign IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h43018 ;
  assign IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q31[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q31 } :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d398 =
	     x1_avValue_pa__h9053[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d408 =
	     x1_avValue_pa__h9053[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d414 =
	     x1_avValue_pa__h9053[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d418 =
	     x1_avValue_pa__h9053[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_53_AND_cac_ETC___d1451 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1237 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1300 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[98] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1343 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[73] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1243 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d313 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ||
	     IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d341 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 ||
	      IF_cache_rg_width_code_47_EQ_0_48_OR_cache_rg__ETC___d335) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 ||
	      IF_cache_rg_width_code_47_EQ_0_48_OR_cache_rg__ETC___d335) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d345 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ||
	     !EN_commit ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d511 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d843 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d848 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1144 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1156 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1154 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1176 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 ;
  assign NOT_cache_rg_op_89_EQ_1_14_17_AND_NOT_cache_rg_ETC___d1173 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1121 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) &&
	     EN_commit ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1144 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d832 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1149 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) &&
	     EN_commit &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d843 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1154 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d894 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321) &&
	     cache_dw_commit_whas__25_AND_cache_dw_commit_w_ETC___d893 ;
  assign NOT_cache_rg_priv_63_EQ_0b0_79_37_OR_cache_tlb_ETC___d444 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb$lookup[69] ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1125 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d1123 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1130 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1142 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1167 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d345 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1175 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_89_EQ_1_14_17_AND_NOT_cache_rg_ETC___d1173 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_63_EQ_0b0_79_37_OR_cache_tlb_ETC___d444 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[69] &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d834 =
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d832 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d845 =
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d843 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d855 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 &&
	      cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522) ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d899 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8) &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d897 ;
  assign NOT_cache_w_req_width_code_wget__833_EQ_0b0_85_ETC___d1874 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d673 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q17[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q17 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d677 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d681 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q15[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q15 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d685 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d689 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q13[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q13 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d693 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q27[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d697 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q11[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q11 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d701 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d705 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q10[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q10 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d709 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q25[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d713 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q7[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q7 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d717 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q24[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d721 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q5[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q5 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d725 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q22[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d729 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q3[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q3 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d733 =
	     { {56{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q23[7]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d753 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q16[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q16 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d757 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q14[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q14 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d761 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q12[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q12 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d765 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q9[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q9 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d769 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q8[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q8 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d773 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q6[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q6 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d777 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q4[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q4 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d781 =
	     { {48{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q2[15]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q2 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d793 =
	     { {32{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q21[31]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d797 =
	     { {32{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q20[31]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d801 =
	     { {32{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q19[31]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d805 =
	     { {32{cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q18[31]}},
	       cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q18 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d431 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 ||
	      IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426) &&
	     cache_rg_width_code_47_EQ_0b100_06_OR_cache_rg_ETC___d421 &&
	     IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d429 ;
  assign _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 =
	     8'd1 << size_val__h57657 <= 8'd8 ;
  assign _theResult___fst__h9142 =
	     cache_tlb$lookup[130] ? _theResult___fst__h9213 : cache_rg_addr ;
  assign _theResult___fst__h9213 =
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 ||
	      !cache_tlb$lookup[72]) ?
	       cache_rg_addr :
	       _theResult___fst__h9467 ;
  assign _theResult___snd__h55758 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       64'd0 ;
  assign _theResult___snd_fst__h9144 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h9215 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h9215 =
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 ||
	      !cache_tlb$lookup[72]) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9691 ;
  assign _theResult___snd_fst__h9691 =
	     (!pte___2__h9465[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h9768 :
	       pte___2__h9465 ;
  assign b__h52393 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign b__h58232 = { 64'd0, _theResult___snd_fst__h55790 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_dw_commit_whas__25_AND_cache_dw_commit_w_ETC___d893 =
	     EN_commit &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q80 =
	     cache_master_xactor_shim_arff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q34 =
	     cache_master_xactor_shim_awff_rv$port1__read[97:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1275 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1285 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1287 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1326 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1332 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q36 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q37 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q35 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h9053[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h9053[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d508 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     EN_commit ;
  assign cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d832 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664 =
	     x__h10678 | y__h10679 ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q10 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[71:64] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q11 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[55:48] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q12 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[47:32] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q13 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[39:32] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q14 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:16] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q15 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[23:16] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q16 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[15:0] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q17 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[7:0] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q18 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:96] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q19 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:64] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q2 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:112] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q20 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:32] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q21 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:0] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q22 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[111:104] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q23 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:120] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q24 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:88] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q25 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[79:72] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q26 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:56] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q27 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[47:40] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q28 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:24] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q29 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[15:8] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q3 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[119:112] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q4 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[111:96] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q5 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[103:96] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q6 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:80] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q7 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[87:80] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q8 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[79:64] ;
  assign cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC__q9 =
	     cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:48] ;
  assign cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d837 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ;
  assign cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h9053 ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d513 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d508 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d511) ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d527 =
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d513 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d525 ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d529 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243) ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d532 =
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d529 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38156 ;
  assign cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d1123 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1121 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 ;
  assign cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d525 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d509 ;
  assign cache_rg_op_89_EQ_1_14_OR_cache_rg_op_89_EQ_2__ETC___d897 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d894 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d522 ;
  assign cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1160 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38156 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d344 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38156 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d341 ;
  assign cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	     !cache_tlb$lookup[69] ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1179 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 ||
	      !cache_tlb$lookup[72]) ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d450 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      (!cache_tlb$lookup[130] ||
	       cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 ||
	       !cache_tlb$lookup[72]) ||
	      IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d435) &&
	     (!EN_commit || !cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130] ||
	      NOT_cache_rg_priv_63_EQ_0b0_79_37_OR_cache_tlb_ETC___d444 &&
	      cache_tlb$lookup[72] ||
	      cache_tlb$RDY_lookup) ;
  assign cache_rg_priv_63_ULE_0b1___d164 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q31 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_47_EQ_0b100_06_OR_cache_rg_ETC___d421 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 ;
  assign cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1890 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1895 =
	     (cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1890 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cline_fabric_addr__h51245 = { cache_rg_pa[63:6], 6'd0 } ;
  assign lev_0_pte_pa__h50022 = lev_1_PTN_pa__h48943 + vpn_0_pa__h50021 ;
  assign lev_0_pte_pa_w64_fa__h50024 = { lev_0_pte_pa__h50022[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h48943 = { 8'd0, x__h49040 } ;
  assign lev_1_pte_pa__h48945 = lev_1_PTN_pa__h48943 + vpn_1_pa__h48944 ;
  assign lev_1_pte_pa_w64_fa__h48947 = { lev_1_pte_pa__h48945[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h47892 = satp_pa__h4568 + vpn_2_pa__h47891 ;
  assign lev_2_pte_pa_w64_fa__h47894 = { lev_2_pte_pa__h47892[63:3], 3'b0 } ;
  assign lrsc_result__h38156 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321 ;
  assign mem_req_wr_addr_awlen__h5942 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5762 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h43018 = { 64'd0, x__h43021 } ;
  assign new_st_val_128__h58489 = { 64'd0, x__h58492 } ;
  assign new_st_val_64__h43023 = { 32'd0, _theResult_____2__h43017[31:0] } ;
  assign new_st_val_64__h43095 =
	     IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 +
	     IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ;
  assign new_st_val_64__h44292 = w1__h42866 ^ w2__h42868 ;
  assign new_st_val_64__h44296 = w1__h42866 & w2__h42868 ;
  assign new_st_val_64__h44300 = w1__h42866 | w2__h42868 ;
  assign new_st_val_64__h44304 =
	     (w1__h42866 < w2__h42868) ? w1__h42866 : w2__h42868 ;
  assign new_st_val_64__h44309 =
	     (w1__h42866 <= w2__h42868) ? w2__h42868 : w1__h42866 ;
  assign new_st_val_64__h44315 =
	     ((IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ^
	       64'h8000000000000000)) ?
	       w1__h42866 :
	       w2__h42868 ;
  assign new_st_val_64__h44320 =
	     ((IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ^
	       64'h8000000000000000)) ?
	       w2__h42868 :
	       w1__h42866 ;
  assign new_st_val_64__h58494 = { 32'd0, _theResult_____2__h58488[31:0] } ;
  assign new_st_val_64__h58566 =
	     IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 +
	     IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ;
  assign new_st_val_64__h60507 = w1__h58455 ^ w2__h42868 ;
  assign new_st_val_64__h60511 = w1__h58455 & w2__h42868 ;
  assign new_st_val_64__h60515 = w1__h58455 | w2__h42868 ;
  assign new_st_val_64__h60519 =
	     (w1__h58455 < w2__h42868) ? w1__h58455 : w2__h42868 ;
  assign new_st_val_64__h60524 =
	     (w1__h58455 <= w2__h42868) ? w2__h42868 : w1__h58455 ;
  assign new_st_val_64__h60530 =
	     ((IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ^
	       64'h8000000000000000)) ?
	       w1__h58455 :
	       w2__h42868 ;
  assign new_st_val_64__h60535 =
	     ((IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1018 ^
	       64'h8000000000000000)) ?
	       w2__h42868 :
	       w1__h58455 ;
  assign pa___1__h9473 = { 8'd0, x__h9476 } ;
  assign pa___1__h9522 = { 8'd0, x__h9525 } ;
  assign pa___1__h9591 = { 8'd0, x__h9594 } ;
  assign pte___1__h9740 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9768 =
	     { pte___2__h9465[63:8], 1'd1, pte___2__h9465[6:0] } ;
  assign pte___2__h9465 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9740 ;
  assign result_lo__h36138 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d673 ;
  assign result_lo__h36173 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d677 ;
  assign result_lo__h36206 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d681 ;
  assign result_lo__h36239 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d685 ;
  assign result_lo__h36272 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d689 ;
  assign result_lo__h36305 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d693 ;
  assign result_lo__h36338 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d697 ;
  assign result_lo__h36371 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d701 ;
  assign result_lo__h36404 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d705 ;
  assign result_lo__h36437 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d709 ;
  assign result_lo__h36470 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d713 ;
  assign result_lo__h36503 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d717 ;
  assign result_lo__h36536 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d721 ;
  assign result_lo__h36569 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d725 ;
  assign result_lo__h36602 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d729 ;
  assign result_lo__h36635 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d733 ;
  assign result_lo__h36690 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d753 ;
  assign result_lo__h36723 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d757 ;
  assign result_lo__h36756 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d761 ;
  assign result_lo__h36789 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d765 ;
  assign result_lo__h36822 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d769 ;
  assign result_lo__h36855 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d773 ;
  assign result_lo__h36888 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d777 ;
  assign result_lo__h36921 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d781 ;
  assign result_lo__h36968 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d793 ;
  assign result_lo__h37001 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d797 ;
  assign result_lo__h37034 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d801 ;
  assign result_lo__h37067 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d805 ;
  assign result_lo__h55827 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q36[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q36 } ;
  assign result_lo__h55860 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q39 } ;
  assign result_lo__h55893 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q40 } ;
  assign result_lo__h55926 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q42 } ;
  assign result_lo__h55959 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q44 } ;
  assign result_lo__h55992 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q47 } ;
  assign result_lo__h56025 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q46 } ;
  assign result_lo__h56058 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q49 } ;
  assign result_lo__h56121 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q37[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q37 } ;
  assign result_lo__h56154 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q41 } ;
  assign result_lo__h56187 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q43 } ;
  assign result_lo__h56220 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q48 } ;
  assign result_lo__h56271 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q38 } ;
  assign result_lo__h56304 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q45 } ;
  assign result_lo__h59442 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q51[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q51 } ;
  assign result_lo__h59474 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q54[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q54 } ;
  assign result_lo__h59506 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q55[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h59538 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q57[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h59570 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q58[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h59602 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q61[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h59634 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h59666 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q64[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h59698 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q65[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h59730 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q68[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h59762 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h59794 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q70[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h59826 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q72[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q72 } ;
  assign result_lo__h59858 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q75[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h59890 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h59922 =
	     { {56{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q78[7]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q78 } ;
  assign result_lo__h59976 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q52[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q52 } ;
  assign result_lo__h60008 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q56[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h60040 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q59[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h60072 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q63[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h60104 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q66[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h60136 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q71[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h60168 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q73[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h60200 =
	     { {48{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q77[15]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q77 } ;
  assign result_lo__h60246 =
	     { {32{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q53[31]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q53 } ;
  assign result_lo__h60278 =
	     { {32{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q60[31]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h60310 =
	     { {32{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q67[31]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h60342 =
	     { {32{IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q74[31]}},
	       IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC__q74 } ;
  assign satp_pa__h4568 = { 8'd0, x__h7827 } ;
  assign shift_bits__h5647 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5959 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5966 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5970 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5974 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h51417 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h51418 = tmp__h51417 + 2'd1 ;
  assign value__h9785 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h9144 :
	       cache_tlb$lookup[129:66] ;
  assign vpn_0_pa__h50021 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h48944 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h47891 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w12861_BITS_31_TO_0__q30 = w1__h42861[31:0] ;
  assign w18450_BITS_31_TO_0__q79 = w1__h58450[31:0] ;
  assign w1___1__h43062 = { 32'd0, w1__h42861[31:0] } ;
  assign w1___1__h58533 = { 32'd0, w1__h58450[31:0] } ;
  assign w2__h42868 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h5958 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5647 ;
  assign x1_avValue_pa__h9053 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h9142 :
	       cache_rg_addr ;
  assign x1_avValue_snd__h47489 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h47487 ;
  assign x__h10678 = cache_ram_word128_set$DOB[128:0] & y__h10700 ;
  assign x__h36099 =
	     { _theResult___snd_snd__h36101, _theResult___snd_fst__h36100 } ;
  assign x__h43021 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h43023 :
	       _theResult_____2__h43017 ;
  assign x__h47389 = { _theResult___snd_snd__h36101, w1__h42861 } ;
  assign x__h49040 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h52635 =
	     cache_rg_victim_way ?
	       cache_rg_pa[63:12] :
	       cache_ram_state_and_ctag_cset$DOB[104:53] ;
  assign x__h52703 =
	     cache_rg_victim_way ?
	       cache_ram_state_and_ctag_cset$DOB[51:0] :
	       cache_rg_pa[63:12] ;
  assign x__h58483 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h58489 ;
  assign x__h58492 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h58494 :
	       _theResult_____2__h58488 ;
  assign x__h60644 = { _theResult___snd_snd__h58671, w1__h58450 } ;
  assign x__h7827 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9476 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9525 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9594 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10679 = cache_ram_word128_set$DOB[257:129] & y__h23396 ;
  assign y__h10700 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237}} ;
  assign y__h23396 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243}} ;
  assign y_avValue_snd__h47487 =
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1179 ?
	       6'd12 :
	       cache_rg_exc_code ;
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___snd_fst__h42000 = 64'd1;
      default: _theResult___snd_fst__h42000 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5624 = 8'd0;
      3'b100: fabric_2_strb__h5624 = 8'b11111111;
      default: fabric_2_strb__h5624 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5981 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5981 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5981 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h57657 = cache_rg_width_code;
      default: size_val__h57657 = 3'b100;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5959 or
	  strobe64__h5966 or strobe64__h5970 or strobe64__h5974)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6040 = strobe64__h5959;
      3'b001: mem_req_wr_data_wstrb__h6040 = strobe64__h5966;
      3'b010: mem_req_wr_data_wstrb__h6040 = strobe64__h5970;
      3'b011: mem_req_wr_data_wstrb__h6040 = strobe64__h5974;
      3'b100: mem_req_wr_data_wstrb__h6040 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6040 = 8'd0;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9473 or pa___1__h9522 or pa___1__h9591)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9467 = pa___1__h9473;
      2'd1: _theResult___fst__h9467 = pa___1__h9522;
      2'd2: _theResult___fst__h9467 = pa___1__h9591;
      2'd3: _theResult___fst__h9467 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5958)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6039 = word64__h5958;
      default: mem_req_wr_data_wdata__h6039 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243 or
	  cache_ram_word128_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243)
      1'd0: new_word128__h38531 = cache_ram_word128_set$DOB[127:0];
      1'd1: new_word128__h38531 = cache_ram_word128_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 or
	  cache_rg_priv_63_ULE_0b1___d164 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_47_EQ_0_48_OR_cache_rg__ETC___d335 =
	      !cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_47_EQ_0_48_OR_cache_rg__ETC___d335 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d285 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
      4'd15:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d285 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d295 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d295 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d301 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d301 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d285 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d295 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d301 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d305)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d285;
      3'd1:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d295;
      3'b010:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_O_ETC___d301;
      3'd3:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d305;
      default: IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d279 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 =
	      IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_47_EQ_0_48_THEN_IF_cach_ETC___d312;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d408 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d409 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d409 =
		   NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d408;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d398 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d399 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      4'd15:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d399 =
	      NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d398;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d414 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d415 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q1;
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d415 =
		   NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d414;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280 or
	  cache_rg_priv_63_ULE_0b1___d164 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d399 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d409 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d415 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d419 or
	  cache_rg_width_code_47_EQ_0b100_06_OR_cache_rg_ETC___d421)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d399;
      3'd1:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d409;
      3'b010:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d415;
      3'd3:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d419;
      3'b100:
	  IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
	      cache_rg_width_code_47_EQ_0b100_06_OR_cache_rg_ETC___d421;
      default: IF_cache_rg_width_code_47_EQ_0_48_THEN_NOT_cac_ETC___d426 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d280;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h36101 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h36101 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:64];
      default: _theResult___snd_snd__h36101 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h10620 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:0];
      4'h8:
	  _theResult___snd__h10620 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[127:64];
      default: _theResult___snd__h10620 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d793 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d797 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d801 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d805)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d793;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d797;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d801;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d805;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36968 or
	  result_lo__h37001 or result_lo__h37034 or result_lo__h37067)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 =
	      result_lo__h36968;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 =
	      result_lo__h37001;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 =
	      result_lo__h37034;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 =
	      result_lo__h37067;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d753 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d757 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d761 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d765 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d769 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d773 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d777 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d781)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d753;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d757;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d761;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d765;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d769;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d773;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d777;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d781;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36690 or
	  result_lo__h36723 or
	  result_lo__h36756 or
	  result_lo__h36789 or
	  result_lo__h36822 or
	  result_lo__h36855 or result_lo__h36888 or result_lo__h36921)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36690;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36723;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36756;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36789;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36822;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36855;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36888;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
	      result_lo__h36921;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d673 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d677 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d681 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d685 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d689 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d693 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d697 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d701 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d705 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d709 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d713 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d717 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d721 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d725 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d729 or
	  SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d733)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d673;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d677;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d681;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d685;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d689;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d693;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d697;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d701;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d705;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d709;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d713;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d717;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d721;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d725;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d729;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 =
	      SEXT_cache_ram_word128_set_b_read__74_BITS_128_ETC___d733;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884 or
	  _theResult___snd__h10620 or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h42861 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872;
      3'd1:
	  w1__h42861 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880;
      3'b010:
	  w1__h42861 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d884;
      3'd3: w1__h42861 = _theResult___snd__h10620;
      3'b100:
	  w1__h42861 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:0];
      default: w1__h42861 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 or
	  w1___1__h43062 or
	  _theResult___snd__h10620 or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h42866 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872;
      3'd1:
	  w1__h42866 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880;
      3'b010: w1__h42866 = w1___1__h43062;
      3'd3: w1__h42866 = _theResult___snd__h10620;
      3'b100:
	  w1__h42866 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:0];
      default: w1__h42866 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36138 or
	  result_lo__h36173 or
	  result_lo__h36206 or
	  result_lo__h36239 or
	  result_lo__h36272 or
	  result_lo__h36305 or
	  result_lo__h36338 or
	  result_lo__h36371 or
	  result_lo__h36404 or
	  result_lo__h36437 or
	  result_lo__h36470 or
	  result_lo__h36503 or
	  result_lo__h36536 or
	  result_lo__h36569 or result_lo__h36602 or result_lo__h36635)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36138;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36173;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36206;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36239;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36272;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36305;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36338;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36371;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36404;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36437;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36470;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36503;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36536;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36569;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36602;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 =
	      result_lo__h36635;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810 or
	  _theResult___snd__h10620 or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h36100 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d750;
      3'd1:
	  _theResult___snd_fst__h36100 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d790;
      3'b010:
	  _theResult___snd_fst__h36100 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d810;
      3'd3: _theResult___snd_fst__h36100 = _theResult___snd__h10620;
      3'b100:
	  _theResult___snd_fst__h36100 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:0];
      default: _theResult___snd_fst__h36100 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880 or
	  w12861_BITS_31_TO_0__q30 or
	  _theResult___snd__h10620 or
	  cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d872;
      3'd1:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d880;
      3'b010:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
	      { {32{w12861_BITS_31_TO_0__q30[31]}},
		w12861_BITS_31_TO_0__q30 };
      3'd3:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
	      _theResult___snd__h10620;
      3'b100:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
	      cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664[63:0];
      default: IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1016 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h44320 or
	  new_st_val_64__h43095 or
	  w2__h42868 or
	  new_st_val_64__h44292 or
	  new_st_val_64__h44300 or
	  new_st_val_64__h44296 or
	  new_st_val_64__h44315 or
	  new_st_val_64__h44304 or new_st_val_64__h44309)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h43017 = new_st_val_64__h43095;
      5'b00001: _theResult_____2__h43017 = w2__h42868;
      5'b00100: _theResult_____2__h43017 = new_st_val_64__h44292;
      5'b01000: _theResult_____2__h43017 = new_st_val_64__h44300;
      5'b01100: _theResult_____2__h43017 = new_st_val_64__h44296;
      5'b10000: _theResult_____2__h43017 = new_st_val_64__h44315;
      5'b11000: _theResult_____2__h43017 = new_st_val_64__h44304;
      5'b11100: _theResult_____2__h43017 = new_st_val_64__h44309;
      default: _theResult_____2__h43017 = new_st_val_64__h44320;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  new_word128__h38531 or
	  IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 =
	      { new_word128__h38531[127:32],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 =
	      { new_word128__h38531[127:64],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[31:0],
		new_word128__h38531[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 =
	      { new_word128__h38531[127:96],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[31:0],
		new_word128__h38531[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 =
	      { IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[31:0],
		new_word128__h38531[95:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 =
		   new_word128__h38531;
    endcase
  end
  always@(x1_avValue_pa__h9053 or new_word128__h38531 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 =
	      { new_word128__h38531[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 =
	      { new_word128__h38531[127:64],
		cache_rg_st_amo_val[31:0],
		new_word128__h38531[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 =
	      { new_word128__h38531[127:96],
		cache_rg_st_amo_val[31:0],
		new_word128__h38531[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 =
	      { cache_rg_st_amo_val[31:0], new_word128__h38531[95:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 =
		   new_word128__h38531;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  new_word128__h38531 or
	  IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:16],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:32],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:48],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:64],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:80],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:96],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { new_word128__h38531[127:112],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
	      { IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[15:0],
		new_word128__h38531[111:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 =
		   new_word128__h38531;
    endcase
  end
  always@(x1_avValue_pa__h9053 or new_word128__h38531 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:32],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:48],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:64],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:80],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:96],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { new_word128__h38531[127:112],
		cache_rg_st_amo_val[15:0],
		new_word128__h38531[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
	      { cache_rg_st_amo_val[15:0], new_word128__h38531[111:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 =
		   new_word128__h38531;
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  new_word128__h38531 or
	  IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:8],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:16],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:24],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:32],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:40],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:48],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:56],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:64],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:72],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:80],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:88],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:96],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:104],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:112],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { new_word128__h38531[127:120],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 =
	      { IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[7:0],
		new_word128__h38531[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9053 or
	  new_word128__h38531 or
	  IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32 =
	      { new_word128__h38531[127:64],
		IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[63:0] };
      4'h8:
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32 =
	      { IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046[63:0],
		new_word128__h38531[63:0] };
      default: CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32 =
		   new_word128__h38531;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38531 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105 or
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32 or
	  IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h42789 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1079;
      3'd1:
	  b__h42789 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1096;
      3'b010:
	  b__h42789 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1105;
      3'd3:
	  b__h42789 = CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q32;
      3'b100:
	  b__h42789 =
	      IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046;
      default: b__h42789 = new_word128__h38531;
    endcase
  end
  always@(x1_avValue_pa__h9053 or new_word128__h38531 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:16],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:24],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:32],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:40],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:48],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:56],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:64],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:72],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:80],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:88],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:96],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:104],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:112],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { new_word128__h38531[127:120],
		cache_rg_st_amo_val[7:0],
		new_word128__h38531[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 =
	      { cache_rg_st_amo_val[7:0], new_word128__h38531[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9053 or new_word128__h38531 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9053[3:0])
      4'h0:
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33 =
	      { new_word128__h38531[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33 =
	      { cache_rg_st_amo_val[63:0], new_word128__h38531[63:0] };
      default: CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33 =
		   new_word128__h38531;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38531 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996 or
	  CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h38550 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d970;
      3'd1:
	  b__h38550 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d987;
      3'b010:
	  b__h38550 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d996;
      3'd3:
	  b__h38550 = CASE_x1_avValue_pa053_BITS_3_TO_0_0x0_new_word_ETC__q33;
      3'b100: b__h38550 = cache_rg_st_amo_val[127:0];
      default: b__h38550 = new_word128__h38531;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h56121 or
	  result_lo__h56154 or result_lo__h56187 or result_lo__h56220)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 =
	      result_lo__h56121;
      3'd2:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 =
	      result_lo__h56154;
      3'd4:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 =
	      result_lo__h56187;
      3'd6:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 =
	      result_lo__h56220;
      default: IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h55827 or
	  result_lo__h55860 or
	  result_lo__h55893 or
	  result_lo__h55926 or
	  result_lo__h55959 or
	  result_lo__h55992 or result_lo__h56025 or result_lo__h56058)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55827;
      3'd1:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55860;
      3'd2:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55893;
      3'd3:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55926;
      3'd4:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55959;
      3'd5:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h55992;
      3'd6:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h56025;
      3'd7:
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 =
	      result_lo__h56058;
    endcase
  end
  always@(cache_rg_addr or result_lo__h56271 or result_lo__h56304)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50 =
	      result_lo__h56271;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50 =
	      result_lo__h56304;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529 or
	  IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50 or
	  _theResult___snd__h55758 or
	  cache_master_xactor_shim_rff_rv$port1__read)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h55790 =
	      IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1529;
      3'd1:
	  _theResult___snd_fst__h55790 =
	      IF_cache_rg_addr_74_BITS_2_TO_0_481_EQ_0_482_T_ETC___d1549;
      3'b010:
	  _theResult___snd_fst__h55790 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6271_ETC__q50;
      3'd3: _theResult___snd_fst__h55790 = _theResult___snd__h55758;
      3'b100:
	  _theResult___snd_fst__h55790 =
	      cache_master_xactor_shim_rff_rv$port1__read[67:4];
      default: _theResult___snd_fst__h55790 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h58671 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h58671 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[127:64];
      default: _theResult___snd_snd__h58671 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h60395 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:0];
      4'h8:
	  _theResult___snd__h60395 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[127:64];
      default: _theResult___snd__h60395 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h60246 or
	  result_lo__h60278 or result_lo__h60310 or result_lo__h60342)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 =
	      result_lo__h60246;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 =
	      result_lo__h60278;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 =
	      result_lo__h60310;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 =
	      result_lo__h60342;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59976 or
	  result_lo__h60008 or
	  result_lo__h60040 or
	  result_lo__h60072 or
	  result_lo__h60104 or
	  result_lo__h60136 or result_lo__h60168 or result_lo__h60200)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h59976;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60008;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60040;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60072;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60104;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60136;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60168;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
	      result_lo__h60200;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59442 or
	  result_lo__h59474 or
	  result_lo__h59506 or
	  result_lo__h59538 or
	  result_lo__h59570 or
	  result_lo__h59602 or
	  result_lo__h59634 or
	  result_lo__h59666 or
	  result_lo__h59698 or
	  result_lo__h59730 or
	  result_lo__h59762 or
	  result_lo__h59794 or
	  result_lo__h59826 or
	  result_lo__h59858 or result_lo__h59890 or result_lo__h59922)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59442;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59474;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59506;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59538;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59570;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59602;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59634;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59666;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59698;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59730;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59762;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59794;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59826;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59858;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59890;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 =
	      result_lo__h59922;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723 or
	  _theResult___snd__h60395 or
	  IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58450 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687;
      3'd1:
	  w1__h58450 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711;
      3'b010:
	  w1__h58450 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1723;
      3'd3: w1__h58450 = _theResult___snd__h60395;
      3'b100:
	  w1__h58450 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:0];
      default: w1__h58450 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 or
	  w1___1__h58533 or
	  _theResult___snd__h60395 or
	  IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58455 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687;
      3'd1:
	  w1__h58455 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711;
      3'b010: w1__h58455 = w1___1__h58533;
      3'd3: w1__h58455 = _theResult___snd__h60395;
      3'b100:
	  w1__h58455 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:0];
      default: w1__h58455 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711 or
	  w18450_BITS_31_TO_0__q79 or
	  _theResult___snd__h60395 or
	  IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1687;
      3'd1:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_49_EQ_0x0_50_T_ETC___d1711;
      3'b010:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
	      { {32{w18450_BITS_31_TO_0__q79[31]}},
		w18450_BITS_31_TO_0__q79 };
      3'd3:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
	      _theResult___snd__h60395;
      3'b100:
	  IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
	      IF_cache_rg_lower_word64_full_405_THEN_cache_m_ETC___d1639[63:0];
      default: IF_cache_rg_width_code_47_EQ_0b10_96_THEN_SEXT_ETC___d1735 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h60535 or
	  new_st_val_64__h58566 or
	  w2__h42868 or
	  new_st_val_64__h60507 or
	  new_st_val_64__h60515 or
	  new_st_val_64__h60511 or
	  new_st_val_64__h60530 or
	  new_st_val_64__h60519 or new_st_val_64__h60524)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h58488 = new_st_val_64__h58566;
      5'b00001: _theResult_____2__h58488 = w2__h42868;
      5'b00100: _theResult_____2__h58488 = new_st_val_64__h60507;
      5'b01000: _theResult_____2__h58488 = new_st_val_64__h60515;
      5'b01100: _theResult_____2__h58488 = new_st_val_64__h60511;
      5'b10000: _theResult_____2__h58488 = new_st_val_64__h60530;
      5'b11000: _theResult_____2__h58488 = new_st_val_64__h60519;
      5'b11100: _theResult_____2__h58488 = new_st_val_64__h60524;
      default: _theResult_____2__h58488 = new_st_val_64__h60535;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      98'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      98'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 7'bxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      73'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 99'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 8'hAA;
    cache_master_xactor_shim_rff_rv = 74'h2AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5942);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h5981, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6039);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6040);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5762, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7450 = $stime;
	  #0;
	end
    v__h7444 = v__h7450 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7444,
		 "I_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7551 = $stime;
	  #0;
	end
    v__h7545 = v__h7551 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7545, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7707 = $stime;
	  #0;
	end
    v__h7701 = v__h7707 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7701,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4568,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_63_ULE_0b1___d164 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d202 ||
	   !cache_tlb$lookup[72]) &&
	  cache_tlb$lookup[130])
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_63_ULE_0b1___d164 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9785, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d478 &&
	  cache_ram_state_and_ctag_cset$DOB[52] &&
	  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d237 &&
	  cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__10_BITS__ETC___d243)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d834)
	begin
	  v__h37270 = $stime;
	  #0;
	end
    v__h37264 = v__h37270 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d834)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h37264,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  cache_ram_state_and_ctag_cset_b_read__10_BIT_5_ETC___d832)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d834)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d845)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d831 &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  NOT_cache_ram_state_and_ctag_cset_b_read__10_B_ETC___d848)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1130)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  cache_rg_lrsc_valid &&
	  !cache_rg_lrsc_pa_20_EQ_IF_cache_rg_priv_63_ULE_ETC___d321 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_rg_lrsc_valid &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1142)
	$display("        AMO SC result = %0d", lrsc_result__h38156);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9053,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1010);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1009);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1146)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  (cache_rg_op == 2'd1 ||
	   cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	  NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1149)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9053,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1156)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1156)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1160)
	begin
	  v__h42260 = $stime;
	  #0;
	end
    v__h42254 = v__h42260 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1160)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h42254,
		 "I_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_63_ULE_0b1___d164 ||
	   cache_rg_satp[63:60] != 4'd8) &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1160)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1167)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$display("          PA 0x%0h ", x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664,
		 cache_ram_word128_set_b_read__74_BITS_128_TO_0_ETC___d664,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_47_EQ_0b100_06_THEN_cac_ETC___d1046 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1118);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__10_BI_ETC___d1117);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1171)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1175)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9053);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47839 = $stime;
	  #0;
	end
    v__h47833 = v__h47839 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h47833,
		 "I_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48109 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h48109);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h47894);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51192 = $stime;
	  #0;
	end
    v__h51186 = v__h51192 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h51186, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51360 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h51360);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h51245);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h51418[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h6899 = $stime;
	  #0;
	end
    v__h6893 = v__h6899 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h6893,
		 "I_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54844 = $stime;
	  #0;
	end
    v__h54838 = v__h54844 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54838,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55108 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h55108);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57657, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55228 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h55228);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56992 = $stime;
	  #0;
	end
    v__h56986 = v__h56992 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56986,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57083 = $stime;
	  #0;
	end
    v__h57077 = v__h57083 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57077,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57304 = $stime;
	  #0;
	end
    v__h57298 = v__h57304 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57298,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57429 = $stime;
	  #0;
	end
    v__h57423 = v__h57429 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h57423,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57684 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57684);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57657, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57804 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_47_EQ_0_48_OR_cach_ETC___d1458 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h60976 = $stime;
	  #0;
	end
    v__h60970 = v__h60976 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h60970,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h61223 = $stime;
	  #0;
	end
    v__h61217 = v__h61223 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h61217,
	       "I_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h61184 = $stime;
	  #0;
	end
    v__h61178 = v__h61184 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h61178,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48913 = $stime;
	  #0;
	end
    v__h48907 = v__h48913 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48907,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48670 = $stime;
	  #0;
	end
    v__h48664 = v__h48670 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h48664,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49091 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h49091);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h48947);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1275)
	begin
	  v__h49236 = $stime;
	  #0;
	end
    v__h49230 = v__h49236 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1275)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h49230,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1287)
	begin
	  v__h49348 = $stime;
	  #0;
	end
    v__h49342 = v__h49348 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1287)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h49342,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1287)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48943);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48842 = $stime;
	  #0;
	end
    v__h48836 = v__h48842 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48836,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49990 = $stime;
	  #0;
	end
    v__h49984 = v__h49990 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h49984,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49750 = $stime;
	  #0;
	end
    v__h49744 = v__h49750 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h49744,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50168 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h50168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 5'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h50024);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1326)
	begin
	  v__h50425 = $stime;
	  #0;
	end
    v__h50419 = v__h50425 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1326)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h50419,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1326)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48943);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1332)
	begin
	  v__h50313 = $stime;
	  #0;
	end
    v__h50307 = v__h50313 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1332)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h50307,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49919 = $stime;
	  #0;
	end
    v__h49913 = v__h49919 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49913,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50905 = $stime;
	  #0;
	end
    v__h50899 = v__h50905 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h50899,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50976 = $stime;
	  #0;
	end
    v__h50970 = v__h50976 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h50970,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 6'd12);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51058 = $stime;
	  #0;
	end
    v__h51052 = v__h51058 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h51052,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h48943);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50834 = $stime;
	  #0;
	end
    v__h50828 = v__h50834 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h50828,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	begin
	  v__h51933 = $stime;
	  #0;
	end
    v__h51927 = v__h51933 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h51927,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h52175 = $stime;
	  #0;
	end
    v__h52169 = v__h52175 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h52169,
		 "I_MMU_Cache",
		 6'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_374_THEN_cache_ram_word_ETC___d1442);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_374_THEN_cache_master_x_ETC___d1443);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_383___d1384)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55464 = $stime;
	  #0;
	end
    v__h55458 = v__h55464 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55458,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56650 = $stime;
	  #0;
	end
    v__h56644 = v__h56650 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56644,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___snd_fst__h55790 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56765 = $stime;
	  #0;
	end
    v__h56759 = v__h56765 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56759,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56488 = $stime;
	  #0;
	end
    v__h56482 = v__h56488 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56482,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h52393 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56876 = $stime;
	  #0;
	end
    v__h56870 = v__h56876 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56870,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57984 = $stime;
	  #0;
	end
    v__h57978 = v__h57984 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h57978,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[72:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58355 = $stime;
	  #0;
	end
    v__h58349 = v__h58355 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h58349,
		 "I_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60666 = $stime;
	  #0;
	end
    v__h60660 = v__h60666 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h60660,
		 "I_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h60644 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58283 = $stime;
	  #0;
	end
    v__h58277 = v__h58283 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h58277,
		 "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h62155 = $stime;
	  #0;
	end
    v__h62149 = v__h62155 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h62149);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  cache_w_req_width_code_wget__833_EQ_0b0_854_OR_ETC___d1895)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h63520 = $stime;
	  #0;
	end
    v__h63514 = v__h63520 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h63514, "I_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1905, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1904, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1903, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1902, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1901, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_ICache

