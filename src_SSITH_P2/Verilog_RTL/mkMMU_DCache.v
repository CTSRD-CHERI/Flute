//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_awid                O     4
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     4
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     4
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     4
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [3 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [3 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [3 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [3 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arid,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awid,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [97 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port1__write_1,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port2__write_1,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port1__write_1,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [71 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [10 : 0] cache_crg_sb_to_load_delay$port0__write_1,
		cache_crg_sb_to_load_delay$port2__read;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port1__write_1,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [5 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_sb_to_load_delay$EN_port1__write,
       cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas,
       cache_rw_reset_req$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_sb_to_load_delay
  reg [10 : 0] cache_crg_sb_to_load_delay;
  wire [10 : 0] cache_crg_sb_to_load_delay$D_IN;
  wire cache_crg_sb_to_load_delay$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [97 : 0] cache_master_xactor_shim_arff_rv;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [97 : 0] cache_master_xactor_shim_awff_rv;
  wire [97 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [6 : 0] cache_master_xactor_shim_bff_rv;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [72 : 0] cache_master_xactor_shim_rff_rv;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [52 : 0] cache_ram_state_and_ctag_cset$DIA,
		cache_ram_state_and_ctag_cset$DIB,
		cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [128 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [128 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_38,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_38,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [97 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [52 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_4,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_4,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_lrsc_valid$write_1__VAL_2,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_4,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7274;
  reg [31 : 0] v__h7375;
  reg [31 : 0] v__h7811;
  reg [31 : 0] v__h24282;
  reg [31 : 0] v__h29035;
  reg [31 : 0] v__h34366;
  reg [63 : 0] v__h34636;
  reg [31 : 0] v__h37722;
  reg [63 : 0] v__h37890;
  reg [31 : 0] v__h6842;
  reg [31 : 0] v__h40576;
  reg [63 : 0] v__h40816;
  reg [63 : 0] v__h40936;
  reg [31 : 0] v__h42693;
  reg [31 : 0] v__h42781;
  reg [31 : 0] v__h42999;
  reg [31 : 0] v__h43121;
  reg [63 : 0] v__h43352;
  reg [63 : 0] v__h43472;
  reg [31 : 0] v__h46640;
  reg [31 : 0] v__h46887;
  reg [31 : 0] v__h46848;
  reg [31 : 0] v__h35452;
  reg [31 : 0] v__h35209;
  reg [63 : 0] v__h35630;
  reg [31 : 0] v__h35775;
  reg [31 : 0] v__h35887;
  reg [31 : 0] v__h35381;
  reg [31 : 0] v__h36526;
  reg [31 : 0] v__h36286;
  reg [63 : 0] v__h36704;
  reg [31 : 0] v__h36961;
  reg [31 : 0] v__h36849;
  reg [31 : 0] v__h36455;
  reg [31 : 0] v__h37438;
  reg [31 : 0] v__h37509;
  reg [31 : 0] v__h37591;
  reg [31 : 0] v__h37367;
  reg [31 : 0] v__h38526;
  reg [31 : 0] v__h38768;
  reg [31 : 0] v__h41169;
  reg [31 : 0] v__h42355;
  reg [31 : 0] v__h42469;
  reg [31 : 0] v__h42193;
  reg [31 : 0] v__h42580;
  reg [31 : 0] v__h43649;
  reg [31 : 0] v__h44019;
  reg [31 : 0] v__h46330;
  reg [31 : 0] v__h43947;
  reg [31 : 0] v__h47816;
  reg [31 : 0] v__h48933;
  reg [31 : 0] v__h42463;
  reg [31 : 0] v__h6836;
  reg [31 : 0] v__h7268;
  reg [31 : 0] v__h7369;
  reg [31 : 0] v__h7805;
  reg [31 : 0] v__h24276;
  reg [31 : 0] v__h29029;
  reg [31 : 0] v__h34360;
  reg [31 : 0] v__h35203;
  reg [31 : 0] v__h35375;
  reg [31 : 0] v__h35446;
  reg [31 : 0] v__h35769;
  reg [31 : 0] v__h35881;
  reg [31 : 0] v__h36280;
  reg [31 : 0] v__h36449;
  reg [31 : 0] v__h36520;
  reg [31 : 0] v__h36843;
  reg [31 : 0] v__h36955;
  reg [31 : 0] v__h37361;
  reg [31 : 0] v__h37432;
  reg [31 : 0] v__h37503;
  reg [31 : 0] v__h37585;
  reg [31 : 0] v__h37716;
  reg [31 : 0] v__h38520;
  reg [31 : 0] v__h38762;
  reg [31 : 0] v__h40570;
  reg [31 : 0] v__h41163;
  reg [31 : 0] v__h42187;
  reg [31 : 0] v__h42349;
  reg [31 : 0] v__h42574;
  reg [31 : 0] v__h42687;
  reg [31 : 0] v__h42775;
  reg [31 : 0] v__h42993;
  reg [31 : 0] v__h43115;
  reg [31 : 0] v__h43643;
  reg [31 : 0] v__h43941;
  reg [31 : 0] v__h44013;
  reg [31 : 0] v__h46324;
  reg [31 : 0] v__h46634;
  reg [31 : 0] v__h46842;
  reg [31 : 0] v__h46881;
  reg [31 : 0] v__h47810;
  reg [31 : 0] v__h48927;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51,
		CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967,
		x__h25619,
		x__h29655;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54,
	       IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505,
	       IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853,
	       IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857,
	       IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711,
	       IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983,
	       _theResult_____2__h29745,
	       _theResult_____2__h44152,
	       _theResult___fst__h9215,
	       _theResult___snd__h10351,
	       _theResult___snd__h46059,
	       _theResult___snd_fst__h23112,
	       _theResult___snd_fst__h28775,
	       _theResult___snd_fst__h41495,
	       _theResult___snd_snd__h23113,
	       _theResult___snd_snd__h44335,
	       mem_req_wr_data_wdata__h6003,
	       w1__h29597,
	       w1__h29602,
	       w1__h44114,
	       w1__h44119;
  reg [7 : 0] fabric_2_strb__h5601, mem_req_wr_data_wstrb__h6004;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5945, size_val__h43325;
  reg CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19,
      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d411,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d420,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425,
      IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433,
      IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336;
  wire [128 : 0] IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1103,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624,
		 y__h10408;
  wire [127 : 0] IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615,
		 IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1083,
		 IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013,
		 b__h43897,
		 new_st_val_128__h29746,
		 new_st_val_128__h44153,
		 x__h23111,
		 x__h33923,
		 x__h38989,
		 x__h44147,
		 x__h46308;
  wire [96 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16;
  wire [63 : 0] IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d636,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d640,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d644,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d648,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d652,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d656,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d660,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d664,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d668,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d672,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d676,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d680,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d684,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d688,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d692,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d696,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d716,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d720,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d724,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d728,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d732,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d736,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d740,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d744,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d756,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d760,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d764,
		SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d768,
		_theResult___fst__h8851,
		_theResult___fst__h8922,
		_theResult___snd__h41463,
		_theResult___snd_fst__h8853,
		_theResult___snd_fst__h8924,
		_theResult___snd_fst__h9439,
		cline_fabric_addr__h37775,
		lev_0_pte_pa__h36558,
		lev_0_pte_pa_w64_fa__h36560,
		lev_1_PTN_pa__h35482,
		lev_1_pte_pa__h35484,
		lev_1_pte_pa_w64_fa__h35486,
		lev_2_pte_pa__h34419,
		lev_2_pte_pa_w64_fa__h34421,
		new_st_val_64__h29751,
		new_st_val_64__h29823,
		new_st_val_64__h31020,
		new_st_val_64__h31024,
		new_st_val_64__h31028,
		new_st_val_64__h31032,
		new_st_val_64__h31037,
		new_st_val_64__h31043,
		new_st_val_64__h31048,
		new_st_val_64__h44158,
		new_st_val_64__h44230,
		new_st_val_64__h46171,
		new_st_val_64__h46175,
		new_st_val_64__h46179,
		new_st_val_64__h46183,
		new_st_val_64__h46188,
		new_st_val_64__h46194,
		new_st_val_64__h46199,
		pa___1__h9221,
		pa___1__h9270,
		pa___1__h9339,
		pte___1__h9488,
		pte___1__h9516,
		pte___2__h9213,
		result_lo__h23150,
		result_lo__h23185,
		result_lo__h23218,
		result_lo__h23251,
		result_lo__h23284,
		result_lo__h23317,
		result_lo__h23350,
		result_lo__h23383,
		result_lo__h23416,
		result_lo__h23449,
		result_lo__h23482,
		result_lo__h23515,
		result_lo__h23548,
		result_lo__h23581,
		result_lo__h23614,
		result_lo__h23647,
		result_lo__h23702,
		result_lo__h23735,
		result_lo__h23768,
		result_lo__h23801,
		result_lo__h23834,
		result_lo__h23867,
		result_lo__h23900,
		result_lo__h23933,
		result_lo__h23980,
		result_lo__h24013,
		result_lo__h24046,
		result_lo__h24079,
		result_lo__h41532,
		result_lo__h41565,
		result_lo__h41598,
		result_lo__h41631,
		result_lo__h41664,
		result_lo__h41697,
		result_lo__h41730,
		result_lo__h41763,
		result_lo__h41826,
		result_lo__h41859,
		result_lo__h41892,
		result_lo__h41925,
		result_lo__h41976,
		result_lo__h42009,
		result_lo__h45106,
		result_lo__h45138,
		result_lo__h45170,
		result_lo__h45202,
		result_lo__h45234,
		result_lo__h45266,
		result_lo__h45298,
		result_lo__h45330,
		result_lo__h45362,
		result_lo__h45394,
		result_lo__h45426,
		result_lo__h45458,
		result_lo__h45490,
		result_lo__h45522,
		result_lo__h45554,
		result_lo__h45586,
		result_lo__h45640,
		result_lo__h45672,
		result_lo__h45704,
		result_lo__h45736,
		result_lo__h45768,
		result_lo__h45800,
		result_lo__h45832,
		result_lo__h45864,
		result_lo__h45910,
		result_lo__h45942,
		result_lo__h45974,
		result_lo__h46006,
		satp_pa__h4568,
		value__h9533,
		vpn_0_pa__h36557,
		vpn_1_pa__h35483,
		vpn_2_pa__h34418,
		w1___1__h29790,
		w1___1__h44197,
		w2__h29604,
		word64__h5925,
		x1_avValue_pa__h8762,
		x__h29749,
		x__h44156;
  wire [55 : 0] x__h35579, x__h7931, x__h9224, x__h9273, x__h9342;
  wire [31 : 0] IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q57,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q64,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q78,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q37,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q38,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q39,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q40,
		cache_rg_st_amo_val_BITS_31_TO_0__q50,
		w14114_BITS_31_TO_0__q83,
		w19597_BITS_31_TO_0__q49;
  wire [15 : 0] IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q56,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q60,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q63,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q67,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q70,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q74,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q77,
		IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q81,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q21,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q23,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q25,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q27,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q29,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q31,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q33,
		cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q35;
  wire [7 : 0] IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q55,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q58,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q59,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q61,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q65,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q66,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q68,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q72,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q73,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q75,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q76,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q79,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q80,
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q82,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q22,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q24,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q26,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q28,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q30,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q32,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q34,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q36,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q41,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q42,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q43,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q44,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q45,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q46,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q47,
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q48,
	       mem_req_wr_addr_awlen__h5909,
	       strobe64__h5926,
	       strobe64__h5930,
	       strobe64__h5934,
	       strobe64__h5938;
  wire [5 : 0] access_exc_code__h5277,
	       exc_code___1__h9113,
	       shift_bits__h5624,
	       x1_avValue_exc_code__h8763,
	       x1_avValue_snd__h34027,
	       y_avValue_snd__h34025;
  wire [4 : 0] IF_NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache__ETC___d1173,
	       IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d1176,
	       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1175,
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1178,
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1179;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d429,
       IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d439,
       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d438,
       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d410,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d419,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d428,
       NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375,
       NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519,
       NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d1427,
       NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d469,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1229,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1293,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1336,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1235,
       NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305,
       NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d437,
       NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d535,
       NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126,
       NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1139,
       NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1151,
       NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156,
       NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d212,
       NOT_cache_rg_op_90_EQ_1_38_41_AND_NOT_cache_rg_ETC___d869,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1088,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1096,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1124,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1131,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1137,
       NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d867,
       NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d452,
       NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d500,
       NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d522,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1113,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d235,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d457,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d461,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d810,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823,
       NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219,
       NOT_cache_w_req_width_code_wget__809_EQ_0b0_83_ETC___d1850,
       _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1268,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1278,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1280,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1319,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1325,
       cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270,
       cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d1160,
       cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d536,
       cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d817,
       cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345,
       cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d451,
       cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d551,
       cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d557,
       cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d796,
       cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d812,
       cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1092,
       cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1098,
       cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d549,
       cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d870,
       cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d1144,
       cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d355,
       cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1171,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d222,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d442,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d491,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d527,
       cache_rg_priv_64_ULE_0b1___d165,
       cache_rg_width_code_73_EQ_0b100_30_OR_cache_rg_ETC___d376,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1100,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1166,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d827,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d872,
       cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d204,
       cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d454,
       cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1866,
       cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1871,
       lrsc_result__h25168,
       mem_req_wr_second_data_wuser__h5736,
       y__h9021;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[96:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[6] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[96:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[72] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd53),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd129),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[97] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_shift_sb_to_load_delay
  assign CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;
  assign WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d461 &&
	     NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d469 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d1427 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[6] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[6] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[6] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[72] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[72] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1229 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1293 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1336 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req = CAN_FIRE_RL_cache_do_req ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_38
  assign CAN_FIRE___me_check_38 = 1'b1 ;
  assign WILL_FIRE___me_check_38 = 1'b1 ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d557 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1100 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1866 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d872 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__809_EQ_0b0_83_ETC___d1850 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1235 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d827 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d551 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1278 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[128],
		 x__h23111 } :
	       { 65'd0, _theResult___snd_fst__h28775 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       { 65'd0, _theResult___snd_fst__h41495 } :
	       { 1'd0, x__h38989 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h46308 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h8762,
	       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1103 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h44147 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 5'd16, lev_1_pte_pa_w64_fa__h35486, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 5'd16, lev_0_pte_pa_w64_fa__h36560, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 5'd16,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 ?
		 { 8'd0, size_val__h43325, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 5'd16, lev_2_pte_pa_w64_fa__h34421, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 5'd16, cline_fabric_addr__h37775, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6003,
	       mem_req_wr_data_wstrb__h6004,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5736 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { 1'd1, cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1083 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     { cache_master_xactor_shim_rff_rv$port1__read[0],
	       cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_4 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       exc_code___1__h9113 :
	       access_exc_code__h5277 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd__h34027 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h25168 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[128],
		 x__h33923 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_lrsc_valid$write_1__VAL_2 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h8851 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h35482 + vpn_1_pa__h35483 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h35482 + vpn_0_pa__h36557 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h4568 + vpn_2_pa__h34418 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_cache_w_req_width_code_wget__809_EQ_0b0_83_ETC___d1850 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_4 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     EN_commit ?
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1179 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h8853 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[6] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[72] ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_output_ld_val$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d557 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     mem_master_arready ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 5'd16,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5909,
	       _theResult___snd_snd_fst_val__h5945,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       cache_master_xactor_shim_wff_rv$port2__write_1 :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port2__write_1 =
	     { 1'd0,
	       74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_wff_rv$port2__write_1 :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port1__write_1 =
	     { 1'd0, 6'bxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   98'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port1__write_1 =
	     { 1'd0,
	       97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port1__write_1 =
	     { 1'd0,
	       72'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port2__read ;
  assign cache_crg_sb_to_load_delay$port0__write_1 =
	     { 1'd0, cache_crg_sb_to_load_delay[10:1] } ;
  assign cache_crg_sb_to_load_delay$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1092 ;
  assign cache_crg_sb_to_load_delay$port2__read =
	     cache_crg_sb_to_load_delay$EN_port1__write ?
	       11'd2047 :
	       cache_crg_sb_to_load_delay$port0__write_1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_sb_to_load_delay
  assign cache_crg_sb_to_load_delay$D_IN =
	     cache_crg_sb_to_load_delay$port2__read ;
  assign cache_crg_sb_to_load_delay$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_4;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__809_EQ_0b0_83_ETC___d1850 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1235 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d827 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d551 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_addr :
	       MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1166 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  MUX_cache_rg_state$write_1__SEL_4 or
	  MUX_cache_rg_state$write_1__VAL_4 or
	  MUX_cache_rg_state$write_1__SEL_5 or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    MUX_cache_rg_state$write_1__SEL_4:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_4;
    MUX_cache_rg_state$write_1__SEL_5:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5601,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5736 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1100 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h9533 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       53'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       53'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d872 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1278 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d429 =
	     (x1_avValue_pa__h8762[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 :
	       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d428 ;
  assign IF_NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache__ETC___d1173 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615 =
	     cache_rg_lower_word64_full ? x__h38989 : b__h43897 ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[7:0] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[15:0] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[31:0] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[15:8] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[23:16] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[31:16] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[31:24] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[39:32] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[47:32] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:32] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[47:40] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[55:48] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:48] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:56] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[71:64] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[79:64] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[95:64] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[79:72] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[87:80] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[95:80] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[95:88] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[103:96] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q77 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[111:96] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q78 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[127:96] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q79 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[111:104] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q80 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[119:112] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q81 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[127:112] ;
  assign IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q82 =
	     IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[127:120] ;
  assign IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d1176 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       ((cache_ram_state_and_ctag_cset$DOB[52] &&
		 cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) ?
		  cache_rg_state :
		  5'd9) :
	       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1175 ;
  assign IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d439 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ||
	       IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 :
	       IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d438 ;
  assign IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1083 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       x__h25619 :
	       x__h29655 ;
  assign IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1103 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013 } ;
  assign IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d1175 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache__ETC___d1173 :
	       ((!cache_ram_state_and_ctag_cset$DOB[52] ||
		 !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) ?
		  5'd9 :
		  5'd12) ;
  assign IF_cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_ETC___d438 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d355 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d437 ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1178 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1171 ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d1176 :
		  5'd13) ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1179 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1178 ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 =
	     x1_avValue_pa__h8762 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h29746 ;
  assign IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q50[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q50 } :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d410 =
	     x1_avValue_pa__h8762[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d419 =
	     x1_avValue_pa__h8762[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424 =
	     x1_avValue_pa__h8762[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d428 =
	     x1_avValue_pa__h8762[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d1427 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_63_AND_cac_ETC___d469 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd3 &&
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      cache_crg_sb_to_load_delay$port0__write_1 == 11'd0) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1229 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1293 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1336 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1235 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d437 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     cache_rg_width_code_73_EQ_0b100_30_OR_cache_rg_ETC___d376 &&
	     IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433 &&
	     IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d535 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 ;
  assign NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1124 ;
  assign NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1139 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1137 ;
  assign NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1151 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ||
	      !EN_commit) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d212 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d204) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_90_EQ_1_38_41_AND_NOT_cache_rg_ETC___d869 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     EN_commit ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1088 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1096 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1124 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1131 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1137 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d867 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 ;
  assign NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d452 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d451 ;
  assign NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d500 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d522 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[72] &&
	     !pte___2__h9213[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1113 =
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d235 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h9213[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d457 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d452 &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d454 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d461 =
	     (!cache_rg_priv_64_ULE_0b1___d165 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d442 &&
	     (!EN_commit ||
	      NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d457 ||
	      cache_tlb$RDY_lookup) ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d452 &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d454 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d204 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d810 =
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d500 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_cache_w_req_width_code_wget__809_EQ_0b0_83_ETC___d1850 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d636 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q36[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d640 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q48[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q48 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d644 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q34[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d648 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q47[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q47 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d652 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q32[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q32 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d656 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q46[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q46 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d660 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q30[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d664 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q45[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q45 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d668 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d672 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q44[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q44 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d676 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d680 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d684 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q24[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d688 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q42[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d692 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q22[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d696 =
	     { {56{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q41[7]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q41 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d716 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q35[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d720 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q33[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d724 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q31[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d728 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q29[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d732 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q27[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d736 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q25[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d740 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q23[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d744 =
	     { {48{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q21[15]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d756 =
	     { {32{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q39[31]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d760 =
	     { {32{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q40[31]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d764 =
	     { {32{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q38[31]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q38 } ;
  assign SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d768 =
	     { {32{cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q37[31]}},
	       cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q37 } ;
  assign _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 =
	     8'd1 << size_val__h43325 <= 8'd8 ;
  assign _theResult___fst__h8851 =
	     cache_tlb$lookup[130] ? _theResult___fst__h8922 : cache_rg_addr ;
  assign _theResult___fst__h8922 =
	     (cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219) ?
	       cache_rg_addr :
	       _theResult___fst__h9215 ;
  assign _theResult___snd__h41463 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       64'd0 ;
  assign _theResult___snd_fst__h8853 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h8924 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h8924 =
	     (cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9439 ;
  assign _theResult___snd_fst__h9439 =
	     (!pte___2__h9213[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h9516 :
	       pte___2__h9213 ;
  assign access_exc_code__h5277 = MUX_cache_rg_exc_code$write_1__VAL_4 ;
  assign b__h43897 = { 64'd0, _theResult___snd_fst__h41495 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53 =
	     cache_master_xactor_shim_arff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1 =
	     cache_master_xactor_shim_awff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1268 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1278 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1280 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1319 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1325 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h8762[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d1160 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     EN_commit &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d536 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d535 ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624 =
	     cache_ram_word128_set$DOB & y__h10408 ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q21 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:112] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q22 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[119:112] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q23 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[111:96] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q24 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[103:96] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q25 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:80] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q26 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[87:80] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q27 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[79:64] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q28 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[71:64] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q29 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:48] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q30 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[55:48] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q31 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[47:32] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q32 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[39:32] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q33 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:16] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q34 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[23:16] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q35 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[15:0] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q36 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[7:0] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q37 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:96] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q38 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:64] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q39 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:0] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q40 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:32] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q41 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:120] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q42 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[111:104] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q43 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:88] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q44 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[79:72] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q45 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:56] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q46 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[47:40] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q47 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:24] ;
  assign cache_ram_word128_set_b_read__86_AND_cache_ram_ETC__q48 =
	     cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[15:8] ;
  assign cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d817 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h8762 ;
  assign cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d451 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d204 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d551 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d536 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d549 ;
  assign cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d557 =
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25168 ;
  assign cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d796 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d812 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1092 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1088 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     EN_commit &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1098 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1096 ||
	     NOT_cache_rg_op_90_EQ_1_38_41_AND_NOT_cache_rg_ETC___d869 ;
  assign cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d549 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	     EN_commit &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 ;
  assign cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d870 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d867 ||
	     NOT_cache_rg_op_90_EQ_1_38_41_AND_NOT_cache_rg_ETC___d869 ;
  assign cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d1144 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25168 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d355 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25168 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N ;
  assign cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d212 ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1171 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d222 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (!cache_tlb$lookup[130] ||
	      cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d442 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d222 ||
	     (NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d235 ||
	      cache_tlb$RDY_lookup && cache_tlb$RDY_insert &&
	      cache_f_pte_writebacks$FULL_N) &&
	     (!cache_soc_map$m_is_mem_addr ||
	      IF_cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_ETC___d439) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d491 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_64_EQ_0b0_80_AND_NOT_cache_tlb_l_ETC___d213 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d219) &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d500 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h9213[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d527 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_80_43_OR_cache_tlb_ETC___d522 &&
	     NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519 &&
	     cache_tlb$lookup[68] &&
	     cache_tlb$lookup[73] ;
  assign cache_rg_priv_64_ULE_0b1___d165 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q50 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_73_EQ_0b100_30_OR_cache_rg_ETC___d376 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1100 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d1098 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1166 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_90_EQ_1_38_41_AND_NOT_cache_rg_ETC___d869 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d827 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 && cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270 &&
	      EN_commit) ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d872 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_90_EQ_1_38_OR_cache_rg_op_90_EQ_2__ETC___d870 ;
  assign cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d204 =
	     cache_tlb$lookup[67] | y__h9021 ;
  assign cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d454 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1866 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1871 =
	     (cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1866 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cline_fabric_addr__h37775 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h9113 = x1_avValue_exc_code__h8763 ;
  assign lev_0_pte_pa__h36558 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h36560 = { lev_0_pte_pa__h36558[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h35482 = { 8'd0, x__h35579 } ;
  assign lev_1_pte_pa__h35484 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h35486 = { lev_1_pte_pa__h35484[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h34419 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h34421 = { lev_2_pte_pa__h34419[63:3], 3'b0 } ;
  assign lrsc_result__h25168 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_44_EQ_IF_cache_rg_priv_64_ULE_ETC___d345 ;
  assign mem_req_wr_addr_awlen__h5909 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5736 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h29746 = { 64'd0, x__h29749 } ;
  assign new_st_val_128__h44153 = { 64'd0, x__h44156 } ;
  assign new_st_val_64__h29751 = { 32'd0, _theResult_____2__h29745[31:0] } ;
  assign new_st_val_64__h29823 =
	     IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 +
	     IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ;
  assign new_st_val_64__h31020 = w1__h29602 ^ w2__h29604 ;
  assign new_st_val_64__h31024 = w1__h29602 & w2__h29604 ;
  assign new_st_val_64__h31028 = w1__h29602 | w2__h29604 ;
  assign new_st_val_64__h31032 =
	     (w1__h29602 < w2__h29604) ? w1__h29602 : w2__h29604 ;
  assign new_st_val_64__h31037 =
	     (w1__h29602 <= w2__h29604) ? w2__h29604 : w1__h29602 ;
  assign new_st_val_64__h31043 =
	     ((IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ^
	       64'h8000000000000000)) ?
	       w1__h29602 :
	       w2__h29604 ;
  assign new_st_val_64__h31048 =
	     ((IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ^
	       64'h8000000000000000)) ?
	       w2__h29604 :
	       w1__h29602 ;
  assign new_st_val_64__h44158 = { 32'd0, _theResult_____2__h44152[31:0] } ;
  assign new_st_val_64__h44230 =
	     IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 +
	     IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ;
  assign new_st_val_64__h46171 = w1__h44119 ^ w2__h29604 ;
  assign new_st_val_64__h46175 = w1__h44119 & w2__h29604 ;
  assign new_st_val_64__h46179 = w1__h44119 | w2__h29604 ;
  assign new_st_val_64__h46183 =
	     (w1__h44119 < w2__h29604) ? w1__h44119 : w2__h29604 ;
  assign new_st_val_64__h46188 =
	     (w1__h44119 <= w2__h29604) ? w2__h29604 : w1__h44119 ;
  assign new_st_val_64__h46194 =
	     ((IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ^
	       64'h8000000000000000)) ?
	       w1__h44119 :
	       w2__h29604 ;
  assign new_st_val_64__h46199 =
	     ((IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d985 ^
	       64'h8000000000000000)) ?
	       w2__h29604 :
	       w1__h44119 ;
  assign pa___1__h9221 = { 8'd0, x__h9224 } ;
  assign pa___1__h9270 = { 8'd0, x__h9273 } ;
  assign pa___1__h9339 = { 8'd0, x__h9342 } ;
  assign pte___1__h9488 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9516 =
	     { pte___2__h9213[63:8], 1'd1, pte___2__h9213[6:0] } ;
  assign pte___2__h9213 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9488 ;
  assign result_lo__h23150 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d636 ;
  assign result_lo__h23185 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d640 ;
  assign result_lo__h23218 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d644 ;
  assign result_lo__h23251 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d648 ;
  assign result_lo__h23284 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d652 ;
  assign result_lo__h23317 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d656 ;
  assign result_lo__h23350 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d660 ;
  assign result_lo__h23383 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d664 ;
  assign result_lo__h23416 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d668 ;
  assign result_lo__h23449 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d672 ;
  assign result_lo__h23482 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d676 ;
  assign result_lo__h23515 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d680 ;
  assign result_lo__h23548 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d684 ;
  assign result_lo__h23581 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d688 ;
  assign result_lo__h23614 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d692 ;
  assign result_lo__h23647 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d696 ;
  assign result_lo__h23702 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d716 ;
  assign result_lo__h23735 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d720 ;
  assign result_lo__h23768 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d724 ;
  assign result_lo__h23801 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d728 ;
  assign result_lo__h23834 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d732 ;
  assign result_lo__h23867 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d736 ;
  assign result_lo__h23900 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d740 ;
  assign result_lo__h23933 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d744 ;
  assign result_lo__h23980 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d756 ;
  assign result_lo__h24013 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d760 ;
  assign result_lo__h24046 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d764 ;
  assign result_lo__h24079 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d768 ;
  assign result_lo__h41532 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 } ;
  assign result_lo__h41565 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 } ;
  assign result_lo__h41598 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 } ;
  assign result_lo__h41631 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 } ;
  assign result_lo__h41664 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 } ;
  assign result_lo__h41697 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 } ;
  assign result_lo__h41730 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 } ;
  assign result_lo__h41763 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 } ;
  assign result_lo__h41826 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 } ;
  assign result_lo__h41859 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 } ;
  assign result_lo__h41892 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 } ;
  assign result_lo__h41925 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 } ;
  assign result_lo__h41976 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 } ;
  assign result_lo__h42009 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 } ;
  assign result_lo__h45106 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q55[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h45138 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q58[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h45170 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q59[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h45202 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q61[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h45234 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h45266 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q65[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h45298 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q66[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h45330 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q68[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h45362 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h45394 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q72[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q72 } ;
  assign result_lo__h45426 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q73[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h45458 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q75[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h45490 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h45522 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q79[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q79 } ;
  assign result_lo__h45554 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q80[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q80 } ;
  assign result_lo__h45586 =
	     { {56{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q82[7]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q82 } ;
  assign result_lo__h45640 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q56[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h45672 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q60[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h45704 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q63[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h45736 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q67[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h45768 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q70[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h45800 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q74[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q74 } ;
  assign result_lo__h45832 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q77[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q77 } ;
  assign result_lo__h45864 =
	     { {48{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q81[15]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q81 } ;
  assign result_lo__h45910 =
	     { {32{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q57[31]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h45942 =
	     { {32{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q64[31]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h45974 =
	     { {32{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q71[31]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h46006 =
	     { {32{IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q78[31]}},
	       IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC__q78 } ;
  assign satp_pa__h4568 = { 8'd0, x__h7931 } ;
  assign shift_bits__h5624 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5926 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5930 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5934 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5938 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign value__h9533 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h36557 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h35483 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h34418 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w14114_BITS_31_TO_0__q83 = w1__h44114[31:0] ;
  assign w19597_BITS_31_TO_0__q49 = w1__h29597[31:0] ;
  assign w1___1__h29790 = { 32'd0, w1__h29597[31:0] } ;
  assign w1___1__h44197 = { 32'd0, w1__h44114[31:0] } ;
  assign w2__h29604 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h5925 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5624 ;
  assign x1_avValue_exc_code__h8763 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign x1_avValue_pa__h8762 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x1_avValue_snd__h34027 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h34025 ;
  assign x__h23111 =
	     { _theResult___snd_snd__h23113, _theResult___snd_fst__h23112 } ;
  assign x__h29749 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h29751 :
	       _theResult_____2__h29745 ;
  assign x__h33923 = { _theResult___snd_snd__h23113, w1__h29597 } ;
  assign x__h35579 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h38989 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign x__h44147 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h44153 ;
  assign x__h44156 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h44158 :
	       _theResult_____2__h44152 ;
  assign x__h46308 = { _theResult___snd_snd__h44335, w1__h44114 } ;
  assign x__h7931 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9224 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9273 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9342 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10408 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__65_BITS__ETC___d270}} ;
  assign y__h9021 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  assign y_avValue_snd__h34025 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1171 ?
	       x1_avValue_exc_code__h8763 :
	       cache_rg_exc_code ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5601 = 8'd0;
      3'b100: fabric_2_strb__h5601 = 8'b11111111;
      default: fabric_2_strb__h5601 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___snd_fst__h28775 = 64'd1;
      default: _theResult___snd_fst__h28775 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5945 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5945 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5945 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h43325 = cache_rg_width_code;
      default: size_val__h43325 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9221 or pa___1__h9270 or pa___1__h9339)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9215 = pa___1__h9221;
      2'd1: _theResult___fst__h9215 = pa___1__h9270;
      2'd2: _theResult___fst__h9215 = pa___1__h9339;
      2'd3: _theResult___fst__h9215 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5926 or
	  strobe64__h5930 or strobe64__h5934 or strobe64__h5938)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6004 = strobe64__h5926;
      3'b001: mem_req_wr_data_wstrb__h6004 = strobe64__h5930;
      3'b010: mem_req_wr_data_wstrb__h6004 = strobe64__h5934;
      3'b011: mem_req_wr_data_wstrb__h6004 = strobe64__h5938;
      3'b100: mem_req_wr_data_wstrb__h6004 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6004 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5925)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6003 = word64__h5925;
      default: mem_req_wr_data_wdata__h6003 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 =
	      { cache_rg_st_amo_val[31:0], cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
      4'd15:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 or
	  cache_rg_addr)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17;
      3'd1:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18;
      3'b010:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19;
      3'd3:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 =
	      (cache_rg_addr[3:0] == 4'h0) ?
		NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305 :
		cache_rg_addr[3:0] != 4'h8 ||
		NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
      default: IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__65_B_ETC___d305;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 =
	      IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_cach_ETC___d336;
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425 =
		   NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424;
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d419 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d420 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d420 =
		   NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d419;
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d410 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d411 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      4'd15:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d411 =
	      NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d410;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d429 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d411 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d420 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d411;
      3'd1:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d420;
      3'b010:
	  IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425;
      default: IF_cache_rg_width_code_73_EQ_0_74_THEN_IF_IF_c_ETC___d433 =
		   cache_rg_width_code != 3'd3 ||
		   IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d429;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h23113 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h23113 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:64];
      default: _theResult___snd_snd__h23113 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h10351 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:0];
      4'h8:
	  _theResult___snd__h10351 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[127:64];
      default: _theResult___snd__h10351 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d756 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d760 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d764 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d768)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d756;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d760;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d764;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d768;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h23980 or
	  result_lo__h24013 or result_lo__h24046 or result_lo__h24079)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 =
	      result_lo__h23980;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 =
	      result_lo__h24013;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 =
	      result_lo__h24046;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 =
	      result_lo__h24079;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d716 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d720 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d724 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d728 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d732 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d736 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d740 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d744)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d716;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d720;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d724;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d728;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d732;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d736;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d740;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d744;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d636 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d640 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d644 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d648 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d652 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d656 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d660 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d664 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d668 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d672 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d676 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d680 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d684 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d688 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d692 or
	  SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d696)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d636;
      4'h1:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d640;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d644;
      4'h3:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d648;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d652;
      4'h5:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d656;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d660;
      4'h7:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d664;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d668;
      4'h9:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d672;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d676;
      4'hB:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d680;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d684;
      4'hD:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d688;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d692;
      4'hF:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 =
	      SEXT_cache_ram_word128_set_b_read__86_AND_cach_ETC___d696;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857 or
	  _theResult___snd__h10351 or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h29597 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845;
      3'd1:
	  w1__h29597 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853;
      3'b010:
	  w1__h29597 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d857;
      3'd3: w1__h29597 = _theResult___snd__h10351;
      3'b100:
	  w1__h29597 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:0];
      default: w1__h29597 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 or
	  w1___1__h29790 or
	  _theResult___snd__h10351 or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h29602 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845;
      3'd1:
	  w1__h29602 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853;
      3'b010: w1__h29602 = w1___1__h29790;
      3'd3: w1__h29602 = _theResult___snd__h10351;
      3'b100:
	  w1__h29602 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:0];
      default: w1__h29602 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h23702 or
	  result_lo__h23735 or
	  result_lo__h23768 or
	  result_lo__h23801 or
	  result_lo__h23834 or
	  result_lo__h23867 or result_lo__h23900 or result_lo__h23933)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23702;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23735;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23768;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23801;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23834;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23867;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23900;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
	      result_lo__h23933;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h23150 or
	  result_lo__h23185 or
	  result_lo__h23218 or
	  result_lo__h23251 or
	  result_lo__h23284 or
	  result_lo__h23317 or
	  result_lo__h23350 or
	  result_lo__h23383 or
	  result_lo__h23416 or
	  result_lo__h23449 or
	  result_lo__h23482 or
	  result_lo__h23515 or
	  result_lo__h23548 or
	  result_lo__h23581 or result_lo__h23614 or result_lo__h23647)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23150;
      4'h1:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23185;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23218;
      4'h3:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23251;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23284;
      4'h5:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23317;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23350;
      4'h7:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23383;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23416;
      4'h9:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23449;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23482;
      4'hB:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23515;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23548;
      4'hD:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23581;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23614;
      4'hF:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 =
	      result_lo__h23647;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773 or
	  _theResult___snd__h10351 or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h23112 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d713;
      3'd1:
	  _theResult___snd_fst__h23112 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d753;
      3'b010:
	  _theResult___snd_fst__h23112 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d773;
      3'd3: _theResult___snd_fst__h23112 = _theResult___snd__h10351;
      3'b100:
	  _theResult___snd_fst__h23112 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:0];
      default: _theResult___snd_fst__h23112 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853 or
	  w19597_BITS_31_TO_0__q49 or
	  _theResult___snd__h10351 or
	  cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d845;
      3'd1:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d853;
      3'b010:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
	      { {32{w19597_BITS_31_TO_0__q49[31]}},
		w19597_BITS_31_TO_0__q49 };
      3'd3:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
	      _theResult___snd__h10351;
      3'b100:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
	      cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624[63:0];
      default: IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d983 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h31048 or
	  new_st_val_64__h29823 or
	  w2__h29604 or
	  new_st_val_64__h31020 or
	  new_st_val_64__h31028 or
	  new_st_val_64__h31024 or
	  new_st_val_64__h31043 or
	  new_st_val_64__h31032 or new_st_val_64__h31037)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h29745 = new_st_val_64__h29823;
      5'b00001: _theResult_____2__h29745 = w2__h29604;
      5'b00100: _theResult_____2__h29745 = new_st_val_64__h31020;
      5'b01000: _theResult_____2__h29745 = new_st_val_64__h31028;
      5'b01100: _theResult_____2__h29745 = new_st_val_64__h31024;
      5'b10000: _theResult_____2__h29745 = new_st_val_64__h31043;
      5'b11000: _theResult_____2__h29745 = new_st_val_64__h31032;
      5'b11100: _theResult_____2__h29745 = new_st_val_64__h31037;
      default: _theResult_____2__h29745 = new_st_val_64__h31048;
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 =
	      { IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[31:0],
		cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
	      { IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[15:0],
		cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
	      { cache_rg_st_amo_val[15:0], cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:8],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:24],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:40],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:56],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:72],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:88],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:104],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { cache_ram_word128_set$DOB[127:120],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 =
	      { IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[7:0],
		cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[63:0] };
      4'h8:
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013[63:0],
		cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072 or
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51 or
	  IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h29655 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1046;
      3'd1:
	  x__h29655 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1063;
      3'b010:
	  x__h29655 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1072;
      3'd3:
	  x__h29655 = CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q51;
      3'b100:
	  x__h29655 =
	      IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013;
      default: x__h29655 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:24],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:40],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:56],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:72],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:88],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:104],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_ram_word128_set$DOB[127:120],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 =
	      { cache_rg_st_amo_val[7:0], cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8762 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8762[3:0])
      4'h0:
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
	      { cache_rg_st_amo_val[63:0], cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967 or
	  CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h25619 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d941;
      3'd1:
	  x__h25619 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d958;
      3'b010:
	  x__h25619 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d967;
      3'd3:
	  x__h25619 = CASE_x1_avValue_pa762_BITS_3_TO_0_0x0_cache_ra_ETC__q52;
      3'b100: x__h25619 = cache_rg_st_amo_val[127:0];
      default: x__h25619 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h41826 or
	  result_lo__h41859 or result_lo__h41892 or result_lo__h41925)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 =
	      result_lo__h41826;
      3'd2:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 =
	      result_lo__h41859;
      3'd4:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 =
	      result_lo__h41892;
      3'd6:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 =
	      result_lo__h41925;
      default: IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h41532 or
	  result_lo__h41565 or
	  result_lo__h41598 or
	  result_lo__h41631 or
	  result_lo__h41664 or
	  result_lo__h41697 or result_lo__h41730 or result_lo__h41763)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41532;
      3'd1:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41565;
      3'd2:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41598;
      3'd3:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41631;
      3'd4:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41664;
      3'd5:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41697;
      3'd6:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41730;
      3'd7:
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 =
	      result_lo__h41763;
    endcase
  end
  always@(cache_rg_addr or result_lo__h41976 or result_lo__h42009)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54 =
	      result_lo__h41976;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54 =
	      result_lo__h42009;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505 or
	  IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54 or
	  _theResult___snd__h41463 or
	  cache_master_xactor_shim_rff_rv$port1__read)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h41495 =
	      IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1505;
      3'd1:
	  _theResult___snd_fst__h41495 =
	      IF_cache_rg_addr_75_BITS_2_TO_0_457_EQ_0_458_T_ETC___d1525;
      3'b010:
	  _theResult___snd_fst__h41495 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo1976_ETC__q54;
      3'd3: _theResult___snd_fst__h41495 = _theResult___snd__h41463;
      3'b100:
	  _theResult___snd_fst__h41495 =
	      cache_master_xactor_shim_rff_rv$port1__read[67:4];
      default: _theResult___snd_fst__h41495 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h44335 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h44335 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[127:64];
      default: _theResult___snd_snd__h44335 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h46059 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:0];
      4'h8:
	  _theResult___snd__h46059 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[127:64];
      default: _theResult___snd__h46059 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45910 or
	  result_lo__h45942 or result_lo__h45974 or result_lo__h46006)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 =
	      result_lo__h45910;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 =
	      result_lo__h45942;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 =
	      result_lo__h45974;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 =
	      result_lo__h46006;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45640 or
	  result_lo__h45672 or
	  result_lo__h45704 or
	  result_lo__h45736 or
	  result_lo__h45768 or
	  result_lo__h45800 or result_lo__h45832 or result_lo__h45864)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45640;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45672;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45704;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45736;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45768;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45800;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45832;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
	      result_lo__h45864;
      default: IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45106 or
	  result_lo__h45138 or
	  result_lo__h45170 or
	  result_lo__h45202 or
	  result_lo__h45234 or
	  result_lo__h45266 or
	  result_lo__h45298 or
	  result_lo__h45330 or
	  result_lo__h45362 or
	  result_lo__h45394 or
	  result_lo__h45426 or
	  result_lo__h45458 or
	  result_lo__h45490 or
	  result_lo__h45522 or result_lo__h45554 or result_lo__h45586)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45106;
      4'h1:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45138;
      4'h2:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45170;
      4'h3:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45202;
      4'h4:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45234;
      4'h5:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45266;
      4'h6:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45298;
      4'h7:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45330;
      4'h8:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45362;
      4'h9:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45394;
      4'hA:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45426;
      4'hB:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45458;
      4'hC:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45490;
      4'hD:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45522;
      4'hE:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45554;
      4'hF:
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 =
	      result_lo__h45586;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699 or
	  _theResult___snd__h46059 or
	  IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h44114 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663;
      3'd1:
	  w1__h44114 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687;
      3'b010:
	  w1__h44114 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1699;
      3'd3: w1__h44114 = _theResult___snd__h46059;
      3'b100:
	  w1__h44114 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:0];
      default: w1__h44114 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 or
	  w1___1__h44197 or
	  _theResult___snd__h46059 or
	  IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h44119 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663;
      3'd1:
	  w1__h44119 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687;
      3'b010: w1__h44119 = w1___1__h44197;
      3'd3: w1__h44119 = _theResult___snd__h46059;
      3'b100:
	  w1__h44119 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:0];
      default: w1__h44119 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663 or
	  IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687 or
	  w14114_BITS_31_TO_0__q83 or
	  _theResult___snd__h46059 or
	  IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1663;
      3'd1:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
	      IF_cache_rg_addr_75_BITS_3_TO_0_75_EQ_0x0_76_T_ETC___d1687;
      3'b010:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
	      { {32{w14114_BITS_31_TO_0__q83[31]}},
		w14114_BITS_31_TO_0__q83 };
      3'd3:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
	      _theResult___snd__h46059;
      3'b100:
	  IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
	      IF_cache_rg_lower_word64_full_396_THEN_cache_m_ETC___d1615[63:0];
      default: IF_cache_rg_width_code_73_EQ_0b10_20_THEN_SEXT_ETC___d1711 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h46199 or
	  new_st_val_64__h44230 or
	  w2__h29604 or
	  new_st_val_64__h46171 or
	  new_st_val_64__h46179 or
	  new_st_val_64__h46175 or
	  new_st_val_64__h46194 or
	  new_st_val_64__h46183 or new_st_val_64__h46188)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h44152 = new_st_val_64__h44230;
      5'b00001: _theResult_____2__h44152 = w2__h29604;
      5'b00100: _theResult_____2__h44152 = new_st_val_64__h46171;
      5'b01000: _theResult_____2__h44152 = new_st_val_64__h46179;
      5'b01100: _theResult_____2__h44152 = new_st_val_64__h46175;
      5'b10000: _theResult_____2__h44152 = new_st_val_64__h46194;
      5'b11000: _theResult_____2__h44152 = new_st_val_64__h46183;
      5'b11100: _theResult_____2__h44152 = new_st_val_64__h46188;
      default: _theResult_____2__h44152 = new_st_val_64__h46199;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY 11'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 6'bxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      72'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_sb_to_load_delay$EN)
	  cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY
	      cache_crg_sb_to_load_delay$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_sb_to_load_delay = 11'h2AA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 7'h2A;
    cache_master_xactor_shim_rff_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5909);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h5945, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6003);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6004);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5736, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7274 = $stime;
	  #0;
	end
    v__h7268 = v__h7274 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7268,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7375 = $stime;
	  #0;
	end
    v__h7369 = v__h7375 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7369, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7811 = $stime;
	  #0;
	end
    v__h7805 = v__h7811 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7805,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4568,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d491)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1___d165 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_exc_code__h8763);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d235)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9533, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d527)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", x1_avValue_exc_code__h8763);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d527)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("'h%h", value__h9533, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d507 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_18___d519)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d796)
	begin
	  v__h24282 = $stime;
	  #0;
	end
    v__h24276 = v__h24282 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d796)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h24276,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d810)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d796)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_0_91_OR_cache_rg_op_90_EQ_2__ETC___d812)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d794 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d817)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd1 &&
	  IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d533 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1113)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_rg_lrsc_valid &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC result = %0d", lrsc_result__h25168);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8762,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h25619 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1126)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  (cache_rg_op == 2'd1 ||
	   cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	  NOT_cache_rg_op_90_EQ_2_93_94_OR_NOT_cache_rg__ETC___d1131)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8762,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1139)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1139)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d1144)
	begin
	  v__h29035 = $stime;
	  #0;
	end
    v__h29029 = v__h29035 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d1144)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h29029,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_90_EQ_2_93_AND_cache_rg_amo_funct5_ETC___d1144)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1151)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$display("          PA 0x%0h ", x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624,
		 cache_ram_word128_set_b_read__86_AND_cache_ram_ETC___d624,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_73_EQ_0b100_30_THEN_cac_ETC___d1013 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h29655 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_90_EQ_0_91_92_AND_NOT_cache_rg_ETC___d1156)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d823 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  cache_rg_op != 2'd1 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	  cache_ram_state_and_ctag_cset_b_read__65_BIT_5_ETC___d1160)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d488 &&
	  !cache_soc_map$m_is_mem_addr &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34366 = $stime;
	  #0;
	end
    v__h34360 = v__h34366 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h34360,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34636 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h34636);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h34421);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37722 = $stime;
	  #0;
	end
    v__h37716 = v__h37722 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h37716, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37890 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h37890);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h37775);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h6842 = $stime;
	  #0;
	end
    v__h6836 = v__h6842 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_reset", v__h6836, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40576 = $stime;
	  #0;
	end
    v__h40570 = v__h40576 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h40570,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40816 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h40816);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43325, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40936 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h40936);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42693 = $stime;
	  #0;
	end
    v__h42687 = v__h42693 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42687,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42781 = $stime;
	  #0;
	end
    v__h42775 = v__h42781 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h42775,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42999 = $stime;
	  #0;
	end
    v__h42993 = v__h42999 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h42993,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43121 = $stime;
	  #0;
	end
    v__h43115 = v__h43121 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h43115,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43352 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h43352);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43325, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43472 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h43472);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_73_EQ_0_74_OR_cach_ETC___d1434 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h46640 = $stime;
	  #0;
	end
    v__h46634 = v__h46640 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h46634,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46887 = $stime;
	  #0;
	end
    v__h46881 = v__h46887 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h46881,
	       "D_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h46848 = $stime;
	  #0;
	end
    v__h46842 = v__h46848 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h46842,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35452 = $stime;
	  #0;
	end
    v__h35446 = v__h35452 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h35446,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35209 = $stime;
	  #0;
	end
    v__h35203 = v__h35209 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h35203,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35630 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h35630);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h35486);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1268)
	begin
	  v__h35775 = $stime;
	  #0;
	end
    v__h35769 = v__h35775 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1268)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h35769,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1280)
	begin
	  v__h35887 = $stime;
	  #0;
	end
    v__h35881 = v__h35887 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1280)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h35881,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1280)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35482);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35381 = $stime;
	  #0;
	end
    v__h35375 = v__h35381 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h35375,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5277);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36526 = $stime;
	  #0;
	end
    v__h36520 = v__h36526 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h36520,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36286 = $stime;
	  #0;
	end
    v__h36280 = v__h36286 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h36280,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36704 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h36704);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h36560);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1319)
	begin
	  v__h36961 = $stime;
	  #0;
	end
    v__h36955 = v__h36961 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1319)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h36955,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1319)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35482);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1325)
	begin
	  v__h36849 = $stime;
	  #0;
	end
    v__h36843 = v__h36849 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1325)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h36843,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36455 = $stime;
	  #0;
	end
    v__h36449 = v__h36455 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h36449,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5277);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37438 = $stime;
	  #0;
	end
    v__h37432 = v__h37438 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h37432,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37509 = $stime;
	  #0;
	end
    v__h37503 = v__h37509 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h37503,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37591 = $stime;
	  #0;
	end
    v__h37585 = v__h37591 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h37585,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h35482);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37367 = $stime;
	  #0;
	end
    v__h37361 = v__h37367 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h37361,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5277);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	begin
	  v__h38526 = $stime;
	  #0;
	end
    v__h38520 = v__h38526 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h38520,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h38768 = $stime;
	  #0;
	end
    v__h38762 = v__h38768 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h38762,
		 "D_MMU_Cache",
		 access_exc_code__h5277);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write(" 0x%0x",
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_374___d1375)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41169 = $stime;
	  #0;
	end
    v__h41163 = v__h41169 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h41163,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42355 = $stime;
	  #0;
	end
    v__h42349 = v__h42355 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42349,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___snd_fst__h41495 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42469 = $stime;
	  #0;
	end
    v__h42463 = v__h42469 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42463,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42193 = $stime;
	  #0;
	end
    v__h42187 = v__h42193 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42187,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h38989 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42580 = $stime;
	  #0;
	end
    v__h42574 = v__h42580 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42574,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43649 = $stime;
	  #0;
	end
    v__h43643 = v__h43649 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h43643,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h44019 = $stime;
	  #0;
	end
    v__h44013 = v__h44019 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h44013,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46330 = $stime;
	  #0;
	end
    v__h46324 = v__h46330 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h46324,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h46308 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43947 = $stime;
	  #0;
	end
    v__h43941 = v__h43947 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h43941,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47816 = $stime;
	  #0;
	end
    v__h47810 = v__h47816 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h47810);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  cache_w_req_width_code_wget__809_EQ_0b0_830_OR_ETC___d1871)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48933 = $stime;
	  #0;
	end
    v__h48927 = v__h48933 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h48927, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1936, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1935, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1934, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1933, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1932, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

