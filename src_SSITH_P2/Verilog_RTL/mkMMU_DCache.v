//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_awid                O     4
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     4
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     4
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     4
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [3 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [3 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [3 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [3 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arid,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awid,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [97 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port1__write_1,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port1__write_1,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port1__write_1,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [71 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port1__write_1,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [5 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas,
       cache_rw_reset_req$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [97 : 0] cache_master_xactor_shim_arff_rv;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [97 : 0] cache_master_xactor_shim_awff_rv;
  wire [97 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [6 : 0] cache_master_xactor_shim_bff_rv;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [72 : 0] cache_master_xactor_shim_rff_rv;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DIB,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [257 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [257 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_37,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_37,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		 MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [97 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_4,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_4,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_dw_valid$wset_1__SEL_1,
       MUX_cache_dw_valid$wset_1__SEL_2,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__PSEL_2,
       MUX_cache_rg_exc_code$write_1__PSEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_10,
       MUX_cache_rg_state$write_1__SEL_11,
       MUX_cache_rg_state$write_1__SEL_12,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_4,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_rg_state$write_1__SEL_9,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7391;
  reg [31 : 0] v__h7490;
  reg [31 : 0] v__h7643;
  reg [31 : 0] v__h37323;
  reg [31 : 0] v__h42168;
  reg [31 : 0] v__h47606;
  reg [63 : 0] v__h47876;
  reg [31 : 0] v__h50962;
  reg [63 : 0] v__h51130;
  reg [31 : 0] v__h6854;
  reg [31 : 0] v__h54582;
  reg [63 : 0] v__h54822;
  reg [63 : 0] v__h54942;
  reg [31 : 0] v__h56701;
  reg [31 : 0] v__h56790;
  reg [31 : 0] v__h57009;
  reg [31 : 0] v__h57135;
  reg [63 : 0] v__h57366;
  reg [63 : 0] v__h57486;
  reg [31 : 0] v__h60655;
  reg [31 : 0] v__h60902;
  reg [31 : 0] v__h60863;
  reg [31 : 0] v__h48692;
  reg [31 : 0] v__h48449;
  reg [63 : 0] v__h48870;
  reg [31 : 0] v__h49015;
  reg [31 : 0] v__h49127;
  reg [31 : 0] v__h48621;
  reg [31 : 0] v__h49766;
  reg [31 : 0] v__h49526;
  reg [63 : 0] v__h49944;
  reg [31 : 0] v__h50201;
  reg [31 : 0] v__h50089;
  reg [31 : 0] v__h49695;
  reg [31 : 0] v__h50678;
  reg [31 : 0] v__h50749;
  reg [31 : 0] v__h50831;
  reg [31 : 0] v__h50607;
  reg [31 : 0] v__h51700;
  reg [31 : 0] v__h51942;
  reg [31 : 0] v__h55176;
  reg [31 : 0] v__h56362;
  reg [31 : 0] v__h56476;
  reg [31 : 0] v__h56200;
  reg [31 : 0] v__h56587;
  reg [31 : 0] v__h57664;
  reg [31 : 0] v__h58034;
  reg [31 : 0] v__h60345;
  reg [31 : 0] v__h57962;
  reg [31 : 0] v__h61831;
  reg [31 : 0] v__h63149;
  reg [31 : 0] v__h6848;
  reg [31 : 0] v__h7385;
  reg [31 : 0] v__h7484;
  reg [31 : 0] v__h7637;
  reg [31 : 0] v__h37317;
  reg [31 : 0] v__h42162;
  reg [31 : 0] v__h47600;
  reg [31 : 0] v__h48443;
  reg [31 : 0] v__h48615;
  reg [31 : 0] v__h48686;
  reg [31 : 0] v__h49009;
  reg [31 : 0] v__h49121;
  reg [31 : 0] v__h49520;
  reg [31 : 0] v__h49689;
  reg [31 : 0] v__h49760;
  reg [31 : 0] v__h50083;
  reg [31 : 0] v__h50195;
  reg [31 : 0] v__h50601;
  reg [31 : 0] v__h50672;
  reg [31 : 0] v__h50743;
  reg [31 : 0] v__h50825;
  reg [31 : 0] v__h50956;
  reg [31 : 0] v__h51694;
  reg [31 : 0] v__h51936;
  reg [31 : 0] v__h54576;
  reg [31 : 0] v__h55170;
  reg [31 : 0] v__h56194;
  reg [31 : 0] v__h56356;
  reg [31 : 0] v__h56470;
  reg [31 : 0] v__h56581;
  reg [31 : 0] v__h56695;
  reg [31 : 0] v__h56784;
  reg [31 : 0] v__h57003;
  reg [31 : 0] v__h57129;
  reg [31 : 0] v__h57658;
  reg [31 : 0] v__h57956;
  reg [31 : 0] v__h58028;
  reg [31 : 0] v__h60339;
  reg [31 : 0] v__h60649;
  reg [31 : 0] v__h60857;
  reg [31 : 0] v__h60896;
  reg [31 : 0] v__h61825;
  reg [31 : 0] v__h63143;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46,
		CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165,
		IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174,
		b__h38603,
		b__h42696,
		new_word128__h38585;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48,
	       IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614,
	       IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948,
	       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952,
	       IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085,
	       IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820,
	       _theResult_____2__h42907,
	       _theResult_____2__h58167,
	       _theResult___fst__h9421,
	       _theResult___snd__h10673,
	       _theResult___snd__h60074,
	       _theResult___snd_fst__h36153,
	       _theResult___snd_fst__h41908,
	       _theResult___snd_fst__h55502,
	       _theResult___snd_snd__h36154,
	       _theResult___snd_snd__h58350,
	       mem_req_wr_data_wdata__h6025,
	       w1__h42759,
	       w1__h42764,
	       w1__h58129,
	       w1__h58134;
  reg [7 : 0] fabric_2_strb__h5623, mem_req_wr_data_wstrb__h6026;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5967, size_val__h57339;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d431,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d441,
      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d447,
      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d317,
      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d327,
      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d333,
      IF_cache_rg_width_code_79_EQ_0_80_OR_cache_rg__ETC___d367,
      IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344,
      IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1079,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1187,
		 IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1078,
		 IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1186,
		 IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1197,
		 IF_cache_rg_victim_way_459_THEN_cache_master_x_ETC___d1528,
		 IF_cache_rg_victim_way_459_THEN_cache_ram_word_ETC___d1527,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723,
		 x__h10731,
		 y__h10732,
		 y__h10753,
		 y__h23449;
  wire [127 : 0] IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724,
		 IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115,
		 b__h52160,
		 b__h57912,
		 new_st_val_128__h42908,
		 new_st_val_128__h58168,
		 x__h36152,
		 x__h47151,
		 x__h58162,
		 x__h60323;
  wire [96 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80;
  wire [63 : 0] IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d732,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d736,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d740,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d744,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d748,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d752,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d756,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d760,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d764,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d768,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d772,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d776,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d780,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d784,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d788,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d792,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d812,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d816,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d820,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d824,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d828,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d832,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d836,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d840,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d852,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d856,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d860,
		SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d864,
		_theResult___fst__h9038,
		_theResult___fst__h9109,
		_theResult___snd__h55470,
		_theResult___snd_fst__h9040,
		_theResult___snd_fst__h9111,
		_theResult___snd_fst__h9645,
		cline_fabric_addr__h51015,
		lev_0_pte_pa__h49798,
		lev_0_pte_pa_w64_fa__h49800,
		lev_1_PTN_pa__h48722,
		lev_1_pte_pa__h48724,
		lev_1_pte_pa_w64_fa__h48726,
		lev_2_pte_pa__h47659,
		lev_2_pte_pa_w64_fa__h47661,
		new_st_val_64__h42913,
		new_st_val_64__h42985,
		new_st_val_64__h44182,
		new_st_val_64__h44186,
		new_st_val_64__h44190,
		new_st_val_64__h44194,
		new_st_val_64__h44199,
		new_st_val_64__h44205,
		new_st_val_64__h44210,
		new_st_val_64__h58173,
		new_st_val_64__h58245,
		new_st_val_64__h60186,
		new_st_val_64__h60190,
		new_st_val_64__h60194,
		new_st_val_64__h60198,
		new_st_val_64__h60203,
		new_st_val_64__h60209,
		new_st_val_64__h60214,
		pa___1__h9427,
		pa___1__h9476,
		pa___1__h9545,
		pte___1__h9694,
		pte___1__h9722,
		pte___2__h9419,
		result_lo__h36191,
		result_lo__h36226,
		result_lo__h36259,
		result_lo__h36292,
		result_lo__h36325,
		result_lo__h36358,
		result_lo__h36391,
		result_lo__h36424,
		result_lo__h36457,
		result_lo__h36490,
		result_lo__h36523,
		result_lo__h36556,
		result_lo__h36589,
		result_lo__h36622,
		result_lo__h36655,
		result_lo__h36688,
		result_lo__h36743,
		result_lo__h36776,
		result_lo__h36809,
		result_lo__h36842,
		result_lo__h36875,
		result_lo__h36908,
		result_lo__h36941,
		result_lo__h36974,
		result_lo__h37021,
		result_lo__h37054,
		result_lo__h37087,
		result_lo__h37120,
		result_lo__h55539,
		result_lo__h55572,
		result_lo__h55605,
		result_lo__h55638,
		result_lo__h55671,
		result_lo__h55704,
		result_lo__h55737,
		result_lo__h55770,
		result_lo__h55833,
		result_lo__h55866,
		result_lo__h55899,
		result_lo__h55932,
		result_lo__h55983,
		result_lo__h56016,
		result_lo__h59121,
		result_lo__h59153,
		result_lo__h59185,
		result_lo__h59217,
		result_lo__h59249,
		result_lo__h59281,
		result_lo__h59313,
		result_lo__h59345,
		result_lo__h59377,
		result_lo__h59409,
		result_lo__h59441,
		result_lo__h59473,
		result_lo__h59505,
		result_lo__h59537,
		result_lo__h59569,
		result_lo__h59601,
		result_lo__h59655,
		result_lo__h59687,
		result_lo__h59719,
		result_lo__h59751,
		result_lo__h59783,
		result_lo__h59815,
		result_lo__h59847,
		result_lo__h59879,
		result_lo__h59925,
		result_lo__h59957,
		result_lo__h59989,
		result_lo__h60021,
		satp_pa__h4568,
		value__h9739,
		vpn_0_pa__h49797,
		vpn_1_pa__h48723,
		vpn_2_pa__h47658,
		w1___1__h42952,
		w1___1__h58212,
		w2__h42766,
		word64__h5947,
		x1_avValue_pa__h8949,
		x__h42911,
		x__h58171;
  wire [55 : 0] x__h48819, x__h7763, x__h9430, x__h9479, x__h9548;
  wire [31 : 0] IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q51,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q58,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q65,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q72,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q32,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q33,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q34,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q35,
		cache_rg_st_amo_val_BITS_31_TO_0__q45,
		w12759_BITS_31_TO_0__q44,
		w18129_BITS_31_TO_0__q77;
  wire [15 : 0] IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q50,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q55,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q57,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q61,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q64,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q68,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q75,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q16,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q18,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q20,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q22,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q24,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q25,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q28,
		cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q30;
  wire [7 : 0] IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q49,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q52,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q53,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q54,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q56,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q59,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q60,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q63,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q66,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q67,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q70,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q73,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q74,
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q76,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q17,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q19,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q21,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q23,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q26,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q27,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q29,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q31,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q36,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q37,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q38,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q39,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q40,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q41,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q42,
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q43,
	       mem_req_wr_addr_awlen__h5931,
	       strobe64__h5948,
	       strobe64__h5952,
	       strobe64__h5956,
	       strobe64__h5960;
  wire [5 : 0] access_exc_code__h5300,
	       exc_code___1__h9319,
	       shift_bits__h5646,
	       x1_avValue_exc_code__h8950,
	       x1_avValue_snd__h47255,
	       y_avValue_snd__h47253;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1266,
	       IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1265,
	       IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1264,
	       IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1268,
	       IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1267,
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1270,
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1271;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire [1 : 0] tmp__h51187, tmp__h51188;
  wire IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d451,
       IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d337,
       IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d467,
       IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d466,
       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566,
       IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d461,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d430,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d440,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d446,
       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d450,
       NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469,
       NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547,
       NOT_cache_f_reset_reqs_notEmpty__26_91_AND_cac_ETC___d1536,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1321,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1385,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1428,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1327,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d345,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d373,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d377,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d568,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d905,
       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d911,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1232,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1257,
       NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d211,
       NOT_cache_rg_op_89_EQ_1_46_74_AND_NOT_cache_rg_ETC___d1253,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1190,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1218,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1224,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1230,
       NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d962,
       NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d480,
       NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d528,
       NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d550,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1207,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d234,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d485,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d489,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890,
       NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918,
       NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218,
       NOT_cache_w_req_width_code_wget__918_EQ_0b0_93_ETC___d1959,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d463,
       _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_dw_commit_whas__57_AND_cache_dw_commit_w_ETC___d961,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1370,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1372,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1411,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1417,
       cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269,
       cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275,
       cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d565,
       cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579,
       cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d891,
       cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d897,
       cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d479,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d570,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d584,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d587,
       cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d590,
       cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d1192,
       cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d582,
       cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d965,
       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1237,
       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d376,
       cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1263,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d221,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d470,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d519,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535,
       cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d555,
       cache_rg_priv_63_ULE_0b1___d164,
       cache_rg_width_code_79_EQ_0b100_38_OR_cache_rg_ETC___d453,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1194,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1245,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d893,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d907,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d922,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d967,
       cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d203,
       cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d482,
       cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1975,
       cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1980,
       lrsc_result__h38210,
       mem_req_wr_second_data_wuser__h5758,
       y__h9227;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[96:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[6] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[96:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[72] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[97] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d489 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_12 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_12 ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_11 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_11 ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_10 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_10 ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[6] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[6] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[6] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[72] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[72] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1321 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1385 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1428 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req = CAN_FIRE_RL_cache_do_req ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_37
  assign CAN_FIRE___me_check_37 = 1'b1 ;
  assign WILL_FIRE___me_check_37 = 1'b1 ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_dw_valid$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d590 ;
  assign MUX_cache_dw_valid$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1194 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1975 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d967 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__918_EQ_0b0_93_ETC___d1959 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_2 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_3 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1327 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d922 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d584 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_9 =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_10 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_11 =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign MUX_cache_rg_state$write_1__SEL_12 =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_91_AND_cac_ETC___d1536 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1370 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[128],
		 x__h36152 } :
	       { 65'd0, _theResult___snd_fst__h41908 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       { 65'd0, _theResult___snd_fst__h55502 } :
	       { 1'd0, b__h52160 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h60323 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h8949,
	       IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1197 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h58162 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 5'd16, lev_1_pte_pa_w64_fa__h48726, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 5'd16, lev_0_pte_pa_w64_fa__h49800, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 5'd16,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 ?
		 { 8'd0, size_val__h57339, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 5'd16, lev_2_pte_pa_w64_fa__h47661, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 5'd16, cline_fabric_addr__h51015, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6025,
	       mem_req_wr_data_wstrb__h6026,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5758 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       cache_rg_victim_way ?
		 cache_rg_pa[63:12] :
		 cache_ram_state_and_ctag_cset$DOB[104:53],
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       cache_rg_victim_way ?
		 cache_ram_state_and_ctag_cset$DOB[51:0] :
		 cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1078,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1079 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1186,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1187 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64,
		 cache_ram_word128_set$DOB[128:0] } :
	       { cache_ram_word128_set$DOB[257:129],
		 cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_4 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       exc_code___1__h9319 :
	       access_exc_code__h5300 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd__h47255 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h38210 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[128],
		 x__h47151 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h9038 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h48722 + vpn_1_pa__h48723 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h48722 + vpn_0_pa__h49797 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h4568 + vpn_2_pa__h47658 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_cache_w_req_width_code_wget__918_EQ_0b0_93_ETC___d1959 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_4 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     EN_commit ?
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1271 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h9040 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[6] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[72] ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_valid$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d590 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_valid$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_valid$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_valid$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_valid$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_valid$wset_1__SEL_1 ? 129'd0 : cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     mem_master_arready ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 5'd16,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5931,
	       _theResult___snd_snd_fst_val__h5967,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port1__write_1 =
	     { 1'd0,
	       74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       cache_master_xactor_shim_wff_rv$port1__write_1 :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_wff_rv$port1__write_1 :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port1__write_1 =
	     { 1'd0, 6'bxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_bff_rv$port1__write_1 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   98'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port1__write_1 =
	     { 1'd0,
	       97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_arff_rv$port1__write_1 :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port1__write_1 =
	     { 1'd0,
	       72'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       cache_master_xactor_shim_rff_rv$port1__write_1 :
	       cache_master_xactor_shim_rff_rv$port2__read ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_4;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__918_EQ_0b0_93_ETC___d1959 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1327 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d922 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d897 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d587 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d584 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_addr :
	       MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map$m_is_mem_addr &&
	     NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1257 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  MUX_cache_rg_state$write_1__SEL_4 or
	  MUX_cache_rg_state$write_1__VAL_4 or
	  MUX_cache_rg_state$write_1__SEL_5 or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    MUX_cache_rg_state$write_1__SEL_4:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_4;
    MUX_cache_rg_state$write_1__SEL_5:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h51188[0] ;
  assign cache_rg_victim_way$EN = CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5623,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5758 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1194 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h9739 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d967 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1370 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d451 =
	     (x1_avValue_pa__h8949[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 :
	       NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d450 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1079 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38603 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1187 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42696 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1266 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1265 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1078 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38603 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1186 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42696 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1264 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ?
	       cache_rg_state :
	       5'd9 ;
  assign IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d337 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724 =
	     cache_rg_lower_word64_full ? b__h52160 : b__h57912 ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q49 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[7:0] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q50 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[15:0] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q51 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[31:0] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q52 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[15:8] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q53 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[23:16] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q54 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[31:24] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[31:16] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[39:32] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[47:32] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:32] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[47:40] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[55:48] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:48] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:56] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[71:64] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[79:64] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[95:64] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[79:72] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[87:80] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[95:80] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[95:88] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[103:96] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[111:96] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[127:96] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[111:104] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[119:112] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[127:112] ;
  assign IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[127:120] ;
  assign IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1268 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1264 :
	       IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1267 ;
  assign IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d467 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d345 :
	       IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d466 ;
  assign IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1197 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115 } ;
  assign IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d1267 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache__ETC___d1265 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1266 ;
  assign IF_cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_ETC___d466 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d376 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d377 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d463 ;
  assign IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1270 =
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1263 ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d1268 :
		  5'd13) ;
  assign IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1271 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d1270 ;
  assign IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 =
	     x1_avValue_pa__h8949 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_459_THEN_cache_master_x_ETC___d1528 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_459_THEN_cache_ram_word_ETC___d1527 =
	     cache_rg_victim_way ?
	       cache_ram_word128_set$DOB[128:0] :
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d461 =
	     IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 ||
	      IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458) ;
  assign IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h42908 ;
  assign IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q45[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q45 } :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d430 =
	     x1_avValue_pa__h8949[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d440 =
	     x1_avValue_pa__h8949[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d446 =
	     x1_avValue_pa__h8949[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d450 =
	     x1_avValue_pa__h8949[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_91_AND_cac_ETC___d1536 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1321 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1385 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1428 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1327 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d345 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ||
	     IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d373 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 ||
	      IF_cache_rg_width_code_79_EQ_0_80_OR_cache_rg__ETC___d367) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 ||
	      IF_cache_rg_width_code_79_EQ_0_80_OR_cache_rg__ETC___d367) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d377 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ||
	     !EN_commit ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d568 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d905 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d911 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1218 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1232 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1230 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1257 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 ;
  assign NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d211 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d203) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_89_EQ_1_46_74_AND_NOT_cache_rg_ETC___d1253 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1190 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) &&
	     EN_commit ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1218 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d891 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1224 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) &&
	     EN_commit &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d905 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1230 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d962 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353) &&
	     cache_dw_commit_whas__57_AND_cache_dw_commit_w_ETC___d961 ;
  assign NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d480 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d479 ;
  assign NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d528 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d550 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[72] &&
	     !pte___2__h9419[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1207 =
	     NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d234 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h9419[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d485 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d480 &&
	     cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d482 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d489 =
	     (!cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d470 &&
	     (!EN_commit ||
	      NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d485 ||
	      cache_tlb$RDY_lookup) ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d480 &&
	     cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d482 ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d203 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 =
	     !cache_rg_priv_63_ULE_0b1___d164 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d528 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_cache_w_req_width_code_wget__918_EQ_0b0_93_ETC___d1959 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d732 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q31[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d736 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d740 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d744 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q42[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d748 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q27[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d752 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q41[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q41 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d756 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d760 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q40[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d764 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q23[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d768 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q39[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d772 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q21[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d776 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q38[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q38 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d780 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q19[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d784 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q36[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d788 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q17[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q17 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d792 =
	     { {56{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q37[7]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q37 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d812 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q30[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d816 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q28[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d820 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q25[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d824 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q24[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d828 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q22[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d832 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q20[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d836 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q18[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q18 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d840 =
	     { {48{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q16[15]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q16 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d852 =
	     { {32{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q35[31]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d856 =
	     { {32{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q34[31]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d860 =
	     { {32{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q33[31]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d864 =
	     { {32{cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q32[31]}},
	       cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q32 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d463 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 ||
	      IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458) &&
	     cache_rg_width_code_79_EQ_0b100_38_OR_cache_rg_ETC___d453 &&
	     IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d461 ;
  assign _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 =
	     8'd1 << size_val__h57339 <= 8'd8 ;
  assign _theResult___fst__h9038 =
	     cache_tlb$lookup[130] ? _theResult___fst__h9109 : cache_rg_addr ;
  assign _theResult___fst__h9109 =
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218) ?
	       cache_rg_addr :
	       _theResult___fst__h9421 ;
  assign _theResult___snd__h55470 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       64'd0 ;
  assign _theResult___snd_fst__h9040 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h9111 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h9111 =
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9645 ;
  assign _theResult___snd_fst__h9645 =
	     (!pte___2__h9419[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h9722 :
	       pte___2__h9419 ;
  assign access_exc_code__h5300 = MUX_cache_rg_exc_code$write_1__VAL_4 ;
  assign b__h52160 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign b__h57912 = { 64'd0, _theResult___snd_fst__h55502 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_dw_commit_whas__57_AND_cache_dw_commit_w_ETC___d961 =
	     EN_commit &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q79 =
	     cache_master_xactor_shim_arff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q78 =
	     cache_master_xactor_shim_awff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1370 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1372 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1411 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1417 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q80 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h8949[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h8949[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d565 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     EN_commit ;
  assign cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d891 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723 =
	     x__h10731 | y__h10732 ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q16 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:112] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q17 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[119:112] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q18 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[111:96] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q19 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[103:96] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q20 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:80] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q21 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[87:80] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q22 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[79:64] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q23 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[71:64] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q24 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:48] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q25 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[47:32] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q26 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[55:48] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q27 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[39:32] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q28 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:16] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q29 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[23:16] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q30 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[15:0] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q31 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[7:0] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q32 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:96] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q33 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:64] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q34 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:32] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q35 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:0] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q36 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[111:104] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q37 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:120] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q38 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:88] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q39 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[79:72] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q40 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:56] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q41 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[47:40] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q42 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:24] ;
  assign cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC__q43 =
	     cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[15:8] ;
  assign cache_rg_amo_funct5_94_EQ_0b10_95_AND_cache_ra_ETC___d897 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ;
  assign cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h8949 ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d479 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d203 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d570 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d565 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d568) ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d584 =
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d570 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d582 ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d587 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275) ;
  assign cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d590 =
	     cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_2__ETC___d587 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38210 ;
  assign cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d1192 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1190 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 ;
  assign cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d582 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 &&
	     IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 ;
  assign cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d965 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d962 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 ;
  assign cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1237 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38210 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d376 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h38210 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d373 ;
  assign cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d211 ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1263 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218) ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d221 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (!cache_tlb$lookup[130] ||
	      cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218) ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d470 =
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d221 ||
	     (NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d234 ||
	      cache_tlb$RDY_insert && cache_tlb$RDY_lookup &&
	      cache_f_pte_writebacks$FULL_N) &&
	     (!cache_soc_map$m_is_mem_addr ||
	      IF_cache_rg_op_89_EQ_0_90_OR_cache_rg_op_89_EQ_ETC___d467) ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d519 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_63_EQ_0b0_79_AND_NOT_cache_tlb_l_ETC___d212 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_66_BITS_59__ETC___d218) &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d528 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h9419[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d555 =
	     cache_rg_priv_63_ULE_0b1___d164 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_63_EQ_0b0_79_71_OR_cache_tlb_ETC___d550 &&
	     NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547 &&
	     cache_tlb$lookup[68] &&
	     cache_tlb$lookup[73] ;
  assign cache_rg_priv_63_ULE_0b1___d164 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q45 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_79_EQ_0b100_38_OR_cache_rg_ETC___d453 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1194 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d1192 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1245 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d377 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d893 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d891 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d907 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d905 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d922 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 &&
	      cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d579) ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d967 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_89_EQ_1_46_OR_cache_rg_op_89_EQ_2__ETC___d965 ;
  assign cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d203 =
	     cache_tlb$lookup[67] | y__h9227 ;
  assign cache_tlb_lookup_cache_rg_satp_66_BITS_59_TO_4_ETC___d482 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1975 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1980 =
	     (cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1975 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cline_fabric_addr__h51015 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h9319 = x1_avValue_exc_code__h8950 ;
  assign lev_0_pte_pa__h49798 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h49800 = { lev_0_pte_pa__h49798[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h48722 = { 8'd0, x__h48819 } ;
  assign lev_1_pte_pa__h48724 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h48726 = { lev_1_pte_pa__h48724[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h47659 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h47661 = { lev_2_pte_pa__h47659[63:3], 3'b0 } ;
  assign lrsc_result__h38210 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_52_EQ_IF_cache_rg_priv_63_ULE_ETC___d353 ;
  assign mem_req_wr_addr_awlen__h5931 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5758 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h42908 = { 64'd0, x__h42911 } ;
  assign new_st_val_128__h58168 = { 64'd0, x__h58171 } ;
  assign new_st_val_64__h42913 = { 32'd0, _theResult_____2__h42907[31:0] } ;
  assign new_st_val_64__h42985 =
	     IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 +
	     IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ;
  assign new_st_val_64__h44182 = w1__h42764 ^ w2__h42766 ;
  assign new_st_val_64__h44186 = w1__h42764 & w2__h42766 ;
  assign new_st_val_64__h44190 = w1__h42764 | w2__h42766 ;
  assign new_st_val_64__h44194 =
	     (w1__h42764 < w2__h42766) ? w1__h42764 : w2__h42766 ;
  assign new_st_val_64__h44199 =
	     (w1__h42764 <= w2__h42766) ? w2__h42766 : w1__h42764 ;
  assign new_st_val_64__h44205 =
	     ((IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ^
	       64'h8000000000000000)) ?
	       w1__h42764 :
	       w2__h42766 ;
  assign new_st_val_64__h44210 =
	     ((IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ^
	       64'h8000000000000000)) ?
	       w2__h42766 :
	       w1__h42764 ;
  assign new_st_val_64__h58173 = { 32'd0, _theResult_____2__h58167[31:0] } ;
  assign new_st_val_64__h58245 =
	     IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 +
	     IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ;
  assign new_st_val_64__h60186 = w1__h58134 ^ w2__h42766 ;
  assign new_st_val_64__h60190 = w1__h58134 & w2__h42766 ;
  assign new_st_val_64__h60194 = w1__h58134 | w2__h42766 ;
  assign new_st_val_64__h60198 =
	     (w1__h58134 < w2__h42766) ? w1__h58134 : w2__h42766 ;
  assign new_st_val_64__h60203 =
	     (w1__h58134 <= w2__h42766) ? w2__h42766 : w1__h58134 ;
  assign new_st_val_64__h60209 =
	     ((IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ^
	       64'h8000000000000000)) ?
	       w1__h58134 :
	       w2__h42766 ;
  assign new_st_val_64__h60214 =
	     ((IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1087 ^
	       64'h8000000000000000)) ?
	       w2__h42766 :
	       w1__h58134 ;
  assign pa___1__h9427 = { 8'd0, x__h9430 } ;
  assign pa___1__h9476 = { 8'd0, x__h9479 } ;
  assign pa___1__h9545 = { 8'd0, x__h9548 } ;
  assign pte___1__h9694 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9722 =
	     { pte___2__h9419[63:8], 1'd1, pte___2__h9419[6:0] } ;
  assign pte___2__h9419 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9694 ;
  assign result_lo__h36191 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d732 ;
  assign result_lo__h36226 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d736 ;
  assign result_lo__h36259 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d740 ;
  assign result_lo__h36292 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d744 ;
  assign result_lo__h36325 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d748 ;
  assign result_lo__h36358 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d752 ;
  assign result_lo__h36391 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d756 ;
  assign result_lo__h36424 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d760 ;
  assign result_lo__h36457 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d764 ;
  assign result_lo__h36490 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d768 ;
  assign result_lo__h36523 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d772 ;
  assign result_lo__h36556 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d776 ;
  assign result_lo__h36589 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d780 ;
  assign result_lo__h36622 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d784 ;
  assign result_lo__h36655 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d788 ;
  assign result_lo__h36688 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d792 ;
  assign result_lo__h36743 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d812 ;
  assign result_lo__h36776 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d816 ;
  assign result_lo__h36809 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d820 ;
  assign result_lo__h36842 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d824 ;
  assign result_lo__h36875 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d828 ;
  assign result_lo__h36908 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d832 ;
  assign result_lo__h36941 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d836 ;
  assign result_lo__h36974 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d840 ;
  assign result_lo__h37021 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d852 ;
  assign result_lo__h37054 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d856 ;
  assign result_lo__h37087 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d860 ;
  assign result_lo__h37120 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d864 ;
  assign result_lo__h55539 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 } ;
  assign result_lo__h55572 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 } ;
  assign result_lo__h55605 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 } ;
  assign result_lo__h55638 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 } ;
  assign result_lo__h55671 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 } ;
  assign result_lo__h55704 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1 } ;
  assign result_lo__h55737 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 } ;
  assign result_lo__h55770 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 } ;
  assign result_lo__h55833 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 } ;
  assign result_lo__h55866 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 } ;
  assign result_lo__h55899 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 } ;
  assign result_lo__h55932 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 } ;
  assign result_lo__h55983 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 } ;
  assign result_lo__h56016 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 } ;
  assign result_lo__h59121 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q49[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q49 } ;
  assign result_lo__h59153 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q52[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q52 } ;
  assign result_lo__h59185 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q53[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q53 } ;
  assign result_lo__h59217 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q54[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q54 } ;
  assign result_lo__h59249 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q56[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h59281 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q59[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h59313 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q60[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h59345 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h59377 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q63[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h59409 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q66[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h59441 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q67[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h59473 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h59505 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q70[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h59537 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q73[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h59569 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q74[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q74 } ;
  assign result_lo__h59601 =
	     { {56{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h59655 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q50[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q50 } ;
  assign result_lo__h59687 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q55[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h59719 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q57[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h59751 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q61[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h59783 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q64[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h59815 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q68[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h59847 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q71[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h59879 =
	     { {48{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q75[15]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h59925 =
	     { {32{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q51[31]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q51 } ;
  assign result_lo__h59957 =
	     { {32{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q58[31]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h59989 =
	     { {32{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q65[31]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h60021 =
	     { {32{IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q72[31]}},
	       IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC__q72 } ;
  assign satp_pa__h4568 = { 8'd0, x__h7763 } ;
  assign shift_bits__h5646 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5948 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5952 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5956 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5960 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h51187 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h51188 = tmp__h51187 + 2'd1 ;
  assign value__h9739 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h49797 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h48723 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h47658 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w12759_BITS_31_TO_0__q44 = w1__h42759[31:0] ;
  assign w18129_BITS_31_TO_0__q77 = w1__h58129[31:0] ;
  assign w1___1__h42952 = { 32'd0, w1__h42759[31:0] } ;
  assign w1___1__h58212 = { 32'd0, w1__h58129[31:0] } ;
  assign w2__h42766 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h5947 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5646 ;
  assign x1_avValue_exc_code__h8950 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign x1_avValue_pa__h8949 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x1_avValue_snd__h47255 =
	     (cache_rg_priv_63_ULE_0b1___d164 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h47253 ;
  assign x__h10731 = cache_ram_word128_set$DOB[128:0] & y__h10753 ;
  assign x__h36152 =
	     { _theResult___snd_snd__h36154, _theResult___snd_fst__h36153 } ;
  assign x__h42911 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h42913 :
	       _theResult_____2__h42907 ;
  assign x__h47151 = { _theResult___snd_snd__h36154, w1__h42759 } ;
  assign x__h48819 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h58162 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h58168 ;
  assign x__h58171 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h58173 :
	       _theResult_____2__h58167 ;
  assign x__h60323 = { _theResult___snd_snd__h58350, w1__h58129 } ;
  assign x__h7763 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9430 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9479 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9548 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10732 = cache_ram_word128_set$DOB[257:129] & y__h23449 ;
  assign y__h10753 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269}} ;
  assign y__h23449 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275}} ;
  assign y__h9227 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  assign y_avValue_snd__h47253 =
	     cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d1263 ?
	       x1_avValue_exc_code__h8950 :
	       cache_rg_exc_code ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5623 = 8'd0;
      3'b100: fabric_2_strb__h5623 = 8'b11111111;
      default: fabric_2_strb__h5623 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___snd_fst__h41908 = 64'd1;
      default: _theResult___snd_fst__h41908 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5967 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5967 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5967 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h57339 = cache_rg_width_code;
      default: size_val__h57339 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9427 or pa___1__h9476 or pa___1__h9545)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9421 = pa___1__h9427;
      2'd1: _theResult___fst__h9421 = pa___1__h9476;
      2'd2: _theResult___fst__h9421 = pa___1__h9545;
      2'd3: _theResult___fst__h9421 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5948 or
	  strobe64__h5952 or strobe64__h5956 or strobe64__h5960)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6026 = strobe64__h5948;
      3'b001: mem_req_wr_data_wstrb__h6026 = strobe64__h5952;
      3'b010: mem_req_wr_data_wstrb__h6026 = strobe64__h5956;
      3'b011: mem_req_wr_data_wstrb__h6026 = strobe64__h5960;
      3'b100: mem_req_wr_data_wstrb__h6026 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6026 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5947)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6025 = word64__h5947;
      default: mem_req_wr_data_wdata__h6025 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275 or
	  cache_ram_word128_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275)
      1'd0: new_word128__h38585 = cache_ram_word128_set$DOB[127:0];
      1'd1: new_word128__h38585 = cache_ram_word128_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 or
	  cache_rg_priv_63_ULE_0b1___d164 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_79_EQ_0_80_OR_cache_rg__ETC___d367 =
	      !cache_rg_priv_63_ULE_0b1___d164 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_79_EQ_0_80_OR_cache_rg__ETC___d367 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d317 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
      4'd15:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d317 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d327 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d327 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d333 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d333 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d317 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d327 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d333 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d337)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d317;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d327;
      3'b010:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_O_ETC___d333;
      3'd3:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d337;
      default: IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d311 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
	      IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d344;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d440 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d441 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d441 =
		   NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d440;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d430 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d431 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      4'd15:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d431 =
	      NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d430;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d446 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d447 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d447 =
		   NOT_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_r_ETC___d446;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312 or
	  cache_rg_priv_63_ULE_0b1___d164 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d431 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d441 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d447 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d451 or
	  cache_rg_width_code_79_EQ_0b100_38_OR_cache_rg_ETC___d453)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d431;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d441;
      3'b010:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d447;
      3'd3:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
	      (!cache_rg_priv_63_ULE_0b1___d164 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d451;
      3'b100:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
	      cache_rg_width_code_79_EQ_0b100_38_OR_cache_rg_ETC___d453;
      default: IF_cache_rg_width_code_79_EQ_0_80_THEN_NOT_cac_ETC___d458 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d312;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h36154 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h36154 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:64];
      default: _theResult___snd_snd__h36154 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h10673 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:0];
      4'h8:
	  _theResult___snd__h10673 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[127:64];
      default: _theResult___snd__h10673 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d852 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d856 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d860 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d864)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d852;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d856;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d860;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d864;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h37021 or
	  result_lo__h37054 or result_lo__h37087 or result_lo__h37120)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 =
	      result_lo__h37021;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 =
	      result_lo__h37054;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 =
	      result_lo__h37087;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 =
	      result_lo__h37120;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d812 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d816 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d820 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d824 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d828 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d832 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d836 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d840)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d812;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d816;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d820;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d824;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d828;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d832;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d836;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d840;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36743 or
	  result_lo__h36776 or
	  result_lo__h36809 or
	  result_lo__h36842 or
	  result_lo__h36875 or
	  result_lo__h36908 or result_lo__h36941 or result_lo__h36974)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36743;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36776;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36809;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36842;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36875;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36908;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36941;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
	      result_lo__h36974;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d732 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d736 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d740 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d744 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d748 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d752 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d756 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d760 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d764 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d768 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d772 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d776 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d780 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d784 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d788 or
	  SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d792)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d732;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d736;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d740;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d744;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d748;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d752;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d756;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d760;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d764;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d768;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d772;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d776;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d780;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d784;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d788;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 =
	      SEXT_cache_ram_word128_set_b_read__12_BITS_128_ETC___d792;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952 or
	  _theResult___snd__h10673 or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h42759 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940;
      3'd1:
	  w1__h42759 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948;
      3'b010:
	  w1__h42759 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d952;
      3'd3: w1__h42759 = _theResult___snd__h10673;
      3'b100:
	  w1__h42759 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:0];
      default: w1__h42759 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 or
	  w1___1__h42952 or
	  _theResult___snd__h10673 or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h42764 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940;
      3'd1:
	  w1__h42764 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948;
      3'b010: w1__h42764 = w1___1__h42952;
      3'd3: w1__h42764 = _theResult___snd__h10673;
      3'b100:
	  w1__h42764 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:0];
      default: w1__h42764 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36191 or
	  result_lo__h36226 or
	  result_lo__h36259 or
	  result_lo__h36292 or
	  result_lo__h36325 or
	  result_lo__h36358 or
	  result_lo__h36391 or
	  result_lo__h36424 or
	  result_lo__h36457 or
	  result_lo__h36490 or
	  result_lo__h36523 or
	  result_lo__h36556 or
	  result_lo__h36589 or
	  result_lo__h36622 or result_lo__h36655 or result_lo__h36688)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36191;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36226;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36259;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36292;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36325;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36358;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36391;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36424;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36457;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36490;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36523;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36556;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36589;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36622;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36655;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 =
	      result_lo__h36688;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869 or
	  _theResult___snd__h10673 or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h36153 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d809;
      3'd1:
	  _theResult___snd_fst__h36153 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d849;
      3'b010:
	  _theResult___snd_fst__h36153 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d869;
      3'd3: _theResult___snd_fst__h36153 = _theResult___snd__h10673;
      3'b100:
	  _theResult___snd_fst__h36153 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:0];
      default: _theResult___snd_fst__h36153 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948 or
	  w12759_BITS_31_TO_0__q44 or
	  _theResult___snd__h10673 or
	  cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d940;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d948;
      3'b010:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
	      { {32{w12759_BITS_31_TO_0__q44[31]}},
		w12759_BITS_31_TO_0__q44 };
      3'd3:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
	      _theResult___snd__h10673;
      3'b100:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
	      cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723[63:0];
      default: IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1085 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h44210 or
	  new_st_val_64__h42985 or
	  w2__h42766 or
	  new_st_val_64__h44182 or
	  new_st_val_64__h44190 or
	  new_st_val_64__h44186 or
	  new_st_val_64__h44205 or
	  new_st_val_64__h44194 or new_st_val_64__h44199)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h42907 = new_st_val_64__h42985;
      5'b00001: _theResult_____2__h42907 = w2__h42766;
      5'b00100: _theResult_____2__h42907 = new_st_val_64__h44182;
      5'b01000: _theResult_____2__h42907 = new_st_val_64__h44190;
      5'b01100: _theResult_____2__h42907 = new_st_val_64__h44186;
      5'b10000: _theResult_____2__h42907 = new_st_val_64__h44205;
      5'b11000: _theResult_____2__h42907 = new_st_val_64__h44194;
      5'b11100: _theResult_____2__h42907 = new_st_val_64__h44199;
      default: _theResult_____2__h42907 = new_st_val_64__h44210;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  new_word128__h38585 or
	  IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 =
	      { new_word128__h38585[127:32],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 =
	      { new_word128__h38585[127:64],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[31:0],
		new_word128__h38585[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 =
	      { new_word128__h38585[127:96],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[31:0],
		new_word128__h38585[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 =
	      { IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[31:0],
		new_word128__h38585[95:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 =
		   new_word128__h38585;
    endcase
  end
  always@(x1_avValue_pa__h8949 or new_word128__h38585 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 =
	      { new_word128__h38585[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 =
	      { new_word128__h38585[127:64],
		cache_rg_st_amo_val[31:0],
		new_word128__h38585[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 =
	      { new_word128__h38585[127:96],
		cache_rg_st_amo_val[31:0],
		new_word128__h38585[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 =
	      { cache_rg_st_amo_val[31:0], new_word128__h38585[95:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 =
		   new_word128__h38585;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  new_word128__h38585 or
	  IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:16],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:32],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:48],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:64],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:80],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:96],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { new_word128__h38585[127:112],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
	      { IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[15:0],
		new_word128__h38585[111:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 =
		   new_word128__h38585;
    endcase
  end
  always@(x1_avValue_pa__h8949 or new_word128__h38585 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:32],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:48],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:64],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:80],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:96],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { new_word128__h38585[127:112],
		cache_rg_st_amo_val[15:0],
		new_word128__h38585[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
	      { cache_rg_st_amo_val[15:0], new_word128__h38585[111:0] };
      default: IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 =
		   new_word128__h38585;
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  new_word128__h38585 or
	  IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:8],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:16],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:24],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:32],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:40],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:48],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:56],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:64],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:72],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:80],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:88],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:96],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:104],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:112],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { new_word128__h38585[127:120],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 =
	      { IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[7:0],
		new_word128__h38585[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8949 or
	  new_word128__h38585 or
	  IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46 =
	      { new_word128__h38585[127:64],
		IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[63:0] };
      4'h8:
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46 =
	      { IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115[63:0],
		new_word128__h38585[63:0] };
      default: CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46 =
		   new_word128__h38585;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38585 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174 or
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46 or
	  IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h42696 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1148;
      3'd1:
	  b__h42696 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1165;
      3'b010:
	  b__h42696 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1174;
      3'd3:
	  b__h42696 = CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q46;
      3'b100:
	  b__h42696 =
	      IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115;
      default: b__h42696 = new_word128__h38585;
    endcase
  end
  always@(x1_avValue_pa__h8949 or new_word128__h38585 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:16],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:24],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:32],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:40],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:48],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:56],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:64],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:72],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:80],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:88],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:96],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:104],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:112],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { new_word128__h38585[127:120],
		cache_rg_st_amo_val[7:0],
		new_word128__h38585[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 =
	      { cache_rg_st_amo_val[7:0], new_word128__h38585[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8949 or new_word128__h38585 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8949[3:0])
      4'h0:
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47 =
	      { new_word128__h38585[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47 =
	      { cache_rg_st_amo_val[63:0], new_word128__h38585[63:0] };
      default: CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47 =
		   new_word128__h38585;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38585 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056 or
	  IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065 or
	  CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h38603 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1039;
      3'd1:
	  b__h38603 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1056;
      3'b010:
	  b__h38603 =
	      IF_IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_ETC___d1065;
      3'd3:
	  b__h38603 = CASE_x1_avValue_pa949_BITS_3_TO_0_0x0_new_word_ETC__q47;
      3'b100: b__h38603 = cache_rg_st_amo_val[127:0];
      default: b__h38603 = new_word128__h38585;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h55833 or
	  result_lo__h55866 or result_lo__h55899 or result_lo__h55932)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 =
	      result_lo__h55833;
      3'd2:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 =
	      result_lo__h55866;
      3'd4:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 =
	      result_lo__h55899;
      3'd6:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 =
	      result_lo__h55932;
      default: IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h55539 or
	  result_lo__h55572 or
	  result_lo__h55605 or
	  result_lo__h55638 or
	  result_lo__h55671 or
	  result_lo__h55704 or result_lo__h55737 or result_lo__h55770)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55539;
      3'd1:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55572;
      3'd2:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55605;
      3'd3:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55638;
      3'd4:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55671;
      3'd5:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55704;
      3'd6:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55737;
      3'd7:
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 =
	      result_lo__h55770;
    endcase
  end
  always@(cache_rg_addr or result_lo__h55983 or result_lo__h56016)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48 =
	      result_lo__h55983;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48 =
	      result_lo__h56016;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614 or
	  IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48 or
	  _theResult___snd__h55470 or
	  cache_master_xactor_shim_rff_rv$port1__read)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h55502 =
	      IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1614;
      3'd1:
	  _theResult___snd_fst__h55502 =
	      IF_cache_rg_addr_74_BITS_2_TO_0_566_EQ_0_567_T_ETC___d1634;
      3'b010:
	  _theResult___snd_fst__h55502 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo5983_ETC__q48;
      3'd3: _theResult___snd_fst__h55502 = _theResult___snd__h55470;
      3'b100:
	  _theResult___snd_fst__h55502 =
	      cache_master_xactor_shim_rff_rv$port1__read[67:4];
      default: _theResult___snd_fst__h55502 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h58350 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h58350 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[127:64];
      default: _theResult___snd_snd__h58350 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h60074 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:0];
      4'h8:
	  _theResult___snd__h60074 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[127:64];
      default: _theResult___snd__h60074 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59925 or
	  result_lo__h59957 or result_lo__h59989 or result_lo__h60021)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 =
	      result_lo__h59925;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 =
	      result_lo__h59957;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 =
	      result_lo__h59989;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 =
	      result_lo__h60021;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59655 or
	  result_lo__h59687 or
	  result_lo__h59719 or
	  result_lo__h59751 or
	  result_lo__h59783 or
	  result_lo__h59815 or result_lo__h59847 or result_lo__h59879)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59655;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59687;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59719;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59751;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59783;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59815;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59847;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
	      result_lo__h59879;
      default: IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59121 or
	  result_lo__h59153 or
	  result_lo__h59185 or
	  result_lo__h59217 or
	  result_lo__h59249 or
	  result_lo__h59281 or
	  result_lo__h59313 or
	  result_lo__h59345 or
	  result_lo__h59377 or
	  result_lo__h59409 or
	  result_lo__h59441 or
	  result_lo__h59473 or
	  result_lo__h59505 or
	  result_lo__h59537 or result_lo__h59569 or result_lo__h59601)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59121;
      4'h1:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59153;
      4'h2:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59185;
      4'h3:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59217;
      4'h4:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59249;
      4'h5:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59281;
      4'h6:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59313;
      4'h7:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59345;
      4'h8:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59377;
      4'h9:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59409;
      4'hA:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59441;
      4'hB:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59473;
      4'hC:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59505;
      4'hD:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59537;
      4'hE:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59569;
      4'hF:
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 =
	      result_lo__h59601;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808 or
	  _theResult___snd__h60074 or
	  IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58129 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772;
      3'd1:
	  w1__h58129 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796;
      3'b010:
	  w1__h58129 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1808;
      3'd3: w1__h58129 = _theResult___snd__h60074;
      3'b100:
	  w1__h58129 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:0];
      default: w1__h58129 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 or
	  w1___1__h58212 or
	  _theResult___snd__h60074 or
	  IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58134 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772;
      3'd1:
	  w1__h58134 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796;
      3'b010: w1__h58134 = w1___1__h58212;
      3'd3: w1__h58134 = _theResult___snd__h60074;
      3'b100:
	  w1__h58134 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:0];
      default: w1__h58134 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772 or
	  IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796 or
	  w18129_BITS_31_TO_0__q77 or
	  _theResult___snd__h60074 or
	  IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1772;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
	      IF_cache_rg_addr_74_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1796;
      3'b010:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
	      { {32{w18129_BITS_31_TO_0__q77[31]}},
		w18129_BITS_31_TO_0__q77 };
      3'd3:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
	      _theResult___snd__h60074;
      3'b100:
	  IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
	      IF_cache_rg_lower_word64_full_490_THEN_cache_m_ETC___d1724[63:0];
      default: IF_cache_rg_width_code_79_EQ_0b10_28_THEN_SEXT_ETC___d1820 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h60214 or
	  new_st_val_64__h58245 or
	  w2__h42766 or
	  new_st_val_64__h60186 or
	  new_st_val_64__h60194 or
	  new_st_val_64__h60190 or
	  new_st_val_64__h60209 or
	  new_st_val_64__h60198 or new_st_val_64__h60203)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h58167 = new_st_val_64__h58245;
      5'b00001: _theResult_____2__h58167 = w2__h42766;
      5'b00100: _theResult_____2__h58167 = new_st_val_64__h60186;
      5'b01000: _theResult_____2__h58167 = new_st_val_64__h60194;
      5'b01100: _theResult_____2__h58167 = new_st_val_64__h60190;
      5'b10000: _theResult_____2__h58167 = new_st_val_64__h60209;
      5'b11000: _theResult_____2__h58167 = new_st_val_64__h60198;
      5'b11100: _theResult_____2__h58167 = new_st_val_64__h60203;
      default: _theResult_____2__h58167 = new_st_val_64__h60214;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 6'bxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      72'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      74'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 7'h2A;
    cache_master_xactor_shim_rff_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5931);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h5967, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6025);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6026);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5758, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7391 = $stime;
	  #0;
	end
    v__h7385 = v__h7391 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7385,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7490 = $stime;
	  #0;
	end
    v__h7484 = v__h7490 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7484, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7643 = $stime;
	  #0;
	end
    v__h7637 = v__h7643 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7637,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4568,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d519)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_63_ULE_0b1___d164 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_exc_code__h8950);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d234)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9739, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d555)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", x1_avValue_exc_code__h8950);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d555)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("'h%h", value__h9739, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_satp__ETC___d535 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_46___d547)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_ram_state_and_ctag_cset$DOB[52] &&
	  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d269 &&
	  cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__64_BITS__ETC___d275)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d893)
	begin
	  v__h37323 = $stime;
	  #0;
	end
    v__h37317 = v__h37323 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d893)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h37317,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  cache_ram_state_and_ctag_cset_b_read__64_BIT_5_ETC___d891)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d893)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d907)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d890 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  NOT_cache_ram_state_and_ctag_cset_b_read__64_B_ETC___d911)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd1 &&
	  IF_cache_rg_priv_63_ULE_0b1_64_AND_cache_rg_sa_ETC___d566 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d1207)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_rg_lrsc_valid &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC result = %0d", lrsc_result__h38210);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8949,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1079);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1078);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1220)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  (cache_rg_op == 2'd1 ||
	   cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	  NOT_cache_rg_op_89_EQ_2_92_93_OR_NOT_cache_rg__ETC___d1224)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8949,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1232)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_89_EQ_0_90_91_AND_NOT_cache_rg_ETC___d1232)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1237)
	begin
	  v__h42168 = $stime;
	  #0;
	end
    v__h42162 = v__h42168 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1237)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h42162,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_89_EQ_2_92_AND_cache_rg_amo_funct5_ETC___d1237)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1245)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$display("          PA 0x%0h ", x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723,
		 cache_ram_word128_set_b_read__12_BITS_128_TO_0_ETC___d723,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_79_EQ_0b100_38_THEN_cac_ETC___d1115 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1187);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__64_BI_ETC___d1186);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1250)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d918 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  NOT_cache_rg_op_89_EQ_1_46_74_AND_NOT_cache_rg_ETC___d1253)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8949);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_63_ULE_0b1_64_65_OR_NOT_cach_ETC___d516 &&
	  !cache_soc_map$m_is_mem_addr &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47606 = $stime;
	  #0;
	end
    v__h47600 = v__h47606 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h47600,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47876 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h47876);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h47661);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50962 = $stime;
	  #0;
	end
    v__h50956 = v__h50962 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h50956, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51130 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h51130);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h51015);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h51188[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h6854 = $stime;
	  #0;
	end
    v__h6848 = v__h6854 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h6848,
		 "D_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54582 = $stime;
	  #0;
	end
    v__h54576 = v__h54582 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54576,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54822 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h54822);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57339, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54942 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h54942);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56701 = $stime;
	  #0;
	end
    v__h56695 = v__h56701 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56695,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56790 = $stime;
	  #0;
	end
    v__h56784 = v__h56790 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h56784,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57009 = $stime;
	  #0;
	end
    v__h57003 = v__h57009 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57003,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57135 = $stime;
	  #0;
	end
    v__h57129 = v__h57135 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h57129,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57366 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57366);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h57339, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57486 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57486);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_79_EQ_0_80_OR_cach_ETC___d1543 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h60655 = $stime;
	  #0;
	end
    v__h60649 = v__h60655 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h60649,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60902 = $stime;
	  #0;
	end
    v__h60896 = v__h60902 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h60896,
	       "D_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h60863 = $stime;
	  #0;
	end
    v__h60857 = v__h60863 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h60857,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48692 = $stime;
	  #0;
	end
    v__h48686 = v__h48692 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48686,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48449 = $stime;
	  #0;
	end
    v__h48443 = v__h48449 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h48443,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48870 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h48870);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h48726);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360)
	begin
	  v__h49015 = $stime;
	  #0;
	end
    v__h49009 = v__h49015 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h49009,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1372)
	begin
	  v__h49127 = $stime;
	  #0;
	end
    v__h49121 = v__h49127 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1372)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h49121,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1372)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48722);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48621 = $stime;
	  #0;
	end
    v__h48615 = v__h48621 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48615,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5300);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49766 = $stime;
	  #0;
	end
    v__h49760 = v__h49766 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h49760,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49526 = $stime;
	  #0;
	end
    v__h49520 = v__h49526 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h49520,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49944 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h49944);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h49800);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1411)
	begin
	  v__h50201 = $stime;
	  #0;
	end
    v__h50195 = v__h50201 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1411)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h50195,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1411)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48722);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1417)
	begin
	  v__h50089 = $stime;
	  #0;
	end
    v__h50083 = v__h50089 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1417)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h50083,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49695 = $stime;
	  #0;
	end
    v__h49689 = v__h49695 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49689,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5300);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50678 = $stime;
	  #0;
	end
    v__h50672 = v__h50678 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h50672,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50749 = $stime;
	  #0;
	end
    v__h50743 = v__h50749 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h50743,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50831 = $stime;
	  #0;
	end
    v__h50825 = v__h50831 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h50825,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h48722);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50607 = $stime;
	  #0;
	end
    v__h50601 = v__h50607 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h50601,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5300);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	begin
	  v__h51700 = $stime;
	  #0;
	end
    v__h51694 = v__h51700 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h51694,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51942 = $stime;
	  #0;
	end
    v__h51936 = v__h51942 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h51936,
		 "D_MMU_Cache",
		 access_exc_code__h5300);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_459_THEN_cache_ram_word_ETC___d1527);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_459_THEN_cache_master_x_ETC___d1528);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_468___d1469)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55176 = $stime;
	  #0;
	end
    v__h55170 = v__h55176 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55170,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56362 = $stime;
	  #0;
	end
    v__h56356 = v__h56362 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56356,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___snd_fst__h55502 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56476 = $stime;
	  #0;
	end
    v__h56470 = v__h56476 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56470,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56200 = $stime;
	  #0;
	end
    v__h56194 = v__h56200 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56194,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h52160 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56587 = $stime;
	  #0;
	end
    v__h56581 = v__h56587 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56581,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57664 = $stime;
	  #0;
	end
    v__h57658 = v__h57664 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h57658,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h58034 = $stime;
	  #0;
	end
    v__h58028 = v__h58034 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h58028,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60345 = $stime;
	  #0;
	end
    v__h60339 = v__h60345 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h60339,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h60323 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57962 = $stime;
	  #0;
	end
    v__h57956 = v__h57962 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h57956,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h61831 = $stime;
	  #0;
	end
    v__h61825 = v__h61831 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h61825);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  cache_w_req_width_code_wget__918_EQ_0b0_939_OR_ETC___d1980)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h63149 = $stime;
	  #0;
	end
    v__h63143 = v__h63149 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h63143, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1906, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1905, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1904, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1903, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1902, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

