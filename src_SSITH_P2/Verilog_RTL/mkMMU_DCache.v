//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1
// mem_master_awid                O     4
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     4
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     4
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     4
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_req -> RDY_server_flush_request_put
//   EN_req -> RDY_tlb_flush
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [3 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [3 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [3 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [3 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arid,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awid,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [97 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [71 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [5 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_commit$port1__read,
       cache_crg_commit$port3__read,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_commit
  reg cache_crg_commit;
  wire cache_crg_commit$D_IN, cache_crg_commit$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [97 : 0] cache_master_xactor_shim_arff_rv;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [97 : 0] cache_master_xactor_shim_awff_rv;
  wire [97 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [6 : 0] cache_master_xactor_shim_bff_rv;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [72 : 0] cache_master_xactor_shim_rff_rv;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  reg [105 : 0] cache_ram_state_and_ctag_cset$DIB;
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [257 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [257 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1;
  wire [97 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_2,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_10,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_4,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_exc_code$write_1__SEL_8,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_lrsc_valid$write_1__VAL_2,
       MUX_cache_rg_state$write_1__SEL_17,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7445;
  reg [31 : 0] v__h7544;
  reg [31 : 0] v__h7695;
  reg [31 : 0] v__h37340;
  reg [31 : 0] v__h41867;
  reg [31 : 0] v__h47004;
  reg [63 : 0] v__h47274;
  reg [31 : 0] v__h6908;
  reg [31 : 0] v__h54243;
  reg [63 : 0] v__h54483;
  reg [63 : 0] v__h54603;
  reg [31 : 0] v__h56311;
  reg [31 : 0] v__h56399;
  reg [31 : 0] v__h56617;
  reg [31 : 0] v__h56739;
  reg [63 : 0] v__h56970;
  reg [63 : 0] v__h57090;
  reg [31 : 0] v__h60156;
  reg [31 : 0] v__h60403;
  reg [31 : 0] v__h60364;
  reg [31 : 0] v__h48090;
  reg [31 : 0] v__h47847;
  reg [63 : 0] v__h48268;
  reg [31 : 0] v__h48413;
  reg [31 : 0] v__h48525;
  reg [31 : 0] v__h48019;
  reg [31 : 0] v__h49164;
  reg [31 : 0] v__h48924;
  reg [63 : 0] v__h49342;
  reg [31 : 0] v__h49599;
  reg [31 : 0] v__h49487;
  reg [31 : 0] v__h49093;
  reg [31 : 0] v__h50076;
  reg [31 : 0] v__h50147;
  reg [31 : 0] v__h50229;
  reg [31 : 0] v__h50005;
  reg [31 : 0] v__h54836;
  reg [31 : 0] v__h55973;
  reg [31 : 0] v__h56087;
  reg [31 : 0] v__h55811;
  reg [31 : 0] v__h56198;
  reg [31 : 0] v__h57267;
  reg [31 : 0] v__h57635;
  reg [31 : 0] v__h59846;
  reg [31 : 0] v__h57563;
  reg [31 : 0] v__h60794;
  reg [31 : 0] v__h50364;
  reg [63 : 0] v__h50532;
  reg [31 : 0] v__h51380;
  reg [31 : 0] v__h51622;
  reg [31 : 0] v__h62383;
  reg [31 : 0] v__h6902;
  reg [31 : 0] v__h7439;
  reg [31 : 0] v__h7538;
  reg [31 : 0] v__h7689;
  reg [31 : 0] v__h37334;
  reg [31 : 0] v__h41861;
  reg [31 : 0] v__h46998;
  reg [31 : 0] v__h47841;
  reg [31 : 0] v__h48013;
  reg [31 : 0] v__h48084;
  reg [31 : 0] v__h48407;
  reg [31 : 0] v__h48519;
  reg [31 : 0] v__h48918;
  reg [31 : 0] v__h49087;
  reg [31 : 0] v__h49158;
  reg [31 : 0] v__h49481;
  reg [31 : 0] v__h49593;
  reg [31 : 0] v__h49999;
  reg [31 : 0] v__h50070;
  reg [31 : 0] v__h50141;
  reg [31 : 0] v__h50223;
  reg [31 : 0] v__h50358;
  reg [31 : 0] v__h51374;
  reg [31 : 0] v__h51616;
  reg [31 : 0] v__h54237;
  reg [31 : 0] v__h54830;
  reg [31 : 0] v__h55805;
  reg [31 : 0] v__h55967;
  reg [31 : 0] v__h56081;
  reg [31 : 0] v__h56192;
  reg [31 : 0] v__h56305;
  reg [31 : 0] v__h56393;
  reg [31 : 0] v__h56611;
  reg [31 : 0] v__h56733;
  reg [31 : 0] v__h57261;
  reg [31 : 0] v__h57557;
  reg [31 : 0] v__h57629;
  reg [31 : 0] v__h59840;
  reg [31 : 0] v__h60150;
  reg [31 : 0] v__h60358;
  reg [31 : 0] v__h60397;
  reg [31 : 0] v__h60788;
  reg [31 : 0] v__h62377;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53,
		CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48,
		CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200,
		IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209,
		IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660,
		IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981,
		IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985,
		_theResult___fst__h10736,
		_theResult___fst__h43611,
		_theResult___fst__h59594,
		b__h38548,
		b__h42267,
		new_word128__h38530,
		q1__h42328,
		q1__h57728,
		x__h36213,
		x__h41649,
		x__h55155;
  reg [63 : 0] _theResult_____2__h42478,
	       _theResult_____2__h57768,
	       _theResult___fst__h9472,
	       mem_req_wr_data_wdata__h6079;
  reg [7 : 0] fabric_2_strb__h5677, mem_req_wr_data_wstrb__h6080;
  reg [2 : 0] _theResult___snd_snd_fst_val__h6021, size_val__h56943;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17,
      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d429,
      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d439,
      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d445,
      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d322,
      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d332,
      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d338,
      IF_cache_rg_width_code_84_EQ_0_85_OR_cache_rg__ETC___d367,
      IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349,
      IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1113,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1222,
		 IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1112,
		 IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1221,
		 IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d1233,
		 IF_cache_rg_victim_way_504_THEN_cache_master_x_ETC___d1574,
		 IF_cache_rg_victim_way_504_THEN_cache_ram_word_ETC___d1573,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740,
		 x__h10792,
		 y__h10793,
		 y__h10814,
		 y__h23510;
  wire [127 : 0] IF_NOT_cache_rg_lower_word64_full_535_536_AND__ETC___d1701,
		 IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d906,
		 IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d747,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d751,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d755,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d759,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d763,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d767,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d771,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d775,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d779,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d783,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d787,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d791,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d795,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d799,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d803,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d807,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d827,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d831,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d835,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d839,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d843,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d847,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d851,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d855,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d867,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d871,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d875,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d879,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d887,
		 SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d891,
		 _theResult___fst__h55126,
		 b__h51840,
		 new_st_val_128__h42479,
		 new_st_val_128__h57769,
		 result__h10738,
		 result__h10740,
		 result__h36224,
		 result__h36262,
		 result__h36295,
		 result__h36328,
		 result__h36361,
		 result__h36394,
		 result__h36427,
		 result__h36460,
		 result__h36493,
		 result__h36526,
		 result__h36559,
		 result__h36592,
		 result__h36625,
		 result__h36658,
		 result__h36691,
		 result__h36724,
		 result__h36779,
		 result__h36812,
		 result__h36845,
		 result__h36878,
		 result__h36911,
		 result__h36944,
		 result__h36977,
		 result__h37010,
		 result__h37057,
		 result__h37090,
		 result__h37123,
		 result__h37156,
		 result__h55128,
		 result__h55166,
		 result__h55202,
		 result__h55235,
		 result__h55268,
		 result__h55301,
		 result__h55334,
		 result__h55367,
		 result__h55400,
		 result__h55463,
		 result__h55496,
		 result__h55529,
		 result__h55562,
		 result__h55613,
		 result__h55646,
		 result__h57977,
		 result__h58674,
		 result__h58706,
		 result__h58738,
		 result__h58770,
		 result__h58802,
		 result__h58834,
		 result__h58866,
		 result__h58898,
		 result__h58930,
		 result__h58962,
		 result__h58994,
		 result__h59026,
		 result__h59058,
		 result__h59090,
		 result__h59122,
		 result__h59176,
		 result__h59208,
		 result__h59240,
		 result__h59272,
		 result__h59304,
		 result__h59336,
		 result__h59368,
		 result__h59400,
		 result__h59446,
		 result__h59478,
		 result__h59510,
		 result__h59542,
		 result__h59596,
		 result__h59625,
		 word128__h55021,
		 word128__h57902,
		 x__h57763;
  wire [96 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16;
  wire [63 : 0] IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1120,
		IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122,
		IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1872,
		_theResult___fst__h9090,
		_theResult___fst__h9161,
		_theResult___snd_fst__h9092,
		_theResult___snd_fst__h9163,
		_theResult___snd_fst__h9696,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q38,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q39,
		cline_fabric_addr__h50417,
		lev_0_pte_pa__h49196,
		lev_0_pte_pa_w64_fa__h49198,
		lev_1_PTN_pa__h48120,
		lev_1_pte_pa__h48122,
		lev_1_pte_pa_w64_fa__h48124,
		lev_2_pte_pa__h47057,
		lev_2_pte_pa_w64_fa__h47059,
		new_st_val_64__h42484,
		new_st_val_64__h42556,
		new_st_val_64__h43702,
		new_st_val_64__h43706,
		new_st_val_64__h43710,
		new_st_val_64__h43714,
		new_st_val_64__h43719,
		new_st_val_64__h43725,
		new_st_val_64__h43730,
		new_st_val_64__h57774,
		new_st_val_64__h57846,
		new_st_val_64__h59687,
		new_st_val_64__h59691,
		new_st_val_64__h59695,
		new_st_val_64__h59699,
		new_st_val_64__h59704,
		new_st_val_64__h59710,
		new_st_val_64__h59715,
		pa___1__h9478,
		pa___1__h9527,
		pa___1__h9596,
		pte___1__h9745,
		pte___1__h9773,
		pte___2__h9470,
		satp_pa__h4621,
		value__h9790,
		vpn_0_pa__h49195,
		vpn_1_pa__h48121,
		vpn_2_pa__h47056,
		w1___1__h42523,
		w1___1__h57813,
		w1__h42335,
		w1__h57735,
		w2__h42337,
		word1287902_BITS_127_TO_64__q72,
		word1287902_BITS_63_TO_0__q57,
		word64__h6001,
		x1_avValue_pa__h9001,
		x__h42482,
		x__h57772;
  wire [55 : 0] x__h48217, x__h7815, x__h9481, x__h9530, x__h9599;
  wire [31 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q34,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q35,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q36,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q37,
		cache_rg_st_amo_val_BITS_31_TO_0__q50,
		q12328_BITS_31_TO_0__q49,
		q17728_BITS_31_TO_0__q84,
		word1287902_BITS_127_TO_96__q79,
		word1287902_BITS_31_TO_0__q56,
		word1287902_BITS_63_TO_32__q64,
		word1287902_BITS_95_TO_64__q71;
  wire [15 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q18,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q20,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q22,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q24,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q26,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q28,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q30,
		cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q32,
		word1287902_BITS_111_TO_96__q78,
		word1287902_BITS_127_TO_112__q81,
		word1287902_BITS_15_TO_0__q55,
		word1287902_BITS_31_TO_16__q60,
		word1287902_BITS_47_TO_32__q63,
		word1287902_BITS_63_TO_48__q67,
		word1287902_BITS_79_TO_64__q70,
		word1287902_BITS_95_TO_80__q75;
  wire [7 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q19,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q21,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q23,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q25,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q27,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q29,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q31,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q33,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q40,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q41,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q42,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q43,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q44,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q45,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q46,
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q47,
	       mem_req_wr_addr_awlen__h5985,
	       strobe64__h6002,
	       strobe64__h6006,
	       strobe64__h6010,
	       strobe64__h6014,
	       word1287902_BITS_103_TO_96__q77,
	       word1287902_BITS_111_TO_104__q80,
	       word1287902_BITS_119_TO_112__q82,
	       word1287902_BITS_127_TO_120__q83,
	       word1287902_BITS_15_TO_8__q58,
	       word1287902_BITS_23_TO_16__q59,
	       word1287902_BITS_31_TO_24__q61,
	       word1287902_BITS_39_TO_32__q62,
	       word1287902_BITS_47_TO_40__q65,
	       word1287902_BITS_55_TO_48__q66,
	       word1287902_BITS_63_TO_56__q68,
	       word1287902_BITS_71_TO_64__q69,
	       word1287902_BITS_79_TO_72__q73,
	       word1287902_BITS_7_TO_0__q54,
	       word1287902_BITS_87_TO_80__q74,
	       word1287902_BITS_95_TO_88__q76;
  wire [5 : 0] access_exc_code__h5353,
	       exc_code___1__h9370,
	       shift_bits__h5700,
	       x1_avValue_exc_code__h9002;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d553,
	       IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d555,
	       IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d554,
	       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d557,
	       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d558;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire [1 : 0] tmp__h50589, tmp__h50590;
  wire IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d449,
       IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d342,
       IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d465,
       IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d464,
       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d468,
       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583,
       IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d459,
       NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d428,
       NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d438,
       NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d444,
       NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d448,
       NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514,
       NOT_cache_f_reset_reqs_notEmpty__26_73_AND_cac_ETC___d1582,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1363,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1427,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1470,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1369,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d350,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d373,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d463,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d585,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d932,
       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d940,
       NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d214,
       NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d547,
       NOT_cache_rg_op_92_EQ_1_51_91_AND_NOT_cache_rg_ETC___d996,
       NOT_cache_rg_op_92_EQ_1_51_91_AND_cache_ram_st_ETC___d950,
       NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1261,
       NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1268,
       NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1275,
       NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d994,
       NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d506,
       NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d526,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1001,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1230,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1238,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1245,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1253,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1259,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1273,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1280,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1287,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1295,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1308,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1313,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1317,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d239,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d470,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d511,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d572,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d578,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d600,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d608,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d916,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d924,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d930,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d936,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d945,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949,
       NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d955,
       NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221,
       NOT_req_width_code_EQ_0b0_963_964_AND_NOT_req__ETC___d1983,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d461,
       _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146,
       cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1402,
       cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1412,
       cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1414,
       cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1453,
       cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1459,
       cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274,
       cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280,
       cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d1303,
       cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d582,
       cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d593,
       cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912,
       cache_rg_amo_funct5_97_EQ_0b10_98_AND_cache_ra_ETC___d920,
       cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d505,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d542,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d587,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d597,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d743,
       cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d1225,
       cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d595,
       cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d997,
       cache_rg_op_92_EQ_2_95_AND_cache_rg_amo_funct5_ETC___d375,
       cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215,
       cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224,
       cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d514,
       cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533,
       cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d551,
       cache_rg_priv_65_ULE_0b1___d166,
       cache_rg_width_code_84_EQ_0b100_43_OR_cache_rg_ETC___d451,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d914,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d934,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d953,
       cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d206,
       cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d508,
       lrsc_result__h37730,
       mem_req_wr_second_data_wuser__h5812,
       req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d1999,
       req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d2004,
       y__h9278;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = !EN_req && cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put =
	     !EN_req && cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = !EN_req ;
  assign CAN_FIRE_tlb_flush = !EN_req ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[96:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[6] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[96:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[72] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[97] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     (!cache_crg_commit$port1__read ||
	      NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d470) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_73_AND_cac_ETC___d1582 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[6] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[6] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[6] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[72] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[72] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1363 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1427 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1470 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill && !EN_req ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop && !EN_req ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !EN_req && !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq && !EN_req ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d608 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1230 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     EN_req &&
	     (req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d1999 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1001 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_963_964_AND_NOT_req__ETC___d1983 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1369 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d955 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d600 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_17 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d551 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1412 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     { cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d743,
	       IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d906 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     { 1'd0,
	       IF_NOT_cache_rg_lower_word64_full_535_536_AND__ETC___d1701 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, q1__h57728 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h9001,
	       IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d1233 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h57763 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 5'd16, lev_1_pte_pa_w64_fa__h48124, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 5'd16, lev_0_pte_pa_w64_fa__h49198, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 5'd16,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 ?
		 { 8'd0, size_val__h56943, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 5'd16, lev_2_pte_pa_w64_fa__h47059, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 5'd16, cline_fabric_addr__h50417, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6079,
	       mem_req_wr_data_wstrb__h6080,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5812 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       cache_rg_victim_way ?
		 cache_rg_pa[63:12] :
		 cache_ram_state_and_ctag_cset$DOB[104:53],
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       cache_rg_victim_way ?
		 cache_ram_state_and_ctag_cset$DOB[51:0] :
		 cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1112,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1113 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1221,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1222 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64,
		 cache_ram_word128_set$DOB[128:0] } :
	       { cache_ram_word128_set$DOB[257:129],
		 cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_2 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       exc_code___1__h9370 :
	       access_exc_code__h5353 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     cache_crg_commit$port1__read ?
	       x1_avValue_exc_code__h9002 :
	       6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h37730 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[128],
		 q1__h42328 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_lrsc_valid$write_1__VAL_2 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_65_ULE_0b1___d166 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h9090 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h48120 + vpn_1_pa__h48121 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h48120 + vpn_0_pa__h49195 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h4621 + vpn_2_pa__h47056 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150 } ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (NOT_req_width_code_EQ_0b0_963_964_AND_NOT_req__ETC___d1983 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_10 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     cache_crg_commit$port1__read ?
	       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d558 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_65_ULE_0b1___d166 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h9092 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[6] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[72] ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d608 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     mem_master_arready ;
  assign cache_crg_commit$port1__read = EN_commit || cache_crg_commit ;
  assign cache_crg_commit$port3__read =
	     !EN_req && cache_crg_commit$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 5'd16,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5985,
	       _theResult___snd_snd_fst_val__h6021,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   98'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port2__read ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_commit
  assign cache_crg_commit$D_IN = cache_crg_commit$port3__read ;
  assign cache_crg_commit$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = EN_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = EN_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__VAL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_exc_code$write_1__SEL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  MUX_cache_rg_exc_code$write_1__SEL_8 or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_2;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_4: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_8:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'b101010 /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_963_964_AND_NOT_req__ETC___d1983 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1369 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = EN_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d955 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d924 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d600 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = EN_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = EN_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     EN_req ? req_addr : MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d572 ||
	     EN_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = EN_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = EN_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = EN_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     EN_req ? req_st_value : MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1313 ||
	     EN_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  EN_req or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  MUX_cache_rg_state$write_1__SEL_6 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  MUX_cache_rg_state$write_1__SEL_7 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_10 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_state$write_1__SEL_17 or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    EN_req: cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    MUX_cache_rg_state$write_1__SEL_6:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    MUX_cache_rg_state$write_1__SEL_7:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_10;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    MUX_cache_rg_state$write_1__SEL_17:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d551 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     EN_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h50590[0] ;
  assign cache_rg_victim_way$EN = WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = EN_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5677,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5812 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1230 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h9790 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_reset_response_get || EN_server_flush_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_word128_set_in_cache[7:2] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       106'h15555555555554AAAAAAAAAAAAA ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_state_and_ctag_cset$DIB =
	      106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_state_and_ctag_cset$DIB =
		   106'h2AAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB =
	     !MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 &&
	     !WILL_FIRE_RL_cache_rl_rereq ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   258'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1001 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1412 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d449 =
	     (x1_avValue_pa__h9001[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 :
	       NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d448 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1113 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38548 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1222 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42267 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d553 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_lower_word64_full_535_536_AND__ETC___d1701 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       x__h55155 :
	       b__h51840 ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1112 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h38548 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1221 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h42267 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d342 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 ;
  assign IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d465 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d350 :
	       IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d464 ;
  assign IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d555 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       5'd9 :
	       IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d554 ;
  assign IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d906 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       x__h36213 :
	       x__h41649 ;
  assign IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d1233 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150 } ;
  assign IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d464 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_92_EQ_2_95_AND_cache_rg_amo_funct5_ETC___d375 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d463 ;
  assign IF_cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_ETC___d554 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       5'd12 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d553 ;
  assign IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d468 =
	     cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 ?
	       cache_tlb$RDY_lookup :
	       (NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d239 ||
		cache_tlb$RDY_lookup && cache_tlb$RDY_insert &&
		cache_f_pte_writebacks$FULL_N) &&
	       (!cache_soc_map$m_is_mem_addr ||
		IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d465) ;
  assign IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d557 =
	     cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d555 :
		  5'd13) ;
  assign IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d558 =
	     (cache_rg_priv_65_ULE_0b1___d166 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d557 ;
  assign IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 =
	     x1_avValue_pa__h9001 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_504_THEN_cache_master_x_ETC___d1574 =
	     cache_rg_victim_way ?
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_504_THEN_cache_ram_word_ETC___d1573 =
	     cache_rg_victim_way ?
	       cache_ram_word128_set$DOB[128:0] :
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d459 =
	     IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 ||
	      IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456) ;
  assign IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h42479 ;
  assign IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1120 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{q12328_BITS_31_TO_0__q49[31]}},
		 q12328_BITS_31_TO_0__q49 } :
	       q1__h42328[63:0] ;
  assign IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q50[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q50 } :
	       cache_rg_st_amo_val[63:0] ;
  assign IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1872 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{q17728_BITS_31_TO_0__q84[31]}},
		 q17728_BITS_31_TO_0__q84 } :
	       q1__h57728[63:0] ;
  assign NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d428 =
	     x1_avValue_pa__h9001[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 ;
  assign NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d438 =
	     x1_avValue_pa__h9001[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 ;
  assign NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d444 =
	     x1_avValue_pa__h9001[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 ;
  assign NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d448 =
	     x1_avValue_pa__h9001[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_73_AND_cac_ETC___d1582 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1363 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1427 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1470 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1369 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d350 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ||
	     IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d373 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 ||
	      IF_cache_rg_width_code_84_EQ_0_85_OR_cache_rg__ETC___d367) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 ||
	      IF_cache_rg_width_code_84_EQ_0_85_OR_cache_rg__ETC___d367) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d463 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d461 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d585 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d932 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d940 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d214 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d206) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d547 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) ;
  assign NOT_cache_rg_op_92_EQ_1_51_91_AND_NOT_cache_rg_ETC___d996 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign NOT_cache_rg_op_92_EQ_1_51_91_AND_cache_ram_st_ETC___d950 =
	     cache_rg_op != 2'd1 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1261 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912 ;
  assign NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1268 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d932 ;
  assign NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1275 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d994 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d506 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d505 ;
  assign NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d526 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1001 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d997 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1230 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d1225 ||
	      NOT_cache_rg_op_92_EQ_1_51_91_AND_NOT_cache_rg_ETC___d996) ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1238 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1245 =
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1253 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1259 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1261 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1273 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1268 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1280 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d1275 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1287 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37730 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1295 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d932 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1308 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d1303 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1313 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_92_EQ_1_51_91_AND_NOT_cache_rg_ETC___d996 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1317 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 &&
	     !cache_soc_map$m_is_mem_addr &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d239 =
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h9470[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d470 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     (cache_rg_priv_65_ULE_0b1___d166 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130] ||
	      IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d468) ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d511 =
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d506 &&
	     cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d508 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 =
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d506 &&
	     cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d508 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d572 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d578 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 &&
	     cache_ram_state_and_ctag_cset$DOB[105] &&
	     cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d600 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d597 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d608 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d571 &&
	     cache_soc_map$m_is_mem_addr &&
	     (MUX_cache_rg_lrsc_valid$write_1__VAL_2 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	      lrsc_result__h37730) ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 =
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d206 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d916 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d914 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d924 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_97_EQ_0b10_98_AND_cache_ra_ETC___d920 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d930 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d936 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d934 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d945 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d911 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d940 ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 =
	     !cache_rg_priv_65_ULE_0b1___d166 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d526 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d955 =
	     (!cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d949 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d953 ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_req_width_code_EQ_0b0_963_964_AND_NOT_req__ETC___d1983 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d747 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q33[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d751 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q46[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q46 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d755 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q31[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d759 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q47[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q47 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d763 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d767 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q45[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q45 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d771 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q27[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d775 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q44[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q44 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d779 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q25[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d783 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d787 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q23[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d791 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q42[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d795 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q21[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d799 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q41[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q41 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d803 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q19[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d807 =
	     { {120{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q40[7]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d827 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q32[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q32 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d831 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q30[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d835 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q28[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d839 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q26[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d843 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q24[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d847 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q22[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d851 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q20[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d855 =
	     { {112{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q18[15]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q18 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d867 =
	     { {96{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q37[31]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q37 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d871 =
	     { {96{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q36[31]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d875 =
	     { {96{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q34[31]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d879 =
	     { {96{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q35[31]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d887 =
	     { {64{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q39[63]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d891 =
	     { {64{cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q38[63]}},
	       cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q38 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d461 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 ||
	      IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456) &&
	     cache_rg_width_code_84_EQ_0b100_43_OR_cache_rg_ETC___d451 &&
	     IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d459 ;
  assign _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 =
	     8'd1 << size_val__h56943 <= 8'd8 ;
  assign _theResult___fst__h55126 =
	     (cache_rg_addr[2:0] == 3'd0) ? result__h55128 : 128'd0 ;
  assign _theResult___fst__h9090 =
	     cache_tlb$lookup[130] ? _theResult___fst__h9161 : cache_rg_addr ;
  assign _theResult___fst__h9161 =
	     (cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221) ?
	       cache_rg_addr :
	       _theResult___fst__h9472 ;
  assign _theResult___snd_fst__h9092 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h9163 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h9163 =
	     (cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9696 ;
  assign _theResult___snd_fst__h9696 =
	     (!pte___2__h9470[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h9773 :
	       pte___2__h9470 ;
  assign access_exc_code__h5353 = MUX_cache_rg_exc_code$write_1__VAL_1 ;
  assign b__h51840 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d146 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q52 =
	     cache_master_xactor_shim_arff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q2 =
	     cache_master_xactor_shim_awff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1402 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1412 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1414 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1453 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1459 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h9001[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h9001[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d1303 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d582 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d593 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 ;
  assign cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740 =
	     x__h10792 | y__h10793 ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q18 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:112] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q19 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[119:112] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q20 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[111:96] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q21 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[103:96] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q22 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:80] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q23 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[87:80] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q24 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[79:64] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q25 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[71:64] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q26 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:48] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q27 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[55:48] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q28 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[47:32] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q29 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[39:32] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q30 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:16] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q31 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[23:16] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q32 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[15:0] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q33 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[7:0] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q34 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:64] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q35 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:96] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q36 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:32] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q37 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:0] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q38 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:64] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q39 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:0] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q40 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:120] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q41 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[111:104] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q42 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:88] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q43 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[79:72] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q44 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:56] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q45 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[47:40] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q46 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[15:8] ;
  assign cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC__q47 =
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:24] ;
  assign cache_rg_amo_funct5_97_EQ_0b10_98_AND_cache_ra_ETC___d920 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h9001 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d505 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d206 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d542 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280) ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d587 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d582 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d585) ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d597 =
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d587 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d595 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d743 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_rg_width_code == 3'b100 &&
	     cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[128] ;
  assign cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d1225 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358) ;
  assign cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d595 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_sa_ETC___d583 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d593 ;
  assign cache_rg_op_92_EQ_1_51_OR_cache_rg_op_92_EQ_2__ETC___d997 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_95_96_OR_NOT_cache_rg__ETC___d994 ||
	     NOT_cache_rg_op_92_EQ_1_51_91_AND_NOT_cache_rg_ETC___d996 ;
  assign cache_rg_op_92_EQ_2_95_AND_cache_rg_amo_funct5_ETC___d375 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37730 ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d373 ;
  assign cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d214 ;
  assign cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 =
	     cache_rg_priv_65_ULE_0b1___d166 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221) ;
  assign cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d514 =
	     cache_rg_priv_65_ULE_0b1___d166 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_65_EQ_0b0_82_AND_NOT_cache_tlb_l_ETC___d215 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_68_BITS_59__ETC___d221) &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 =
	     cache_rg_priv_65_ULE_0b1___d166 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_65_EQ_0b0_82_97_OR_cache_tlb_ETC___d526 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h9470[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d551 =
	     cache_rg_priv_65_ULE_0b1___d166 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d224 ||
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d542 ||
	     NOT_cache_rg_op_92_EQ_0_93_94_AND_NOT_cache_rg_ETC___d547 ||
	     !cache_soc_map$m_is_mem_addr ;
  assign cache_rg_priv_65_ULE_0b1___d166 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q50 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_84_EQ_0b100_43_OR_cache_rg_ETC___d451 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d914 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__69_BIT_5_ETC___d912 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d934 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d932 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d953 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      NOT_cache_rg_op_92_EQ_1_51_91_AND_cache_ram_st_ETC___d950) ;
  assign cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d206 =
	     cache_tlb$lookup[67] | y__h9278 ;
  assign cache_tlb_lookup_cache_rg_satp_68_BITS_59_TO_4_ETC___d508 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cline_fabric_addr__h50417 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h9370 = x1_avValue_exc_code__h9002 ;
  assign lev_0_pte_pa__h49196 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h49198 = { lev_0_pte_pa__h49196[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h48120 = { 8'd0, x__h48217 } ;
  assign lev_1_pte_pa__h48122 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h48124 = { lev_1_pte_pa__h48122[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h47057 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h47059 = { lev_2_pte_pa__h47057[63:3], 3'b0 } ;
  assign lrsc_result__h37730 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_57_EQ_IF_cache_rg_priv_65_ULE_ETC___d358 ;
  assign mem_req_wr_addr_awlen__h5985 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5812 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h42479 = { 64'd0, x__h42482 } ;
  assign new_st_val_128__h57769 = { 64'd0, x__h57772 } ;
  assign new_st_val_64__h42484 = { 32'd0, _theResult_____2__h42478[31:0] } ;
  assign new_st_val_64__h42556 =
	     IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1120 +
	     IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ;
  assign new_st_val_64__h43702 = w1__h42335 ^ w2__h42337 ;
  assign new_st_val_64__h43706 = w1__h42335 & w2__h42337 ;
  assign new_st_val_64__h43710 = w1__h42335 | w2__h42337 ;
  assign new_st_val_64__h43714 =
	     (w1__h42335 < w2__h42337) ? w1__h42335 : w2__h42337 ;
  assign new_st_val_64__h43719 =
	     (w1__h42335 <= w2__h42337) ? w2__h42337 : w1__h42335 ;
  assign new_st_val_64__h43725 =
	     ((IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1120 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ^
	       64'h8000000000000000)) ?
	       w1__h42335 :
	       w2__h42337 ;
  assign new_st_val_64__h43730 =
	     ((IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1120 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ^
	       64'h8000000000000000)) ?
	       w2__h42337 :
	       w1__h42335 ;
  assign new_st_val_64__h57774 = { 32'd0, _theResult_____2__h57768[31:0] } ;
  assign new_st_val_64__h57846 =
	     IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1872 +
	     IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ;
  assign new_st_val_64__h59687 = w1__h57735 ^ w2__h42337 ;
  assign new_st_val_64__h59691 = w1__h57735 & w2__h42337 ;
  assign new_st_val_64__h59695 = w1__h57735 | w2__h42337 ;
  assign new_st_val_64__h59699 =
	     (w1__h57735 < w2__h42337) ? w1__h57735 : w2__h42337 ;
  assign new_st_val_64__h59704 =
	     (w1__h57735 <= w2__h42337) ? w2__h42337 : w1__h57735 ;
  assign new_st_val_64__h59710 =
	     ((IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1872 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ^
	       64'h8000000000000000)) ?
	       w1__h57735 :
	       w2__h42337 ;
  assign new_st_val_64__h59715 =
	     ((IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1872 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_84_EQ_0b10_33_THEN_SEXT_ETC___d1122 ^
	       64'h8000000000000000)) ?
	       w2__h42337 :
	       w1__h57735 ;
  assign pa___1__h9478 = { 8'd0, x__h9481 } ;
  assign pa___1__h9527 = { 8'd0, x__h9530 } ;
  assign pa___1__h9596 = { 8'd0, x__h9599 } ;
  assign pte___1__h9745 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9773 =
	     { pte___2__h9470[63:8], 1'd1, pte___2__h9470[6:0] } ;
  assign pte___2__h9470 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9745 ;
  assign q12328_BITS_31_TO_0__q49 = q1__h42328[31:0] ;
  assign q17728_BITS_31_TO_0__q84 = q1__h57728[31:0] ;
  assign req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d1999 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d2004 =
	     (req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d1999 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign result__h10738 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:0] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d887 ;
  assign result__h10740 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:64] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d891 ;
  assign result__h36224 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d747 ;
  assign result__h36262 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d751 ;
  assign result__h36295 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d755 ;
  assign result__h36328 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d759 ;
  assign result__h36361 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d763 ;
  assign result__h36394 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d767 ;
  assign result__h36427 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d771 ;
  assign result__h36460 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d775 ;
  assign result__h36493 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d779 ;
  assign result__h36526 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d783 ;
  assign result__h36559 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d787 ;
  assign result__h36592 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d791 ;
  assign result__h36625 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d795 ;
  assign result__h36658 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d799 ;
  assign result__h36691 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d803 ;
  assign result__h36724 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d807 ;
  assign result__h36779 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d827 ;
  assign result__h36812 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d831 ;
  assign result__h36845 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d835 ;
  assign result__h36878 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d839 ;
  assign result__h36911 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d843 ;
  assign result__h36944 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d847 ;
  assign result__h36977 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d851 ;
  assign result__h37010 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d855 ;
  assign result__h37057 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d867 ;
  assign result__h37090 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d871 ;
  assign result__h37123 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d875 ;
  assign result__h37156 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d879 ;
  assign result__h55128 =
	     cache_rg_is_unsigned ?
	       word128__h55021 :
	       { {64{cache_rg_lower_word64$D_IN[63]}},
		 cache_rg_lower_word64$D_IN } ;
  assign result__h55166 =
	     cache_rg_is_unsigned ?
	       { 120'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 } ;
  assign result__h55202 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 } ;
  assign result__h55235 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 } ;
  assign result__h55268 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 } ;
  assign result__h55301 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 } ;
  assign result__h55334 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 } ;
  assign result__h55367 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 } ;
  assign result__h55400 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 } ;
  assign result__h55463 =
	     cache_rg_is_unsigned ?
	       { 112'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 } ;
  assign result__h55496 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q1 } ;
  assign result__h55529 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 } ;
  assign result__h55562 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 } ;
  assign result__h55613 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 } ;
  assign result__h55646 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 } ;
  assign result__h57977 =
	     { {120{word1287902_BITS_7_TO_0__q54[7]}},
	       word1287902_BITS_7_TO_0__q54 } ;
  assign result__h58674 =
	     { {120{word1287902_BITS_15_TO_8__q58[7]}},
	       word1287902_BITS_15_TO_8__q58 } ;
  assign result__h58706 =
	     { {120{word1287902_BITS_23_TO_16__q59[7]}},
	       word1287902_BITS_23_TO_16__q59 } ;
  assign result__h58738 =
	     { {120{word1287902_BITS_31_TO_24__q61[7]}},
	       word1287902_BITS_31_TO_24__q61 } ;
  assign result__h58770 =
	     { {120{word1287902_BITS_39_TO_32__q62[7]}},
	       word1287902_BITS_39_TO_32__q62 } ;
  assign result__h58802 =
	     { {120{word1287902_BITS_47_TO_40__q65[7]}},
	       word1287902_BITS_47_TO_40__q65 } ;
  assign result__h58834 =
	     { {120{word1287902_BITS_55_TO_48__q66[7]}},
	       word1287902_BITS_55_TO_48__q66 } ;
  assign result__h58866 =
	     { {120{word1287902_BITS_63_TO_56__q68[7]}},
	       word1287902_BITS_63_TO_56__q68 } ;
  assign result__h58898 =
	     { {120{word1287902_BITS_71_TO_64__q69[7]}},
	       word1287902_BITS_71_TO_64__q69 } ;
  assign result__h58930 =
	     { {120{word1287902_BITS_79_TO_72__q73[7]}},
	       word1287902_BITS_79_TO_72__q73 } ;
  assign result__h58962 =
	     { {120{word1287902_BITS_87_TO_80__q74[7]}},
	       word1287902_BITS_87_TO_80__q74 } ;
  assign result__h58994 =
	     { {120{word1287902_BITS_95_TO_88__q76[7]}},
	       word1287902_BITS_95_TO_88__q76 } ;
  assign result__h59026 =
	     { {120{word1287902_BITS_103_TO_96__q77[7]}},
	       word1287902_BITS_103_TO_96__q77 } ;
  assign result__h59058 =
	     { {120{word1287902_BITS_111_TO_104__q80[7]}},
	       word1287902_BITS_111_TO_104__q80 } ;
  assign result__h59090 =
	     { {120{word1287902_BITS_119_TO_112__q82[7]}},
	       word1287902_BITS_119_TO_112__q82 } ;
  assign result__h59122 =
	     { {120{word1287902_BITS_127_TO_120__q83[7]}},
	       word1287902_BITS_127_TO_120__q83 } ;
  assign result__h59176 =
	     { {112{word1287902_BITS_15_TO_0__q55[15]}},
	       word1287902_BITS_15_TO_0__q55 } ;
  assign result__h59208 =
	     { {112{word1287902_BITS_31_TO_16__q60[15]}},
	       word1287902_BITS_31_TO_16__q60 } ;
  assign result__h59240 =
	     { {112{word1287902_BITS_47_TO_32__q63[15]}},
	       word1287902_BITS_47_TO_32__q63 } ;
  assign result__h59272 =
	     { {112{word1287902_BITS_63_TO_48__q67[15]}},
	       word1287902_BITS_63_TO_48__q67 } ;
  assign result__h59304 =
	     { {112{word1287902_BITS_79_TO_64__q70[15]}},
	       word1287902_BITS_79_TO_64__q70 } ;
  assign result__h59336 =
	     { {112{word1287902_BITS_95_TO_80__q75[15]}},
	       word1287902_BITS_95_TO_80__q75 } ;
  assign result__h59368 =
	     { {112{word1287902_BITS_111_TO_96__q78[15]}},
	       word1287902_BITS_111_TO_96__q78 } ;
  assign result__h59400 =
	     { {112{word1287902_BITS_127_TO_112__q81[15]}},
	       word1287902_BITS_127_TO_112__q81 } ;
  assign result__h59446 =
	     { {96{word1287902_BITS_31_TO_0__q56[31]}},
	       word1287902_BITS_31_TO_0__q56 } ;
  assign result__h59478 =
	     { {96{word1287902_BITS_63_TO_32__q64[31]}},
	       word1287902_BITS_63_TO_32__q64 } ;
  assign result__h59510 =
	     { {96{word1287902_BITS_95_TO_64__q71[31]}},
	       word1287902_BITS_95_TO_64__q71 } ;
  assign result__h59542 =
	     { {96{word1287902_BITS_127_TO_96__q79[31]}},
	       word1287902_BITS_127_TO_96__q79 } ;
  assign result__h59596 =
	     { {64{word1287902_BITS_63_TO_0__q57[63]}},
	       word1287902_BITS_63_TO_0__q57 } ;
  assign result__h59625 =
	     { {64{word1287902_BITS_127_TO_64__q72[63]}},
	       word1287902_BITS_127_TO_64__q72 } ;
  assign satp_pa__h4621 = { 8'd0, x__h7815 } ;
  assign shift_bits__h5700 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h6002 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6006 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6010 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h6014 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h50589 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h50590 = tmp__h50589 + 2'd1 ;
  assign value__h9790 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h49195 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h48121 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h47056 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w1___1__h42523 = { 32'd0, q1__h42328[31:0] } ;
  assign w1___1__h57813 = { 32'd0, q1__h57728[31:0] } ;
  assign w1__h42335 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h42523 :
	       q1__h42328[63:0] ;
  assign w1__h57735 =
	     (cache_rg_width_code == 3'b010) ?
	       w1___1__h57813 :
	       q1__h57728[63:0] ;
  assign w2__h42337 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word1287902_BITS_103_TO_96__q77 = word128__h57902[103:96] ;
  assign word1287902_BITS_111_TO_104__q80 = word128__h57902[111:104] ;
  assign word1287902_BITS_111_TO_96__q78 = word128__h57902[111:96] ;
  assign word1287902_BITS_119_TO_112__q82 = word128__h57902[119:112] ;
  assign word1287902_BITS_127_TO_112__q81 = word128__h57902[127:112] ;
  assign word1287902_BITS_127_TO_120__q83 = word128__h57902[127:120] ;
  assign word1287902_BITS_127_TO_64__q72 = word128__h57902[127:64] ;
  assign word1287902_BITS_127_TO_96__q79 = word128__h57902[127:96] ;
  assign word1287902_BITS_15_TO_0__q55 = word128__h57902[15:0] ;
  assign word1287902_BITS_15_TO_8__q58 = word128__h57902[15:8] ;
  assign word1287902_BITS_23_TO_16__q59 = word128__h57902[23:16] ;
  assign word1287902_BITS_31_TO_0__q56 = word128__h57902[31:0] ;
  assign word1287902_BITS_31_TO_16__q60 = word128__h57902[31:16] ;
  assign word1287902_BITS_31_TO_24__q61 = word128__h57902[31:24] ;
  assign word1287902_BITS_39_TO_32__q62 = word128__h57902[39:32] ;
  assign word1287902_BITS_47_TO_32__q63 = word128__h57902[47:32] ;
  assign word1287902_BITS_47_TO_40__q65 = word128__h57902[47:40] ;
  assign word1287902_BITS_55_TO_48__q66 = word128__h57902[55:48] ;
  assign word1287902_BITS_63_TO_0__q57 = word128__h57902[63:0] ;
  assign word1287902_BITS_63_TO_32__q64 = word128__h57902[63:32] ;
  assign word1287902_BITS_63_TO_48__q67 = word128__h57902[63:48] ;
  assign word1287902_BITS_63_TO_56__q68 = word128__h57902[63:56] ;
  assign word1287902_BITS_71_TO_64__q69 = word128__h57902[71:64] ;
  assign word1287902_BITS_79_TO_64__q70 = word128__h57902[79:64] ;
  assign word1287902_BITS_79_TO_72__q73 = word128__h57902[79:72] ;
  assign word1287902_BITS_7_TO_0__q54 = word128__h57902[7:0] ;
  assign word1287902_BITS_87_TO_80__q74 = word128__h57902[87:80] ;
  assign word1287902_BITS_95_TO_64__q71 = word128__h57902[95:64] ;
  assign word1287902_BITS_95_TO_80__q75 = word128__h57902[95:80] ;
  assign word1287902_BITS_95_TO_88__q76 = word128__h57902[95:88] ;
  assign word128__h55021 =
	     { 64'd0, cache_master_xactor_shim_rff_rv$port1__read[67:4] } ;
  assign word128__h57902 =
	     cache_rg_lower_word64_full ? b__h51840 : x__h55155 ;
  assign word64__h6001 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5700 ;
  assign x1_avValue_exc_code__h9002 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign x1_avValue_pa__h9001 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x__h10792 = cache_ram_word128_set$DOB[128:0] & y__h10814 ;
  assign x__h42482 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h42484 :
	       _theResult_____2__h42478 ;
  assign x__h48217 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h57763 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h57769 ;
  assign x__h57772 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h57774 :
	       _theResult_____2__h57768 ;
  assign x__h7815 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9481 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9530 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9599 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10793 = cache_ram_word128_set$DOB[257:129] & y__h23510 ;
  assign y__h10814 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d274}} ;
  assign y__h23510 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280}} ;
  assign y__h9278 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5677 = 8'd0;
      3'b100: fabric_2_strb__h5677 = 8'b11111111;
      default: fabric_2_strb__h5677 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: x__h41649 = 128'd1;
      default: x__h41649 = 128'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h6021 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h6021 = 3'b011;
      default: _theResult___snd_snd_fst_val__h6021 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h56943 = cache_rg_width_code;
      default: size_val__h56943 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9478 or pa___1__h9527 or pa___1__h9596)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9472 = pa___1__h9478;
      2'd1: _theResult___fst__h9472 = pa___1__h9527;
      2'd2: _theResult___fst__h9472 = pa___1__h9596;
      2'd3: _theResult___fst__h9472 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h6002 or
	  strobe64__h6006 or strobe64__h6010 or strobe64__h6014)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6080 = strobe64__h6002;
      3'b001: mem_req_wr_data_wstrb__h6080 = strobe64__h6006;
      3'b010: mem_req_wr_data_wstrb__h6080 = strobe64__h6010;
      3'b011: mem_req_wr_data_wstrb__h6080 = strobe64__h6014;
      3'b100: mem_req_wr_data_wstrb__h6080 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6080 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h6001)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6079 = word64__h6001;
      default: mem_req_wr_data_wdata__h6079 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280 or
	  cache_ram_word128_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__69_BITS__ETC___d280)
      1'd0: new_word128__h38530 = cache_ram_word128_set$DOB[127:0];
      1'd1: new_word128__h38530 = cache_ram_word128_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 or
	  cache_rg_priv_65_ULE_0b1___d166 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_84_EQ_0_85_OR_cache_rg__ETC___d367 =
	      !cache_rg_priv_65_ULE_0b1___d166 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_84_EQ_0_85_OR_cache_rg__ETC___d367 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d322 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
      4'd15:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d322 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d332 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d332 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d338 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d338 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d322 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d332 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d338 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d342)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d322;
      3'd1:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d332;
      3'b010:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_O_ETC___d338;
      3'd3:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d342;
      default: IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d316 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 =
	      IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_84_EQ_0_85_THEN_IF_cach_ETC___d349;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d438 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d439 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17;
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d439 =
		   NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d438;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d428 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d429 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17;
      4'd15:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d429 =
	      NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d428;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d444 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d445 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q17;
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d445 =
		   NOT_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_r_ETC___d444;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317 or
	  cache_rg_priv_65_ULE_0b1___d166 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d429 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d439 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d445 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d449 or
	  cache_rg_width_code_84_EQ_0b100_43_OR_cache_rg_ETC___d451)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
	      (!cache_rg_priv_65_ULE_0b1___d166 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d429;
      3'd1:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
	      (!cache_rg_priv_65_ULE_0b1___d166 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d439;
      3'b010:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
	      (!cache_rg_priv_65_ULE_0b1___d166 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d445;
      3'd3:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
	      (!cache_rg_priv_65_ULE_0b1___d166 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d449;
      3'b100:
	  IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
	      cache_rg_width_code_84_EQ_0b100_43_OR_cache_rg_ETC___d451;
      default: IF_cache_rg_width_code_84_EQ_0_85_THEN_NOT_cac_ETC___d456 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__69_B_ETC___d317;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d887 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d891)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h43611 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d887;
      4'h8:
	  _theResult___fst__h43611 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d891;
      default: _theResult___fst__h43611 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h10738 or result__h10740)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h10736 = result__h10738;
      4'h8: _theResult___fst__h10736 = result__h10740;
      default: _theResult___fst__h10736 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d867 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d871 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d875 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d879)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d867;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d871;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d875;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d879;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h37057 or
	  result__h37090 or result__h37123 or result__h37156)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 =
	      result__h37057;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 =
	      result__h37090;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 =
	      result__h37123;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 =
	      result__h37156;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d827 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d831 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d835 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d839 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d843 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d847 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d851 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d855)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d827;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d831;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d835;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d839;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d843;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d847;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d851;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d855;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h36779 or
	  result__h36812 or
	  result__h36845 or
	  result__h36878 or
	  result__h36911 or
	  result__h36944 or result__h36977 or result__h37010)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36779;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36812;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36845;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36878;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36911;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36944;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h36977;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
	      result__h37010;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d747 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d751 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d755 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d759 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d763 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d767 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d771 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d775 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d779 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d783 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d787 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d791 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d795 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d799 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d803 or
	  SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d807)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d747;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d751;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d755;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d759;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d763;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d767;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d771;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d775;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d779;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d783;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d787;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d791;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d795;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d799;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d803;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 =
	      SEXT_cache_ram_word128_set_b_read__94_BITS_128_ETC___d807;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985 or
	  _theResult___fst__h43611 or
	  cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h42328 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d973;
      3'd1:
	  q1__h42328 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d981;
      3'b010:
	  q1__h42328 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d985;
      3'd3: q1__h42328 = _theResult___fst__h43611;
      3'b100:
	  q1__h42328 =
	      cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:0];
      default: q1__h42328 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h36224 or
	  result__h36262 or
	  result__h36295 or
	  result__h36328 or
	  result__h36361 or
	  result__h36394 or
	  result__h36427 or
	  result__h36460 or
	  result__h36493 or
	  result__h36526 or
	  result__h36559 or
	  result__h36592 or
	  result__h36625 or
	  result__h36658 or result__h36691 or result__h36724)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36224;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36262;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36295;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36328;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36361;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36394;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36427;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36460;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36493;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36526;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36559;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36592;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36625;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36658;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36691;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 =
	      result__h36724;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884 or
	  _theResult___fst__h10736 or
	  cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h36213 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d824;
      3'd1:
	  x__h36213 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d864;
      3'b010:
	  x__h36213 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d884;
      3'd3: x__h36213 = _theResult___fst__h10736;
      3'b100:
	  x__h36213 =
	      cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740[127:0];
      default: x__h36213 = 128'd0;
    endcase
  end
  always@(x1_avValue_pa__h9001 or new_word128__h38530 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 =
	      { new_word128__h38530[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 =
	      { new_word128__h38530[127:64],
		cache_rg_st_amo_val[31:0],
		new_word128__h38530[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 =
	      { new_word128__h38530[127:96],
		cache_rg_st_amo_val[31:0],
		new_word128__h38530[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 =
	      { cache_rg_st_amo_val[31:0], new_word128__h38530[95:0] };
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 =
		   new_word128__h38530;
    endcase
  end
  always@(x1_avValue_pa__h9001 or new_word128__h38530 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:32],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:48],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:64],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:80],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:96],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { new_word128__h38530[127:112],
		cache_rg_st_amo_val[15:0],
		new_word128__h38530[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
	      { cache_rg_st_amo_val[15:0], new_word128__h38530[111:0] };
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 =
		   new_word128__h38530;
    endcase
  end
  always@(x1_avValue_pa__h9001 or new_word128__h38530 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:16],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:24],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:32],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:40],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:48],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:56],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:64],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:72],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:80],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:88],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:96],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:104],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:112],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { new_word128__h38530[127:120],
		cache_rg_st_amo_val[7:0],
		new_word128__h38530[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 =
	      { cache_rg_st_amo_val[7:0], new_word128__h38530[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9001 or new_word128__h38530 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48 =
	      { new_word128__h38530[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48 =
	      { cache_rg_st_amo_val[63:0], new_word128__h38530[63:0] };
      default: CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48 =
		   new_word128__h38530;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38530 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099 or
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h38548 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1073;
      3'd1:
	  b__h38548 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1090;
      3'b010:
	  b__h38548 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1099;
      3'd3:
	  b__h38548 = CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q48;
      3'b100: b__h38548 = cache_rg_st_amo_val[127:0];
      default: b__h38548 = new_word128__h38530;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h43730 or
	  new_st_val_64__h42556 or
	  w2__h42337 or
	  new_st_val_64__h43702 or
	  new_st_val_64__h43710 or
	  new_st_val_64__h43706 or
	  new_st_val_64__h43725 or
	  new_st_val_64__h43714 or new_st_val_64__h43719)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h42478 = new_st_val_64__h42556;
      5'b00001: _theResult_____2__h42478 = w2__h42337;
      5'b00100: _theResult_____2__h42478 = new_st_val_64__h43702;
      5'b01000: _theResult_____2__h42478 = new_st_val_64__h43710;
      5'b01100: _theResult_____2__h42478 = new_st_val_64__h43706;
      5'b10000: _theResult_____2__h42478 = new_st_val_64__h43725;
      5'b11000: _theResult_____2__h42478 = new_st_val_64__h43714;
      5'b11100: _theResult_____2__h42478 = new_st_val_64__h43719;
      default: _theResult_____2__h42478 = new_st_val_64__h43730;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  new_word128__h38530 or
	  IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 =
	      { new_word128__h38530[127:32],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 =
	      { new_word128__h38530[127:64],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[31:0],
		new_word128__h38530[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 =
	      { new_word128__h38530[127:96],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[31:0],
		new_word128__h38530[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 =
	      { IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[31:0],
		new_word128__h38530[95:0] };
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 =
		   new_word128__h38530;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  new_word128__h38530 or
	  IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:16],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:32],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:48],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:64],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:80],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:96],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { new_word128__h38530[127:112],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
	      { IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[15:0],
		new_word128__h38530[111:0] };
      default: IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 =
		   new_word128__h38530;
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  new_word128__h38530 or
	  IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:8],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:16],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:24],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:32],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:40],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:48],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:56],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:64],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:72],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:80],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:88],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:96],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:104],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:112],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { new_word128__h38530[127:120],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 =
	      { IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[7:0],
		new_word128__h38530[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h9001 or
	  new_word128__h38530 or
	  IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150)
  begin
    case (x1_avValue_pa__h9001[3:0])
      4'h0:
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51 =
	      { new_word128__h38530[127:64],
		IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[63:0] };
      4'h8:
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51 =
	      { IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150[63:0],
		new_word128__h38530[63:0] };
      default: CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51 =
		   new_word128__h38530;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h38530 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200 or
	  IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209 or
	  CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51 or
	  IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h42267 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1183;
      3'd1:
	  b__h42267 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1200;
      3'b010:
	  b__h42267 =
	      IF_IF_cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_ETC___d1209;
      3'd3:
	  b__h42267 = CASE_x1_avValue_pa001_BITS_3_TO_0_0x0_new_word_ETC__q51;
      3'b100:
	  b__h42267 =
	      IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150;
      default: b__h42267 = new_word128__h38530;
    endcase
  end
  always@(cache_rg_addr or
	  result__h55166 or
	  result__h55202 or
	  result__h55235 or
	  result__h55268 or
	  result__h55301 or
	  result__h55334 or result__h55367 or result__h55400)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55166;
      3'd1:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55202;
      3'd2:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55235;
      3'd3:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55268;
      3'd4:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55301;
      3'd5:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55334;
      3'd6:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55367;
      3'd7:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 =
	      result__h55400;
    endcase
  end
  always@(cache_rg_addr or
	  result__h55463 or
	  result__h55496 or result__h55529 or result__h55562)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 =
	      result__h55463;
      3'd2:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 =
	      result__h55496;
      3'd4:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 =
	      result__h55529;
      3'd6:
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 =
	      result__h55562;
      default: IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h55613 or result__h55646)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53 =
	      result__h55613;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53 =
	      result__h55646;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53 =
		   128'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660 or
	  IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53 or
	  _theResult___fst__h55126 or word128__h55021)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h55155 =
	      IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1660;
      3'd1:
	  x__h55155 =
	      IF_cache_rg_addr_76_BITS_2_TO_0_612_EQ_0_613_T_ETC___d1680;
      3'b010:
	  x__h55155 = CASE_cache_rg_addr_BITS_2_TO_0_0_result5613_4__ETC__q53;
      3'd3: x__h55155 = _theResult___fst__h55126;
      3'b100: x__h55155 = word128__h55021;
      default: x__h55155 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h59596 or result__h59625)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h59594 = result__h59596;
      4'h8: _theResult___fst__h59594 = result__h59625;
      default: _theResult___fst__h59594 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h59446 or
	  result__h59478 or result__h59510 or result__h59542)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 =
	      result__h59446;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 =
	      result__h59478;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 =
	      result__h59510;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 =
	      result__h59542;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h59176 or
	  result__h59208 or
	  result__h59240 or
	  result__h59272 or
	  result__h59304 or
	  result__h59336 or result__h59368 or result__h59400)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59176;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59208;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59240;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59272;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59304;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59336;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59368;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
	      result__h59400;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h57977 or
	  result__h58674 or
	  result__h58706 or
	  result__h58738 or
	  result__h58770 or
	  result__h58802 or
	  result__h58834 or
	  result__h58866 or
	  result__h58898 or
	  result__h58930 or
	  result__h58962 or
	  result__h58994 or
	  result__h59026 or
	  result__h59058 or result__h59090 or result__h59122)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h57977;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58674;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58706;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58738;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58770;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58802;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58834;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58866;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58898;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58930;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58962;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h58994;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h59026;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h59058;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h59090;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 =
	      result__h59122;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857 or
	  _theResult___fst__h59594 or word128__h57902)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h57728 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1821;
      3'd1:
	  q1__h57728 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1845;
      3'b010:
	  q1__h57728 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_86_EQ_0x0_87_T_ETC___d1857;
      3'd3: q1__h57728 = _theResult___fst__h59594;
      3'b100: q1__h57728 = word128__h57902;
      default: q1__h57728 = 128'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h59715 or
	  new_st_val_64__h57846 or
	  w2__h42337 or
	  new_st_val_64__h59687 or
	  new_st_val_64__h59695 or
	  new_st_val_64__h59691 or
	  new_st_val_64__h59710 or
	  new_st_val_64__h59699 or new_st_val_64__h59704)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h57768 = new_st_val_64__h57846;
      5'b00001: _theResult_____2__h57768 = w2__h42337;
      5'b00100: _theResult_____2__h57768 = new_st_val_64__h59687;
      5'b01000: _theResult_____2__h57768 = new_st_val_64__h59695;
      5'b01100: _theResult_____2__h57768 = new_st_val_64__h59691;
      5'b10000: _theResult_____2__h57768 = new_st_val_64__h59710;
      5'b11000: _theResult_____2__h57768 = new_st_val_64__h59699;
      5'b11100: _theResult_____2__h57768 = new_st_val_64__h59704;
      default: _theResult_____2__h57768 = new_st_val_64__h59715;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_commit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 7'd42;
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    75'h2AAAAAAAAAAAAAAAAAA;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_commit$EN)
	  cache_crg_commit <= `BSV_ASSIGNMENT_DELAY cache_crg_commit$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_commit = 1'h0;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 7'h2A;
    cache_master_xactor_shim_rff_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5985);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h6021, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6079);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6080);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5812, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7445 = $stime;
	  #0;
	end
    v__h7439 = v__h7445 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7439,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7544 = $stime;
	  #0;
	end
    v__h7538 = v__h7544 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7538, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7695 = $stime;
	  #0;
	end
    v__h7689 = v__h7695 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7689,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4621,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d511)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d514)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_65_ULE_0b1___d166 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_exc_code__h9002);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d239)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9790, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", x1_avValue_exc_code__h9002);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", value__h9790, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_65_ULE_0b1_66_AND_cache_rg_satp__ETC___d533 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d578)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d916)
	begin
	  v__h37340 = $stime;
	  #0;
	end
    v__h37334 = v__h37340 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d916)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h37334,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d930)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d916)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d936)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d945)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1238)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_65_ULE_0b1___d166 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1245)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1253)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1259)
	$display("        AMO SC result = %0d", lrsc_result__h37730);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9001,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1112);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1266)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1273)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h9001,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1280)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1280)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1287)
	begin
	  v__h41867 = $stime;
	  #0;
	end
    v__h41861 = v__h41867 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1287)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h41861,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1287)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1295)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$display("          PA 0x%0h ", x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740,
		 cache_ram_word128_set_b_read__94_BITS_128_TO_0_ETC___d740,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_84_EQ_0b100_43_THEN_cac_ETC___d1150 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__6_ETC___d1222);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__69_BI_ETC___d1221);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1301)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1308)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h9001);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_65_ULE_0b1_66_67_OR_NOT_cach_ETC___d1317)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47004 = $stime;
	  #0;
	end
    v__h46998 = v__h47004 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h46998,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47274 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h47274);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h47059);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h6908 = $stime;
	  #0;
	end
    v__h6902 = v__h6908 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h6902,
		 "D_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54243 = $stime;
	  #0;
	end
    v__h54237 = v__h54243 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54237,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54483 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h54483);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h56943, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54603 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h54603);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56311 = $stime;
	  #0;
	end
    v__h56305 = v__h56311 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56305,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56399 = $stime;
	  #0;
	end
    v__h56393 = v__h56399 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h56393,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56617 = $stime;
	  #0;
	end
    v__h56611 = v__h56617 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h56611,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56739 = $stime;
	  #0;
	end
    v__h56733 = v__h56739 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h56733,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56970 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h56970);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h56943, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57090 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h57090);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_84_EQ_0_85_OR_cach_ETC___d1589 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h60156 = $stime;
	  #0;
	end
    v__h60150 = v__h60156 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h60150,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60403 = $stime;
	  #0;
	end
    v__h60397 = v__h60403 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h60397,
	       "D_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h60364 = $stime;
	  #0;
	end
    v__h60358 = v__h60364 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h60358,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48090 = $stime;
	  #0;
	end
    v__h48084 = v__h48090 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48084,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47847 = $stime;
	  #0;
	end
    v__h47841 = v__h47847 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h47841,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48268 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h48268);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h48124);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1402)
	begin
	  v__h48413 = $stime;
	  #0;
	end
    v__h48407 = v__h48413 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1402)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h48407,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1414)
	begin
	  v__h48525 = $stime;
	  #0;
	end
    v__h48519 = v__h48525 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1414)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h48519,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1414)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48120);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48019 = $stime;
	  #0;
	end
    v__h48013 = v__h48019 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48013,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5353);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49164 = $stime;
	  #0;
	end
    v__h49158 = v__h49164 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h49158,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48924 = $stime;
	  #0;
	end
    v__h48918 = v__h48924 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h48918,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49342 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h49342);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h49198);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1453)
	begin
	  v__h49599 = $stime;
	  #0;
	end
    v__h49593 = v__h49599 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1453)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h49593,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1453)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h48120);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1459)
	begin
	  v__h49487 = $stime;
	  #0;
	end
    v__h49481 = v__h49487 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__3_ETC___d1459)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h49481,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h49093 = $stime;
	  #0;
	end
    v__h49087 = v__h49093 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49087,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5353);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50076 = $stime;
	  #0;
	end
    v__h50070 = v__h50076 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h50070,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50147 = $stime;
	  #0;
	end
    v__h50141 = v__h50147 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h50141,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9370);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50229 = $stime;
	  #0;
	end
    v__h50223 = v__h50229 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h50223,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h48120);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50005 = $stime;
	  #0;
	end
    v__h49999 = v__h50005 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49999,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5353);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h54836 = $stime;
	  #0;
	end
    v__h54830 = v__h54836 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h54830,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55973 = $stime;
	  #0;
	end
    v__h55967 = v__h55973 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h55967,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h55155 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56087 = $stime;
	  #0;
	end
    v__h56081 = v__h56087 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56081,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h55811 = $stime;
	  #0;
	end
    v__h55805 = v__h55811 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h55805,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h51840 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h56198 = $stime;
	  #0;
	end
    v__h56192 = v__h56198 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56192,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57267 = $stime;
	  #0;
	end
    v__h57261 = v__h57267 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h57261,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57635 = $stime;
	  #0;
	end
    v__h57629 = v__h57635 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h57629,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h59846 = $stime;
	  #0;
	end
    v__h59840 = v__h59846 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h59840,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, q1__h57728 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h57563 = $stime;
	  #0;
	end
    v__h57557 = v__h57563 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h57557,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h60794 = $stime;
	  #0;
	end
    v__h60788 = v__h60794 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h60788);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req &&
	  req_width_code_EQ_0b0_963_OR_req_width_code_EQ_ETC___d2004)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50364 = $stime;
	  #0;
	end
    v__h50358 = v__h50364 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h50358, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h50532 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h50532);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h50417);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h50590[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	begin
	  v__h51380 = $stime;
	  #0;
	end
    v__h51374 = v__h51380 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h51374,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h51622 = $stime;
	  #0;
	end
    v__h51616 = v__h51622 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h51616,
		 "D_MMU_Cache",
		 access_exc_code__h5353);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_word128_set_in_cache[7:2],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_word128_set_in_cache[7:2],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_504_THEN_cache_ram_word_ETC___d1573);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_504_THEN_cache_master_x_ETC___d1574);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_513___d1514)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h62383 = $stime;
	  #0;
	end
    v__h62377 = v__h62383 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h62377, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

