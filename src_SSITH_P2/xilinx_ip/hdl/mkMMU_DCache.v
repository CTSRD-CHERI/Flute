//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1
// mem_master_awid                O     4
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     4
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     4
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     4
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_req -> RDY_server_flush_request_put
//   EN_req -> RDY_tlb_flush
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [3 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [3 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [3 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [3 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arid,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awid,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [97 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [71 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [10 : 0] cache_crg_sb_to_load_delay$port0__write_1,
		cache_crg_sb_to_load_delay$port2__read;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [5 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_commit$port2__read,
       cache_crg_sb_to_load_delay$EN_port1__write,
       cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_commit
  reg cache_crg_commit;
  wire cache_crg_commit$D_IN, cache_crg_commit$EN;

  // register cache_crg_sb_to_load_delay
  reg [10 : 0] cache_crg_sb_to_load_delay;
  wire [10 : 0] cache_crg_sb_to_load_delay$D_IN;
  wire cache_crg_sb_to_load_delay$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [97 : 0] cache_master_xactor_shim_arff_rv;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [97 : 0] cache_master_xactor_shim_awff_rv;
  wire [97 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [6 : 0] cache_master_xactor_shim_bff_rv;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [72 : 0] cache_master_xactor_shim_rff_rv;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [52 : 0] cache_ram_state_and_ctag_cset$DIA,
		cache_ram_state_and_ctag_cset$DIB,
		cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [128 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [128 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [97 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [52 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_2,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_10,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_7,
	       MUX_cache_rg_state$write_1__VAL_8,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_dw_valid$wset_1__VAL_1,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_4,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_lrsc_valid$write_1__VAL_2,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7316;
  reg [31 : 0] v__h7417;
  reg [31 : 0] v__h7853;
  reg [31 : 0] v__h24329;
  reg [31 : 0] v__h29096;
  reg [31 : 0] v__h34441;
  reg [63 : 0] v__h34711;
  reg [31 : 0] v__h6884;
  reg [31 : 0] v__h40659;
  reg [63 : 0] v__h40899;
  reg [63 : 0] v__h41019;
  reg [31 : 0] v__h42776;
  reg [31 : 0] v__h42864;
  reg [31 : 0] v__h43082;
  reg [31 : 0] v__h43204;
  reg [63 : 0] v__h43435;
  reg [63 : 0] v__h43555;
  reg [31 : 0] v__h46723;
  reg [31 : 0] v__h46970;
  reg [31 : 0] v__h46931;
  reg [31 : 0] v__h35527;
  reg [31 : 0] v__h35284;
  reg [63 : 0] v__h35705;
  reg [31 : 0] v__h35850;
  reg [31 : 0] v__h35962;
  reg [31 : 0] v__h35456;
  reg [31 : 0] v__h36601;
  reg [31 : 0] v__h36361;
  reg [63 : 0] v__h36779;
  reg [31 : 0] v__h37036;
  reg [31 : 0] v__h36924;
  reg [31 : 0] v__h36530;
  reg [31 : 0] v__h37513;
  reg [31 : 0] v__h37584;
  reg [31 : 0] v__h37666;
  reg [31 : 0] v__h37442;
  reg [31 : 0] v__h41252;
  reg [31 : 0] v__h42438;
  reg [31 : 0] v__h42552;
  reg [31 : 0] v__h42276;
  reg [31 : 0] v__h42663;
  reg [31 : 0] v__h43732;
  reg [31 : 0] v__h44102;
  reg [31 : 0] v__h46413;
  reg [31 : 0] v__h44030;
  reg [31 : 0] v__h47360;
  reg [31 : 0] v__h37801;
  reg [63 : 0] v__h37969;
  reg [31 : 0] v__h38607;
  reg [31 : 0] v__h38849;
  reg [31 : 0] v__h48746;
  reg [31 : 0] v__h42546;
  reg [31 : 0] v__h6878;
  reg [31 : 0] v__h7310;
  reg [31 : 0] v__h7411;
  reg [31 : 0] v__h7847;
  reg [31 : 0] v__h24323;
  reg [31 : 0] v__h29090;
  reg [31 : 0] v__h34435;
  reg [31 : 0] v__h35278;
  reg [31 : 0] v__h35450;
  reg [31 : 0] v__h35521;
  reg [31 : 0] v__h35844;
  reg [31 : 0] v__h35956;
  reg [31 : 0] v__h36355;
  reg [31 : 0] v__h36524;
  reg [31 : 0] v__h36595;
  reg [31 : 0] v__h36918;
  reg [31 : 0] v__h37030;
  reg [31 : 0] v__h37436;
  reg [31 : 0] v__h37507;
  reg [31 : 0] v__h37578;
  reg [31 : 0] v__h37660;
  reg [31 : 0] v__h37795;
  reg [31 : 0] v__h38601;
  reg [31 : 0] v__h38843;
  reg [31 : 0] v__h40653;
  reg [31 : 0] v__h41246;
  reg [31 : 0] v__h42270;
  reg [31 : 0] v__h42432;
  reg [31 : 0] v__h42657;
  reg [31 : 0] v__h42770;
  reg [31 : 0] v__h42858;
  reg [31 : 0] v__h43076;
  reg [31 : 0] v__h43198;
  reg [31 : 0] v__h43726;
  reg [31 : 0] v__h44024;
  reg [31 : 0] v__h44096;
  reg [31 : 0] v__h46407;
  reg [31 : 0] v__h46717;
  reg [31 : 0] v__h46925;
  reg [31 : 0] v__h46964;
  reg [31 : 0] v__h47354;
  reg [31 : 0] v__h48740;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51,
		CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954,
		IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963,
		x__h25673,
		x__h29723;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54,
	       IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504,
	       IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849,
	       IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853,
	       IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710,
	       IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979,
	       _theResult_____2__h29813,
	       _theResult_____2__h44235,
	       _theResult___fst__h9257,
	       _theResult___snd__h10398,
	       _theResult___snd__h46142,
	       _theResult___snd_fst__h23159,
	       _theResult___snd_fst__h28836,
	       _theResult___snd_fst__h41578,
	       _theResult___snd_snd__h23160,
	       _theResult___snd_snd__h44418,
	       mem_req_wr_data_wdata__h6045,
	       w1__h29665,
	       w1__h29670,
	       w1__h44197,
	       w1__h44202;
  reg [7 : 0] fabric_2_strb__h5643, mem_req_wr_data_wstrb__h6046;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5987, size_val__h43408;
  reg CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19,
      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d434,
      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d439,
      IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447,
      IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355;
  wire [128 : 0] IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1099,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620,
		 y__h10455;
  wire [127 : 0] IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614,
		 IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1079,
		 IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009,
		 b__h43980,
		 new_st_val_128__h29814,
		 new_st_val_128__h44236,
		 x__h23158,
		 x__h33991,
		 x__h39070,
		 x__h44230,
		 x__h46391;
  wire [96 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16;
  wire [63 : 0] IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d632,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d636,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d640,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d644,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d648,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d652,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d656,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d660,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d664,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d668,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d672,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d676,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d680,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d684,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d688,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d692,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d712,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d716,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d720,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d724,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d728,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d732,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d736,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d740,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d752,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d756,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d760,
		SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d764,
		_theResult___fst__h8893,
		_theResult___fst__h8964,
		_theResult___snd__h41546,
		_theResult___snd_fst__h8895,
		_theResult___snd_fst__h8966,
		_theResult___snd_fst__h9481,
		cline_fabric_addr__h37854,
		lev_0_pte_pa__h36633,
		lev_0_pte_pa_w64_fa__h36635,
		lev_1_PTN_pa__h35557,
		lev_1_pte_pa__h35559,
		lev_1_pte_pa_w64_fa__h35561,
		lev_2_pte_pa__h34494,
		lev_2_pte_pa_w64_fa__h34496,
		new_st_val_64__h29819,
		new_st_val_64__h29891,
		new_st_val_64__h31088,
		new_st_val_64__h31092,
		new_st_val_64__h31096,
		new_st_val_64__h31100,
		new_st_val_64__h31105,
		new_st_val_64__h31111,
		new_st_val_64__h31116,
		new_st_val_64__h44241,
		new_st_val_64__h44313,
		new_st_val_64__h46254,
		new_st_val_64__h46258,
		new_st_val_64__h46262,
		new_st_val_64__h46266,
		new_st_val_64__h46271,
		new_st_val_64__h46277,
		new_st_val_64__h46282,
		pa___1__h9263,
		pa___1__h9312,
		pa___1__h9381,
		pte___1__h9530,
		pte___1__h9558,
		pte___2__h9255,
		result_lo__h23197,
		result_lo__h23232,
		result_lo__h23265,
		result_lo__h23298,
		result_lo__h23331,
		result_lo__h23364,
		result_lo__h23397,
		result_lo__h23430,
		result_lo__h23463,
		result_lo__h23496,
		result_lo__h23529,
		result_lo__h23562,
		result_lo__h23595,
		result_lo__h23628,
		result_lo__h23661,
		result_lo__h23694,
		result_lo__h23749,
		result_lo__h23782,
		result_lo__h23815,
		result_lo__h23848,
		result_lo__h23881,
		result_lo__h23914,
		result_lo__h23947,
		result_lo__h23980,
		result_lo__h24027,
		result_lo__h24060,
		result_lo__h24093,
		result_lo__h24126,
		result_lo__h41615,
		result_lo__h41648,
		result_lo__h41681,
		result_lo__h41714,
		result_lo__h41747,
		result_lo__h41780,
		result_lo__h41813,
		result_lo__h41846,
		result_lo__h41909,
		result_lo__h41942,
		result_lo__h41975,
		result_lo__h42008,
		result_lo__h42059,
		result_lo__h42092,
		result_lo__h45189,
		result_lo__h45221,
		result_lo__h45253,
		result_lo__h45285,
		result_lo__h45317,
		result_lo__h45349,
		result_lo__h45381,
		result_lo__h45413,
		result_lo__h45445,
		result_lo__h45477,
		result_lo__h45509,
		result_lo__h45541,
		result_lo__h45573,
		result_lo__h45605,
		result_lo__h45637,
		result_lo__h45669,
		result_lo__h45723,
		result_lo__h45755,
		result_lo__h45787,
		result_lo__h45819,
		result_lo__h45851,
		result_lo__h45883,
		result_lo__h45915,
		result_lo__h45947,
		result_lo__h45993,
		result_lo__h46025,
		result_lo__h46057,
		result_lo__h46089,
		satp_pa__h4610,
		value__h9575,
		vpn_0_pa__h36632,
		vpn_1_pa__h35558,
		vpn_2_pa__h34493,
		w1___1__h29858,
		w1___1__h44280,
		w2__h29672,
		word64__h5967,
		x1_avValue_pa__h8804,
		x__h29817,
		x__h44239;
  wire [55 : 0] x__h35654, x__h7973, x__h9266, x__h9315, x__h9384;
  wire [31 : 0] IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q56,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q64,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q78,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q37,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q38,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q39,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q40,
		cache_rg_st_amo_val_BITS_31_TO_0__q50,
		w14197_BITS_31_TO_0__q83,
		w19665_BITS_31_TO_0__q49;
  wire [15 : 0] IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q57,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q60,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q63,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q67,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q70,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q74,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q77,
		IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q81,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q21,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q23,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q25,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q27,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q29,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q31,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q33,
		cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q35;
  wire [7 : 0] IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q55,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q58,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q59,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q61,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q65,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q66,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q68,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q72,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q73,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q75,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q76,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q79,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q80,
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q82,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q22,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q24,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q26,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q28,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q30,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q32,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q34,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q36,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q41,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q42,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q43,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q44,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q45,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q46,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q47,
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q48,
	       mem_req_wr_addr_awlen__h5951,
	       strobe64__h5968,
	       strobe64__h5972,
	       strobe64__h5976,
	       strobe64__h5980;
  wire [5 : 0] access_exc_code__h5319,
	       exc_code___1__h9155,
	       shift_bits__h5666,
	       x1_avValue_exc_code__h8805,
	       x1_avValue_snd__h34095,
	       y_avValue_snd__h34093;
  wire [4 : 0] IF_NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache__ETC___d1169,
	       IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d1172,
	       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1171,
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1174,
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1175;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d443,
       IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d453,
       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d452,
       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d433,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d438,
       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d442,
       NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374,
       NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516,
       NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d1426,
       NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d466,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1225,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1289,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1332,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1231,
       NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324,
       NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d451,
       NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d532,
       NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122,
       NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1135,
       NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1147,
       NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152,
       NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d233,
       NOT_cache_rg_op_92_EQ_1_57_38_AND_NOT_cache_rg_ETC___d865,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1084,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1092,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1120,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1127,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1133,
       NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d863,
       NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d213,
       NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d497,
       NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d519,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1109,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d220,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d254,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d458,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d806,
       NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819,
       NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238,
       NOT_req_width_code_EQ_0b0_803_804_AND_NOT_req__ETC___d1823,
       _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1264,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1274,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1315,
       cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1321,
       cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289,
       cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d1156,
       cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d533,
       cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d813,
       cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d212,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d547,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d553,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d792,
       cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d808,
       cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1088,
       cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1094,
       cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d545,
       cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d866,
       cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d1140,
       cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d369,
       cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1167,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d241,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d456,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d488,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504,
       cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d524,
       cache_rg_priv_64_ULE_0b1___d165,
       cache_rg_width_code_92_EQ_0b100_49_OR_cache_rg_ETC___d390,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1096,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1162,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d823,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d868,
       cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d203,
       cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d217,
       lrsc_result__h25215,
       mem_req_wr_second_data_wuser__h5778,
       req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1839,
       req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1844,
       y__h9063;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = !EN_req && cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put =
	     !EN_req && cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = !EN_req ;
  assign CAN_FIRE_tlb_flush = !EN_req ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[96:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[6] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[96:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[72] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd53),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd129),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[97] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_shift_sb_to_load_delay
  assign CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;
  assign WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d458 &&
	     NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d466 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d1426 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[6] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[6] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[6] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[72] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[72] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1225 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1289 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1332 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill && !EN_req ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop && !EN_req ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !EN_req && !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq && !EN_req ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d553 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1096 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     EN_req &&
	     (req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1839 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d868 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_803_804_AND_NOT_req__ETC___d1823 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1231 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d823 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d547 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1274 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[128],
		 x__h23158 } :
	       { 65'd0, _theResult___snd_fst__h28836 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       { 65'd0, _theResult___snd_fst__h41578 } :
	       { 1'd0, x__h39070 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h46391 } ;
  assign MUX_cache_dw_valid$wset_1__VAL_1 = EN_commit || cache_crg_commit ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h8804,
	       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1099 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h44230 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 5'd16, lev_1_pte_pa_w64_fa__h35561, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 5'd16, lev_0_pte_pa_w64_fa__h36635, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 5'd16,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 ?
		 { 8'd0, size_val__h43408, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 5'd16, lev_2_pte_pa_w64_fa__h34496, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 5'd16, cline_fabric_addr__h37854, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6045,
	       mem_req_wr_data_wstrb__h6046,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5778 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { 1'd1, cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1079 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     { cache_master_xactor_shim_rff_rv$port1__read[0],
	       cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_2 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       exc_code___1__h9155 :
	       access_exc_code__h5319 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     MUX_cache_dw_valid$wset_1__VAL_1 ?
	       x1_avValue_snd__h34095 :
	       6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h25215 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[128],
		 x__h33991 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;
  assign MUX_cache_rg_lrsc_valid$write_1__VAL_2 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h8893 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h35557 + vpn_1_pa__h35558 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h35557 + vpn_0_pa__h36632 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h4610 + vpn_2_pa__h34493 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009 } ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (NOT_req_width_code_EQ_0b0_803_804_AND_NOT_req__ETC___d1823 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_7 =
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ?
	       ((cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_10 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     MUX_cache_dw_valid$wset_1__VAL_1 ?
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1175 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h8895 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[6] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[72] ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_output_ld_val$wset_1__SEL_1 ||
	     MUX_cache_dw_valid$wset_1__VAL_1 ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d553 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_1 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     mem_master_arready ;
  assign cache_crg_commit$port2__read =
	     !EN_req && MUX_cache_dw_valid$wset_1__VAL_1 ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 5'd16,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5951,
	       _theResult___snd_snd_fst_val__h5987,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   98'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port2__read ;
  assign cache_crg_sb_to_load_delay$port0__write_1 =
	     { 1'd0, cache_crg_sb_to_load_delay[10:1] } ;
  assign cache_crg_sb_to_load_delay$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1088 ;
  assign cache_crg_sb_to_load_delay$port2__read =
	     cache_crg_sb_to_load_delay$EN_port1__write ?
	       11'd2047 :
	       cache_crg_sb_to_load_delay$port0__write_1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_commit
  assign cache_crg_commit$D_IN = cache_crg_commit$port2__read ;
  assign cache_crg_commit$EN = 1'b1 ;

  // register cache_crg_sb_to_load_delay
  assign cache_crg_sb_to_load_delay$D_IN =
	     cache_crg_sb_to_load_delay$port2__read ;
  assign cache_crg_sb_to_load_delay$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = EN_req ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = EN_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__VAL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_exc_code$write_1__SEL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_2;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_4: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'b101010 /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_803_804_AND_NOT_req__ETC___d1823 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1231 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[1] &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = EN_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d823 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_master_xactor_shim_rff_rv$port1__read[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_master_xactor_shim_rff_rv$port1__read or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_master_xactor_shim_rff_rv$port1__read[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d547 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = EN_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = EN_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     EN_req ? req_addr : MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 ||
	     EN_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = EN_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = EN_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = EN_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     EN_req ? req_st_value : MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1162 ||
	     EN_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  EN_req or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  MUX_cache_rg_state$write_1__SEL_6 or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  MUX_cache_rg_state$write_1__SEL_7 or
	  MUX_cache_rg_state$write_1__VAL_7 or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_10 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    EN_req: cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    MUX_cache_rg_state$write_1__SEL_6:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    MUX_cache_rg_state$write_1__SEL_7:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_7;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_10;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] &&
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     EN_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = EN_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5643,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5778 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1096 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_master_xactor_shim_rff_rv$port1__read[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h9575 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_reset_response_get || EN_server_flush_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       53'h0AAAAAAAAAAAAA ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       53'h0AAAAAAAAAAAAA /* unspecified value */  :
	       53'h0AAAAAAAAAAAAA /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d868 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1274 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d443 =
	     (x1_avValue_pa__h8804[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 :
	       NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d442 ;
  assign IF_NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache__ETC___d1169 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614 =
	     cache_rg_lower_word64_full ? x__h39070 : b__h43980 ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[7:0] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[31:0] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[15:0] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[15:8] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[23:16] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[31:16] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[31:24] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[39:32] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[47:32] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:32] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[47:40] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[55:48] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:48] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:56] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[71:64] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[79:64] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[95:64] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[79:72] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[87:80] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[95:80] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[95:88] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[103:96] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q77 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[111:96] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q78 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[127:96] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q79 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[111:104] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q80 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[119:112] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q81 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[127:112] ;
  assign IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q82 =
	     IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[127:120] ;
  assign IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d1172 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       ((cache_ram_state_and_ctag_cset$DOB[52] &&
		 cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) ?
		  cache_rg_state :
		  5'd9) :
	       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1171 ;
  assign IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d453 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ||
	       IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 :
	       IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d452 ;
  assign IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1079 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       x__h25673 :
	       x__h29723 ;
  assign IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1099 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009 } ;
  assign IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d1171 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache__ETC___d1169 :
	       ((!cache_ram_state_and_ctag_cset$DOB[52] ||
		 !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) ?
		  5'd9 :
		  5'd12) ;
  assign IF_cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_ETC___d452 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d369 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d451 ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1174 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1167 ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d1172 :
		  5'd13) ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1175 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d1174 ;
  assign IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 =
	     x1_avValue_pa__h8804 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h29814 ;
  assign IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q50[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q50 } :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424 =
	     x1_avValue_pa__h8804[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d433 =
	     x1_avValue_pa__h8804[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d438 =
	     x1_avValue_pa__h8804[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d442 =
	     x1_avValue_pa__h8804[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d1426 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_60_AND_cac_ETC___d466 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd3 &&
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      cache_crg_sb_to_load_delay$port0__write_1 == 11'd0) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1225 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1289 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1332 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1231 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d451 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ||
	     !MUX_cache_dw_valid$wset_1__VAL_1 ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     cache_rg_width_code_92_EQ_0b100_49_OR_cache_rg_ETC___d390 &&
	     IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447 &&
	     IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d532 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 ;
  assign NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1120 ;
  assign NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1135 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1133 ;
  assign NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1147 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ||
	      !MUX_cache_dw_valid$wset_1__VAL_1) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d233 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d203) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_92_EQ_1_57_38_AND_NOT_cache_rg_ETC___d865 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     MUX_cache_dw_valid$wset_1__VAL_1 ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1084 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1092 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1120 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1127 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1133 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d863 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364) &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 ;
  assign NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d213 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d212 ;
  assign NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d497 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d519 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[72] &&
	     !pte___2__h9255[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1109 =
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d220 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d213 &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d217 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d254 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h9255[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d458 =
	     (!cache_rg_priv_64_ULE_0b1___d165 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     (!MUX_cache_dw_valid$wset_1__VAL_1 ||
	      NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d220 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d456 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d213 &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d217 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d203 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d806 =
	     NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 =
	     !cache_rg_priv_64_ULE_0b1___d165 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d497 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_req_width_code_EQ_0b0_803_804_AND_NOT_req__ETC___d1823 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d632 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q36[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d636 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q48[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q48 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d640 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q34[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d644 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q47[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q47 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d648 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q32[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q32 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d652 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q46[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q46 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d656 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q30[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d660 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q45[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q45 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d664 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d668 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q44[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q44 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d672 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d676 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d680 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q24[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d684 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q42[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d688 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q22[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d692 =
	     { {56{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q41[7]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q41 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d712 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q35[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d716 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q33[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d720 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q31[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d724 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q29[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d728 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q27[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d732 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q25[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d736 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q23[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d740 =
	     { {48{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q21[15]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d752 =
	     { {32{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q40[31]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d756 =
	     { {32{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q39[31]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d760 =
	     { {32{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q38[31]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q38 } ;
  assign SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d764 =
	     { {32{cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q37[31]}},
	       cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q37 } ;
  assign _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 =
	     8'd1 << size_val__h43408 <= 8'd8 ;
  assign _theResult___fst__h8893 =
	     cache_tlb$lookup[130] ? _theResult___fst__h8964 : cache_rg_addr ;
  assign _theResult___fst__h8964 =
	     (cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238) ?
	       cache_rg_addr :
	       _theResult___fst__h9257 ;
  assign _theResult___snd__h41546 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       64'd0 ;
  assign _theResult___snd_fst__h8895 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h8966 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h8966 =
	     (cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9481 ;
  assign _theResult___snd_fst__h9481 =
	     (!pte___2__h9255[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h9558 :
	       pte___2__h9255 ;
  assign access_exc_code__h5319 = MUX_cache_rg_exc_code$write_1__VAL_1 ;
  assign b__h43980 = { 64'd0, _theResult___snd_fst__h41578 } ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q53 =
	     cache_master_xactor_shim_arff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1 =
	     cache_master_xactor_shim_awff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1264 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1274 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1315 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1321 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h8804[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d1156 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d533 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d532 ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620 =
	     cache_ram_word128_set$DOB & y__h10455 ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q21 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:112] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q22 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[119:112] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q23 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[111:96] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q24 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[103:96] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q25 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:80] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q26 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[87:80] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q27 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[79:64] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q28 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[71:64] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q29 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:48] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q30 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[55:48] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q31 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[47:32] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q32 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[39:32] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q33 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:16] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q34 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[23:16] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q35 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[15:0] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q36 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[7:0] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q37 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:96] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q38 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:64] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q39 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:32] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q40 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:0] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q41 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:120] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q42 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[111:104] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q43 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:88] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q44 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[79:72] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q45 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:56] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q46 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[47:40] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q47 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:24] ;
  assign cache_ram_word128_set_b_read__83_AND_cache_ram_ETC__q48 =
	     cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[15:8] ;
  assign cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d813 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h8804 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d212 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d203 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d547 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d533 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d545 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d553 =
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25215 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d792 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d808 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1088 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1084 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1094 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1092 ||
	     NOT_cache_rg_op_92_EQ_1_57_38_AND_NOT_cache_rg_ETC___d865 ;
  assign cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d545 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	     MUX_cache_dw_valid$wset_1__VAL_1 &&
	     IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 ;
  assign cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d866 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d863 ||
	     NOT_cache_rg_op_92_EQ_1_57_38_AND_NOT_cache_rg_ETC___d865 ;
  assign cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d1140 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25215 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d369 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h25215 ||
	     !MUX_cache_dw_valid$wset_1__VAL_1 ||
	     cache_f_fabric_write_reqs$FULL_N ;
  assign cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d233 ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1167 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d241 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (!cache_tlb$lookup[130] ||
	      cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d456 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d241 ||
	     (NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d254 ||
	      cache_tlb$RDY_lookup && cache_tlb$RDY_insert &&
	      cache_f_pte_writebacks$FULL_N) &&
	     (!cache_soc_map$m_is_mem_addr ||
	      IF_cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_ETC___d453) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d488 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_64_EQ_0b0_81_AND_NOT_cache_tlb_l_ETC___d234 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_67_BITS_59__ETC___d238) &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d497 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h9255[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d524 =
	     cache_rg_priv_64_ULE_0b1___d165 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_64_EQ_0b0_81_82_OR_cache_tlb_ETC___d519 &&
	     NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516 &&
	     cache_tlb$lookup[68] &&
	     cache_tlb$lookup[73] ;
  assign cache_rg_priv_64_ULE_0b1___d165 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q50 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_92_EQ_0b100_49_OR_cache_rg_ETC___d390 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1096 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d1094 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d1162 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_92_EQ_1_57_38_AND_NOT_cache_rg_ETC___d865 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d823 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 && cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289 &&
	      MUX_cache_dw_valid$wset_1__VAL_1) ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d868 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_92_EQ_1_57_OR_cache_rg_op_92_EQ_2__ETC___d866 ;
  assign cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d203 =
	     cache_tlb$lookup[67] | y__h9063 ;
  assign cache_tlb_lookup_cache_rg_satp_67_BITS_59_TO_4_ETC___d217 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cline_fabric_addr__h37854 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h9155 = x1_avValue_exc_code__h8805 ;
  assign lev_0_pte_pa__h36633 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h36635 = { lev_0_pte_pa__h36633[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h35557 = { 8'd0, x__h35654 } ;
  assign lev_1_pte_pa__h35559 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h35561 = { lev_1_pte_pa__h35559[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h34494 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h34496 = { lev_2_pte_pa__h34494[63:3], 3'b0 } ;
  assign lrsc_result__h25215 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_63_EQ_IF_cache_rg_priv_64_ULE_ETC___d364 ;
  assign mem_req_wr_addr_awlen__h5951 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5778 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h29814 = { 64'd0, x__h29817 } ;
  assign new_st_val_128__h44236 = { 64'd0, x__h44239 } ;
  assign new_st_val_64__h29819 = { 32'd0, _theResult_____2__h29813[31:0] } ;
  assign new_st_val_64__h29891 =
	     IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 +
	     IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ;
  assign new_st_val_64__h31088 = w1__h29670 ^ w2__h29672 ;
  assign new_st_val_64__h31092 = w1__h29670 & w2__h29672 ;
  assign new_st_val_64__h31096 = w1__h29670 | w2__h29672 ;
  assign new_st_val_64__h31100 =
	     (w1__h29670 < w2__h29672) ? w1__h29670 : w2__h29672 ;
  assign new_st_val_64__h31105 =
	     (w1__h29670 <= w2__h29672) ? w2__h29672 : w1__h29670 ;
  assign new_st_val_64__h31111 =
	     ((IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ^
	       64'h8000000000000000)) ?
	       w1__h29670 :
	       w2__h29672 ;
  assign new_st_val_64__h31116 =
	     ((IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ^
	       64'h8000000000000000)) ?
	       w2__h29672 :
	       w1__h29670 ;
  assign new_st_val_64__h44241 = { 32'd0, _theResult_____2__h44235[31:0] } ;
  assign new_st_val_64__h44313 =
	     IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 +
	     IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ;
  assign new_st_val_64__h46254 = w1__h44202 ^ w2__h29672 ;
  assign new_st_val_64__h46258 = w1__h44202 & w2__h29672 ;
  assign new_st_val_64__h46262 = w1__h44202 | w2__h29672 ;
  assign new_st_val_64__h46266 =
	     (w1__h44202 < w2__h29672) ? w1__h44202 : w2__h29672 ;
  assign new_st_val_64__h46271 =
	     (w1__h44202 <= w2__h29672) ? w2__h29672 : w1__h44202 ;
  assign new_st_val_64__h46277 =
	     ((IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ^
	       64'h8000000000000000)) ?
	       w1__h44202 :
	       w2__h29672 ;
  assign new_st_val_64__h46282 =
	     ((IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d981 ^
	       64'h8000000000000000)) ?
	       w2__h29672 :
	       w1__h44202 ;
  assign pa___1__h9263 = { 8'd0, x__h9266 } ;
  assign pa___1__h9312 = { 8'd0, x__h9315 } ;
  assign pa___1__h9381 = { 8'd0, x__h9384 } ;
  assign pte___1__h9530 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9558 =
	     { pte___2__h9255[63:8], 1'd1, pte___2__h9255[6:0] } ;
  assign pte___2__h9255 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9530 ;
  assign req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1839 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1844 =
	     (req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1839 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign result_lo__h23197 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d632 ;
  assign result_lo__h23232 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d636 ;
  assign result_lo__h23265 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d640 ;
  assign result_lo__h23298 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d644 ;
  assign result_lo__h23331 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d648 ;
  assign result_lo__h23364 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d652 ;
  assign result_lo__h23397 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d656 ;
  assign result_lo__h23430 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d660 ;
  assign result_lo__h23463 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d664 ;
  assign result_lo__h23496 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d668 ;
  assign result_lo__h23529 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d672 ;
  assign result_lo__h23562 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d676 ;
  assign result_lo__h23595 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d680 ;
  assign result_lo__h23628 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d684 ;
  assign result_lo__h23661 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d688 ;
  assign result_lo__h23694 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d692 ;
  assign result_lo__h23749 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d712 ;
  assign result_lo__h23782 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d716 ;
  assign result_lo__h23815 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d720 ;
  assign result_lo__h23848 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d724 ;
  assign result_lo__h23881 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d728 ;
  assign result_lo__h23914 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d732 ;
  assign result_lo__h23947 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d736 ;
  assign result_lo__h23980 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d740 ;
  assign result_lo__h24027 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d752 ;
  assign result_lo__h24060 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d756 ;
  assign result_lo__h24093 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d760 ;
  assign result_lo__h24126 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d764 ;
  assign result_lo__h41615 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 } ;
  assign result_lo__h41648 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 } ;
  assign result_lo__h41681 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 } ;
  assign result_lo__h41714 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 } ;
  assign result_lo__h41747 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 } ;
  assign result_lo__h41780 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 } ;
  assign result_lo__h41813 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 } ;
  assign result_lo__h41846 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {56{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 } ;
  assign result_lo__h41909 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 } ;
  assign result_lo__h41942 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 } ;
  assign result_lo__h41975 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 } ;
  assign result_lo__h42008 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {48{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 } ;
  assign result_lo__h42059 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 } ;
  assign result_lo__h42092 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {32{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 } ;
  assign result_lo__h45189 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q55[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h45221 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q58[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h45253 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q59[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h45285 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q61[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h45317 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h45349 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q65[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h45381 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q66[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h45413 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q68[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h45445 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h45477 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q72[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q72 } ;
  assign result_lo__h45509 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q73[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h45541 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q75[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h45573 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h45605 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q79[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q79 } ;
  assign result_lo__h45637 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q80[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q80 } ;
  assign result_lo__h45669 =
	     { {56{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q82[7]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q82 } ;
  assign result_lo__h45723 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q57[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h45755 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q60[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h45787 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q63[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h45819 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q67[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h45851 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q70[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h45883 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q74[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q74 } ;
  assign result_lo__h45915 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q77[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q77 } ;
  assign result_lo__h45947 =
	     { {48{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q81[15]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q81 } ;
  assign result_lo__h45993 =
	     { {32{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q56[31]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h46025 =
	     { {32{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q64[31]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h46057 =
	     { {32{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q71[31]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h46089 =
	     { {32{IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q78[31]}},
	       IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC__q78 } ;
  assign satp_pa__h4610 = { 8'd0, x__h7973 } ;
  assign shift_bits__h5666 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5968 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5972 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5976 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5980 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign value__h9575 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h36632 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h35558 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h34493 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w14197_BITS_31_TO_0__q83 = w1__h44197[31:0] ;
  assign w19665_BITS_31_TO_0__q49 = w1__h29665[31:0] ;
  assign w1___1__h29858 = { 32'd0, w1__h29665[31:0] } ;
  assign w1___1__h44280 = { 32'd0, w1__h44197[31:0] } ;
  assign w2__h29672 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h5967 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5666 ;
  assign x1_avValue_exc_code__h8805 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign x1_avValue_pa__h8804 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x1_avValue_snd__h34095 =
	     (cache_rg_priv_64_ULE_0b1___d165 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h34093 ;
  assign x__h23158 =
	     { _theResult___snd_snd__h23160, _theResult___snd_fst__h23159 } ;
  assign x__h29817 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h29819 :
	       _theResult_____2__h29813 ;
  assign x__h33991 = { _theResult___snd_snd__h23160, w1__h29665 } ;
  assign x__h35654 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h39070 =
	     { cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign x__h44230 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h44236 ;
  assign x__h44239 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h44241 :
	       _theResult_____2__h44235 ;
  assign x__h46391 = { _theResult___snd_snd__h44418, w1__h44197 } ;
  assign x__h7973 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9266 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9315 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9384 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10455 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__84_BITS__ETC___d289}} ;
  assign y__h9063 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  assign y_avValue_snd__h34093 =
	     cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d1167 ?
	       x1_avValue_exc_code__h8805 :
	       cache_rg_exc_code ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5643 = 8'd0;
      3'b100: fabric_2_strb__h5643 = 8'b11111111;
      default: fabric_2_strb__h5643 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___snd_fst__h28836 = 64'd1;
      default: _theResult___snd_fst__h28836 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5987 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5987 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5987 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h43408 = cache_rg_width_code;
      default: size_val__h43408 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9263 or pa___1__h9312 or pa___1__h9381)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9257 = pa___1__h9263;
      2'd1: _theResult___fst__h9257 = pa___1__h9312;
      2'd2: _theResult___fst__h9257 = pa___1__h9381;
      2'd3: _theResult___fst__h9257 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5968 or
	  strobe64__h5972 or strobe64__h5976 or strobe64__h5980)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6046 = strobe64__h5968;
      3'b001: mem_req_wr_data_wstrb__h6046 = strobe64__h5972;
      3'b010: mem_req_wr_data_wstrb__h6046 = strobe64__h5976;
      3'b011: mem_req_wr_data_wstrb__h6046 = strobe64__h5980;
      3'b100: mem_req_wr_data_wstrb__h6046 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6046 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5967)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6045 = word64__h5967;
      default: mem_req_wr_data_wdata__h6045 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 =
	      { cache_rg_st_amo_val[31:0], cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
      4'd15:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 or
	  cache_rg_addr)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17;
      3'd1:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18;
      3'b010:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19;
      3'd3:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 =
	      (cache_rg_addr[3:0] == 4'h0) ?
		NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324 :
		cache_rg_addr[3:0] != 4'h8 ||
		NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
      default: IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__84_B_ETC___d324;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 =
	      IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_cach_ETC___d355;
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d438 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d439 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d439 =
		   NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d438;
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d433 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d434 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d434 =
		   NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d433;
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q20;
      4'd15:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425 =
	      NOT_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_r_ETC___d424;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d443 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d434 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d439)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d425;
      3'd1:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d434;
      3'b010:
	  IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d439;
      default: IF_cache_rg_width_code_92_EQ_0_93_THEN_IF_IF_c_ETC___d447 =
		   cache_rg_width_code != 3'd3 ||
		   IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d443;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h23160 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h23160 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:64];
      default: _theResult___snd_snd__h23160 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h10398 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:0];
      4'h8:
	  _theResult___snd__h10398 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[127:64];
      default: _theResult___snd__h10398 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d752 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d756 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d760 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d764)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d752;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d756;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d760;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d764;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h24027 or
	  result_lo__h24060 or result_lo__h24093 or result_lo__h24126)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 =
	      result_lo__h24027;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 =
	      result_lo__h24060;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 =
	      result_lo__h24093;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 =
	      result_lo__h24126;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d712 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d716 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d720 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d724 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d728 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d732 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d736 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d740)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d712;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d716;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d720;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d724;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d728;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d732;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d736;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d740;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h23749 or
	  result_lo__h23782 or
	  result_lo__h23815 or
	  result_lo__h23848 or
	  result_lo__h23881 or
	  result_lo__h23914 or result_lo__h23947 or result_lo__h23980)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23749;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23782;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23815;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23848;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23881;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23914;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23947;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
	      result_lo__h23980;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h23197 or
	  result_lo__h23232 or
	  result_lo__h23265 or
	  result_lo__h23298 or
	  result_lo__h23331 or
	  result_lo__h23364 or
	  result_lo__h23397 or
	  result_lo__h23430 or
	  result_lo__h23463 or
	  result_lo__h23496 or
	  result_lo__h23529 or
	  result_lo__h23562 or
	  result_lo__h23595 or
	  result_lo__h23628 or result_lo__h23661 or result_lo__h23694)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23197;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23232;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23265;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23298;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23331;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23364;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23397;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23430;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23463;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23496;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23529;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23562;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23595;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23628;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23661;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 =
	      result_lo__h23694;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769 or
	  _theResult___snd__h10398 or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h23159 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d709;
      3'd1:
	  _theResult___snd_fst__h23159 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d749;
      3'b010:
	  _theResult___snd_fst__h23159 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d769;
      3'd3: _theResult___snd_fst__h23159 = _theResult___snd__h10398;
      3'b100:
	  _theResult___snd_fst__h23159 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:0];
      default: _theResult___snd_fst__h23159 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d632 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d636 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d640 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d644 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d648 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d652 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d656 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d660 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d664 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d668 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d672 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d676 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d680 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d684 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d688 or
	  SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d692)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d632;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d636;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d640;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d644;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d648;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d652;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d656;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d660;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d664;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d668;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d672;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d676;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d680;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d684;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d688;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 =
	      SEXT_cache_ram_word128_set_b_read__83_AND_cach_ETC___d692;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853 or
	  _theResult___snd__h10398 or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h29665 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841;
      3'd1:
	  w1__h29665 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849;
      3'b010:
	  w1__h29665 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d853;
      3'd3: w1__h29665 = _theResult___snd__h10398;
      3'b100:
	  w1__h29665 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:0];
      default: w1__h29665 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 or
	  w1___1__h29858 or
	  _theResult___snd__h10398 or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h29670 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841;
      3'd1:
	  w1__h29670 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849;
      3'b010: w1__h29670 = w1___1__h29858;
      3'd3: w1__h29670 = _theResult___snd__h10398;
      3'b100:
	  w1__h29670 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:0];
      default: w1__h29670 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849 or
	  w19665_BITS_31_TO_0__q49 or
	  _theResult___snd__h10398 or
	  cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d841;
      3'd1:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d849;
      3'b010:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
	      { {32{w19665_BITS_31_TO_0__q49[31]}},
		w19665_BITS_31_TO_0__q49 };
      3'd3:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
	      _theResult___snd__h10398;
      3'b100:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
	      cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620[63:0];
      default: IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d979 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h31116 or
	  new_st_val_64__h29891 or
	  w2__h29672 or
	  new_st_val_64__h31088 or
	  new_st_val_64__h31096 or
	  new_st_val_64__h31092 or
	  new_st_val_64__h31111 or
	  new_st_val_64__h31100 or new_st_val_64__h31105)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h29813 = new_st_val_64__h29891;
      5'b00001: _theResult_____2__h29813 = w2__h29672;
      5'b00100: _theResult_____2__h29813 = new_st_val_64__h31088;
      5'b01000: _theResult_____2__h29813 = new_st_val_64__h31096;
      5'b01100: _theResult_____2__h29813 = new_st_val_64__h31092;
      5'b10000: _theResult_____2__h29813 = new_st_val_64__h31111;
      5'b11000: _theResult_____2__h29813 = new_st_val_64__h31100;
      5'b11100: _theResult_____2__h29813 = new_st_val_64__h31105;
      default: _theResult_____2__h29813 = new_st_val_64__h31116;
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 =
	      { IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[31:0],
		cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
	      { IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[15:0],
		cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
	      { cache_rg_st_amo_val[15:0], cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:8],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:24],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:40],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:56],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:72],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:88],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:104],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { cache_ram_word128_set$DOB[127:120],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 =
	      { IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[7:0],
		cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[63:0] };
      4'h8:
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009[63:0],
		cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068 or
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51 or
	  IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h29723 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1042;
      3'd1:
	  x__h29723 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1059;
      3'b010:
	  x__h29723 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d1068;
      3'd3:
	  x__h29723 = CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q51;
      3'b100:
	  x__h29723 =
	      IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009;
      default: x__h29723 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:24],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:40],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:56],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:72],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:88],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:104],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_ram_word128_set$DOB[127:120],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 =
	      { cache_rg_st_amo_val[7:0], cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8804 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8804[3:0])
      4'h0:
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
	      { cache_rg_st_amo_val[63:0], cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954 or
	  IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963 or
	  CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h25673 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d937;
      3'd1:
	  x__h25673 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d954;
      3'b010:
	  x__h25673 =
	      IF_IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_ETC___d963;
      3'd3:
	  x__h25673 = CASE_x1_avValue_pa804_BITS_3_TO_0_0x0_cache_ra_ETC__q52;
      3'b100: x__h25673 = cache_rg_st_amo_val[127:0];
      default: x__h25673 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h41909 or
	  result_lo__h41942 or result_lo__h41975 or result_lo__h42008)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 =
	      result_lo__h41909;
      3'd2:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 =
	      result_lo__h41942;
      3'd4:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 =
	      result_lo__h41975;
      3'd6:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 =
	      result_lo__h42008;
      default: IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h41615 or
	  result_lo__h41648 or
	  result_lo__h41681 or
	  result_lo__h41714 or
	  result_lo__h41747 or
	  result_lo__h41780 or result_lo__h41813 or result_lo__h41846)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41615;
      3'd1:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41648;
      3'd2:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41681;
      3'd3:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41714;
      3'd4:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41747;
      3'd5:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41780;
      3'd6:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41813;
      3'd7:
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 =
	      result_lo__h41846;
    endcase
  end
  always@(cache_rg_addr or result_lo__h42059 or result_lo__h42092)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54 =
	      result_lo__h42059;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54 =
	      result_lo__h42092;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504 or
	  IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54 or
	  _theResult___snd__h41546 or
	  cache_master_xactor_shim_rff_rv$port1__read)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h41578 =
	      IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1504;
      3'd1:
	  _theResult___snd_fst__h41578 =
	      IF_cache_rg_addr_76_BITS_2_TO_0_456_EQ_0_457_T_ETC___d1524;
      3'b010:
	  _theResult___snd_fst__h41578 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo2059_ETC__q54;
      3'd3: _theResult___snd_fst__h41578 = _theResult___snd__h41546;
      3'b100:
	  _theResult___snd_fst__h41578 =
	      cache_master_xactor_shim_rff_rv$port1__read[67:4];
      default: _theResult___snd_fst__h41578 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h44418 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h44418 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[127:64];
      default: _theResult___snd_snd__h44418 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h46142 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:0];
      4'h8:
	  _theResult___snd__h46142 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[127:64];
      default: _theResult___snd__h46142 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45993 or
	  result_lo__h46025 or result_lo__h46057 or result_lo__h46089)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 =
	      result_lo__h45993;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 =
	      result_lo__h46025;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 =
	      result_lo__h46057;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 =
	      result_lo__h46089;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45723 or
	  result_lo__h45755 or
	  result_lo__h45787 or
	  result_lo__h45819 or
	  result_lo__h45851 or
	  result_lo__h45883 or result_lo__h45915 or result_lo__h45947)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45723;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45755;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45787;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45819;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45851;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45883;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45915;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
	      result_lo__h45947;
      default: IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h45189 or
	  result_lo__h45221 or
	  result_lo__h45253 or
	  result_lo__h45285 or
	  result_lo__h45317 or
	  result_lo__h45349 or
	  result_lo__h45381 or
	  result_lo__h45413 or
	  result_lo__h45445 or
	  result_lo__h45477 or
	  result_lo__h45509 or
	  result_lo__h45541 or
	  result_lo__h45573 or
	  result_lo__h45605 or result_lo__h45637 or result_lo__h45669)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45189;
      4'h1:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45221;
      4'h2:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45253;
      4'h3:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45285;
      4'h4:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45317;
      4'h5:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45349;
      4'h6:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45381;
      4'h7:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45413;
      4'h8:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45445;
      4'h9:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45477;
      4'hA:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45509;
      4'hB:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45541;
      4'hC:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45573;
      4'hD:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45605;
      4'hE:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45637;
      4'hF:
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 =
	      result_lo__h45669;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698 or
	  _theResult___snd__h46142 or
	  IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h44197 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662;
      3'd1:
	  w1__h44197 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686;
      3'b010:
	  w1__h44197 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1698;
      3'd3: w1__h44197 = _theResult___snd__h46142;
      3'b100:
	  w1__h44197 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:0];
      default: w1__h44197 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 or
	  w1___1__h44280 or
	  _theResult___snd__h46142 or
	  IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h44202 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662;
      3'd1:
	  w1__h44202 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686;
      3'b010: w1__h44202 = w1___1__h44280;
      3'd3: w1__h44202 = _theResult___snd__h46142;
      3'b100:
	  w1__h44202 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:0];
      default: w1__h44202 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662 or
	  IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686 or
	  w14197_BITS_31_TO_0__q83 or
	  _theResult___snd__h46142 or
	  IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1662;
      3'd1:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
	      IF_cache_rg_addr_76_BITS_3_TO_0_94_EQ_0x0_95_T_ETC___d1686;
      3'b010:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
	      { {32{w14197_BITS_31_TO_0__q83[31]}},
		w14197_BITS_31_TO_0__q83 };
      3'd3:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
	      _theResult___snd__h46142;
      3'b100:
	  IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
	      IF_cache_rg_lower_word64_full_395_THEN_cache_m_ETC___d1614[63:0];
      default: IF_cache_rg_width_code_92_EQ_0b10_39_THEN_SEXT_ETC___d1710 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h46282 or
	  new_st_val_64__h44313 or
	  w2__h29672 or
	  new_st_val_64__h46254 or
	  new_st_val_64__h46262 or
	  new_st_val_64__h46258 or
	  new_st_val_64__h46277 or
	  new_st_val_64__h46266 or new_st_val_64__h46271)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h44235 = new_st_val_64__h44313;
      5'b00001: _theResult_____2__h44235 = w2__h29672;
      5'b00100: _theResult_____2__h44235 = new_st_val_64__h46254;
      5'b01000: _theResult_____2__h44235 = new_st_val_64__h46262;
      5'b01100: _theResult_____2__h44235 = new_st_val_64__h46258;
      5'b10000: _theResult_____2__h44235 = new_st_val_64__h46277;
      5'b11000: _theResult_____2__h44235 = new_st_val_64__h46266;
      5'b11100: _theResult_____2__h44235 = new_st_val_64__h46271;
      default: _theResult_____2__h44235 = new_st_val_64__h46282;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_commit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY 11'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 7'd42;
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    75'h2AAAAAAAAAAAAAAAAAA;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_commit$EN)
	  cache_crg_commit <= `BSV_ASSIGNMENT_DELAY cache_crg_commit$D_IN;
	if (cache_crg_sb_to_load_delay$EN)
	  cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY
	      cache_crg_sb_to_load_delay$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_commit = 1'h0;
    cache_crg_sb_to_load_delay = 11'h2AA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 7'h2A;
    cache_master_xactor_shim_rff_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5951);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h5987, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6045);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6046);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5778, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7316 = $stime;
	  #0;
	end
    v__h7310 = v__h7316 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7310,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7417 = $stime;
	  #0;
	end
    v__h7411 = v__h7417 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7411, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7853 = $stime;
	  #0;
	end
    v__h7847 = v__h7853 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7847,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4610,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d488)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1___d165 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_exc_code__h8805);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d254)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9575, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d524)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", x1_avValue_exc_code__h8805);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516 &&
	  (!cache_tlb$lookup[68] || !cache_tlb$lookup[73]))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d524)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("'h%h", value__h9575, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_satp__ETC___d504 &&
	  NOT_cache_cfg_verbosity_read__12_ULT_2_15___d516)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d792)
	begin
	  v__h24329 = $stime;
	  #0;
	end
    v__h24323 = v__h24329 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d792)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h24323,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d806)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d792)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_0_93_OR_cache_rg_op_92_EQ_2__ETC___d808)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d790 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5_95_EQ_0b10_96_AND_NOT_cach_ETC___d813)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd1 &&
	  IF_cache_rg_priv_64_ULE_0b1_65_AND_cache_rg_sa_ETC___d530 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d1109)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_rg_lrsc_valid &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        AMO SC result = %0d", lrsc_result__h25215);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8804,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h25673 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1122)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  (cache_rg_op == 2'd1 ||
	   cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	  NOT_cache_rg_op_92_EQ_2_94_06_OR_NOT_cache_rg__ETC___d1127)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8804,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1135)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1135)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d1140)
	begin
	  v__h29096 = $stime;
	  #0;
	end
    v__h29090 = v__h29096 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d1140)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h29090,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_92_EQ_2_94_AND_cache_rg_amo_funct5_ETC___d1140)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1147)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$display("          PA 0x%0h ", x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620,
		 cache_ram_word128_set_b_read__83_AND_cache_ram_ETC___d620,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_92_EQ_0b100_49_THEN_cac_ETC___d1009 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 x__h29723 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_92_EQ_0_93_05_AND_NOT_cache_rg_ETC___d1152)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d819 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  cache_rg_op != 2'd1 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	  cache_ram_state_and_ctag_cset_b_read__84_BIT_5_ETC___d1156)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8804);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_64_ULE_0b1_65_66_OR_NOT_cach_ETC___d485 &&
	  !cache_soc_map$m_is_mem_addr &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34441 = $stime;
	  #0;
	end
    v__h34435 = v__h34441 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h34435,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34711 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h34711);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h34496);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h6884 = $stime;
	  #0;
	end
    v__h6878 = v__h6884 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_reset", v__h6878, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40659 = $stime;
	  #0;
	end
    v__h40653 = v__h40659 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h40653,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40899 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h40899);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43408, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41019 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h41019);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42776 = $stime;
	  #0;
	end
    v__h42770 = v__h42776 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42770,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42864 = $stime;
	  #0;
	end
    v__h42858 = v__h42864 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h42858,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43082 = $stime;
	  #0;
	end
    v__h43076 = v__h43082 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h43076,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43204 = $stime;
	  #0;
	end
    v__h43198 = v__h43204 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h43198,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43435 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h43435);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h43408, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43555 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h43555);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_92_EQ_0_93_OR_cach_ETC___d1433 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h46723 = $stime;
	  #0;
	end
    v__h46717 = v__h46723 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h46717,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46970 = $stime;
	  #0;
	end
    v__h46964 = v__h46970 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h46964,
	       "D_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h46931 = $stime;
	  #0;
	end
    v__h46925 = v__h46931 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h46925,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35527 = $stime;
	  #0;
	end
    v__h35521 = v__h35527 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h35521,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35284 = $stime;
	  #0;
	end
    v__h35278 = v__h35284 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h35278,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35705 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h35705);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h35561);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1264)
	begin
	  v__h35850 = $stime;
	  #0;
	end
    v__h35844 = v__h35850 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1264)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h35844,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276)
	begin
	  v__h35962 = $stime;
	  #0;
	end
    v__h35956 = v__h35962 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h35956,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1276)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35557);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35456 = $stime;
	  #0;
	end
    v__h35450 = v__h35456 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h35450,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36601 = $stime;
	  #0;
	end
    v__h36595 = v__h36601 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h36595,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36361 = $stime;
	  #0;
	end
    v__h36355 = v__h36361 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h36355,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36779 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h36779);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h36635);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1315)
	begin
	  v__h37036 = $stime;
	  #0;
	end
    v__h37030 = v__h37036 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1315)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h37030,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1315)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h35557);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1321)
	begin
	  v__h36924 = $stime;
	  #0;
	end
    v__h36918 = v__h36924 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__1_ETC___d1321)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h36918,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36530 = $stime;
	  #0;
	end
    v__h36524 = v__h36530 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h36524,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37513 = $stime;
	  #0;
	end
    v__h37507 = v__h37513 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h37507,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37584 = $stime;
	  #0;
	end
    v__h37578 = v__h37584 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h37578,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37666 = $stime;
	  #0;
	end
    v__h37660 = v__h37666 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h37660,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h35557);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37442 = $stime;
	  #0;
	end
    v__h37436 = v__h37442 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h37436,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41252 = $stime;
	  #0;
	end
    v__h41246 = v__h41252 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h41246,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42438 = $stime;
	  #0;
	end
    v__h42432 = v__h42438 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42432,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___snd_fst__h41578 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42552 = $stime;
	  #0;
	end
    v__h42546 = v__h42552 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42546,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42276 = $stime;
	  #0;
	end
    v__h42270 = v__h42276 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h42270,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h39070 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42663 = $stime;
	  #0;
	end
    v__h42657 = v__h42663 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_master_xactor_shim_rff_rv$port1__read[1] &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h42657,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h43732 = $stime;
	  #0;
	end
    v__h43726 = v__h43732 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h43726,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h44102 = $stime;
	  #0;
	end
    v__h44096 = v__h44102 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h44096,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h46413 = $stime;
	  #0;
	end
    v__h46407 = v__h46413 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h46407,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h46391 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full ||
	   cache_master_xactor_shim_rff_rv$port1__read[1]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h44030 = $stime;
	  #0;
	end
    v__h44024 = v__h44030 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h44024,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47360 = $stime;
	  #0;
	end
    v__h47354 = v__h47360 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h47354);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req &&
	  req_width_code_EQ_0b0_803_OR_req_width_code_EQ_ETC___d1844)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37801 = $stime;
	  #0;
	end
    v__h37795 = v__h37801 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h37795, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37969 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0t            To fabric: ", v__h37969);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h37854);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	begin
	  v__h38607 = $stime;
	  #0;
	end
    v__h38601 = v__h38607 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h38601,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h38849 = $stime;
	  #0;
	end
    v__h38843 = v__h38849 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h38843,
		 "D_MMU_Cache",
		 access_exc_code__h5319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write(" 0x%0x",
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_373___d1374)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h48746 = $stime;
	  #0;
	end
    v__h48740 = v__h48746 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h48740, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

