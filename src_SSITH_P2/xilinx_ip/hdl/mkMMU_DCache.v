//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1
// mem_master_awid                O     4
// mem_master_awaddr              O    64
// mem_master_awlen               O     8
// mem_master_awsize              O     3
// mem_master_awburst             O     2
// mem_master_awlock              O     1
// mem_master_awcache             O     4
// mem_master_awprot              O     3
// mem_master_awqos               O     4
// mem_master_awregion            O     4
// mem_master_awvalid             O     1
// mem_master_wdata               O    64
// mem_master_wstrb               O     8
// mem_master_wlast               O     1
// mem_master_wuser               O     1
// mem_master_wvalid              O     1
// mem_master_bready              O     1
// mem_master_arid                O     4
// mem_master_araddr              O    64
// mem_master_arlen               O     8
// mem_master_arsize              O     3
// mem_master_arburst             O     2
// mem_master_arlock              O     1
// mem_master_arcache             O     4
// mem_master_arprot              O     3
// mem_master_arqos               O     4
// mem_master_arregion            O     4
// mem_master_arvalid             O     1
// mem_master_rready              O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct7                 I     7 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_awready             I     1
// mem_master_wready              I     1
// mem_master_bid                 I     4
// mem_master_bresp               I     2
// mem_master_arready             I     1
// mem_master_rid                 I     4
// mem_master_rdata               I    64
// mem_master_rresp               I     2
// mem_master_rlast               I     1
// mem_master_ruser               I     1
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// mem_master_bvalid              I     1
// mem_master_rvalid              I     1
//
// Combinational paths from inputs to outputs:
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> valid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_fst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_commit,
//    mem_master_rvalid) -> word128_snd
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arid
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_araddr
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlen
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arsize
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arburst
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arlock
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arcache
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arprot
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arqos
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arregion
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_aruser
//   (mem_master_rid,
//    mem_master_rdata,
//    mem_master_rresp,
//    mem_master_rlast,
//    mem_master_ruser,
//    EN_req,
//    mem_master_rvalid) -> mem_master_arvalid
//   EN_req -> RDY_server_flush_request_put
//   EN_req -> RDY_tlb_flush
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct7,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_awid,

		    mem_master_awaddr,

		    mem_master_awlen,

		    mem_master_awsize,

		    mem_master_awburst,

		    mem_master_awlock,

		    mem_master_awcache,

		    mem_master_awprot,

		    mem_master_awqos,

		    mem_master_awregion,

		    mem_master_awvalid,

		    mem_master_awready,

		    mem_master_wdata,

		    mem_master_wstrb,

		    mem_master_wlast,

		    mem_master_wuser,

		    mem_master_wvalid,

		    mem_master_wready,

		    mem_master_bid,
		    mem_master_bresp,
		    mem_master_bvalid,

		    mem_master_bready,

		    mem_master_arid,

		    mem_master_araddr,

		    mem_master_arlen,

		    mem_master_arsize,

		    mem_master_arburst,

		    mem_master_arlock,

		    mem_master_arcache,

		    mem_master_arprot,

		    mem_master_arqos,

		    mem_master_arregion,

		    mem_master_arvalid,

		    mem_master_arready,

		    mem_master_rid,
		    mem_master_rdata,
		    mem_master_rresp,
		    mem_master_rlast,
		    mem_master_ruser,
		    mem_master_rvalid,

		    mem_master_rready);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [6 : 0] req_amo_funct7;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_awid
  output [3 : 0] mem_master_awid;

  // value method mem_master_aw_awaddr
  output [63 : 0] mem_master_awaddr;

  // value method mem_master_aw_awlen
  output [7 : 0] mem_master_awlen;

  // value method mem_master_aw_awsize
  output [2 : 0] mem_master_awsize;

  // value method mem_master_aw_awburst
  output [1 : 0] mem_master_awburst;

  // value method mem_master_aw_awlock
  output mem_master_awlock;

  // value method mem_master_aw_awcache
  output [3 : 0] mem_master_awcache;

  // value method mem_master_aw_awprot
  output [2 : 0] mem_master_awprot;

  // value method mem_master_aw_awqos
  output [3 : 0] mem_master_awqos;

  // value method mem_master_aw_awregion
  output [3 : 0] mem_master_awregion;

  // value method mem_master_aw_awuser

  // value method mem_master_aw_awvalid
  output mem_master_awvalid;

  // action method mem_master_aw_awready
  input  mem_master_awready;

  // value method mem_master_w_wdata
  output [63 : 0] mem_master_wdata;

  // value method mem_master_w_wstrb
  output [7 : 0] mem_master_wstrb;

  // value method mem_master_w_wlast
  output mem_master_wlast;

  // value method mem_master_w_wuser
  output mem_master_wuser;

  // value method mem_master_w_wvalid
  output mem_master_wvalid;

  // action method mem_master_w_wready
  input  mem_master_wready;

  // action method mem_master_b_bflit
  input  [3 : 0] mem_master_bid;
  input  [1 : 0] mem_master_bresp;
  input  mem_master_bvalid;

  // value method mem_master_b_bready
  output mem_master_bready;

  // value method mem_master_ar_arid
  output [3 : 0] mem_master_arid;

  // value method mem_master_ar_araddr
  output [63 : 0] mem_master_araddr;

  // value method mem_master_ar_arlen
  output [7 : 0] mem_master_arlen;

  // value method mem_master_ar_arsize
  output [2 : 0] mem_master_arsize;

  // value method mem_master_ar_arburst
  output [1 : 0] mem_master_arburst;

  // value method mem_master_ar_arlock
  output mem_master_arlock;

  // value method mem_master_ar_arcache
  output [3 : 0] mem_master_arcache;

  // value method mem_master_ar_arprot
  output [2 : 0] mem_master_arprot;

  // value method mem_master_ar_arqos
  output [3 : 0] mem_master_arqos;

  // value method mem_master_ar_arregion
  output [3 : 0] mem_master_arregion;

  // value method mem_master_ar_aruser

  // value method mem_master_ar_arvalid
  output mem_master_arvalid;

  // action method mem_master_ar_arready
  input  mem_master_arready;

  // action method mem_master_r_rflit
  input  [3 : 0] mem_master_rid;
  input  [63 : 0] mem_master_rdata;
  input  [1 : 0] mem_master_rresp;
  input  mem_master_rlast;
  input  mem_master_ruser;
  input  mem_master_rvalid;

  // value method mem_master_r_rready
  output mem_master_rready;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [63 : 0] addr, mem_master_araddr, mem_master_awaddr, mem_master_wdata;
  wire [7 : 0] mem_master_arlen, mem_master_awlen, mem_master_wstrb;
  wire [5 : 0] exc_code;
  wire [3 : 0] mem_master_arcache,
	       mem_master_arid,
	       mem_master_arqos,
	       mem_master_arregion,
	       mem_master_awcache,
	       mem_master_awid,
	       mem_master_awqos,
	       mem_master_awregion;
  wire [2 : 0] mem_master_arprot,
	       mem_master_arsize,
	       mem_master_awprot,
	       mem_master_awsize;
  wire [1 : 0] mem_master_arburst, mem_master_awburst;
  wire RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_arlock,
       mem_master_arvalid,
       mem_master_awlock,
       mem_master_awvalid,
       mem_master_bready,
       mem_master_rready,
       mem_master_wlast,
       mem_master_wuser,
       mem_master_wvalid,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  reg [97 : 0] cache_master_xactor_shim_arff_rv$port0__write_1;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$port1__read,
		cache_master_xactor_shim_arff_rv$port2__read,
		cache_master_xactor_shim_arff_rv$port3__read,
		cache_master_xactor_shim_awff_rv$port0__write_1,
		cache_master_xactor_shim_awff_rv$port1__read,
		cache_master_xactor_shim_awff_rv$port2__read,
		cache_master_xactor_shim_awff_rv$port3__read;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$port0__write_1,
		cache_master_xactor_shim_wff_rv$port1__read,
		cache_master_xactor_shim_wff_rv$port2__read,
		cache_master_xactor_shim_wff_rv$port3__read;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$port0__write_1,
		cache_master_xactor_shim_rff_rv$port1__read,
		cache_master_xactor_shim_rff_rv$port2__read,
		cache_master_xactor_shim_rff_rv$port3__read;
  wire [71 : 0] cache_master_xactor_ug_master_u_r_putWire$wget;
  wire [10 : 0] cache_crg_sb_to_load_delay$port0__write_1,
		cache_crg_sb_to_load_delay$port2__read;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$port0__write_1,
	       cache_master_xactor_shim_bff_rv$port1__read,
	       cache_master_xactor_shim_bff_rv$port2__read,
	       cache_master_xactor_shim_bff_rv$port3__read;
  wire [5 : 0] cache_master_xactor_ug_master_u_b_putWire$wget;
  wire cache_crg_commit$port1__read,
       cache_crg_commit$port3__read,
       cache_crg_sb_to_load_delay$EN_port1__write,
       cache_dw_valid$whas,
       cache_master_xactor_shim_arff_rv$EN_port0__write,
       cache_master_xactor_shim_rff_rv$EN_port1__write,
       cache_master_xactor_shim_wff_rv$EN_port0__write,
       cache_master_xactor_ug_master_u_ar_dropWire$whas,
       cache_master_xactor_ug_master_u_aw_dropWire$whas,
       cache_master_xactor_ug_master_u_b_putWire$whas,
       cache_master_xactor_ug_master_u_r_putWire$whas,
       cache_master_xactor_ug_master_u_w_dropWire$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_crg_commit
  reg cache_crg_commit;
  wire cache_crg_commit$D_IN, cache_crg_commit$EN;

  // register cache_crg_sb_to_load_delay
  reg [10 : 0] cache_crg_sb_to_load_delay;
  wire [10 : 0] cache_crg_sb_to_load_delay$D_IN;
  wire cache_crg_sb_to_load_delay$EN;

  // register cache_ctr_wr_rsps_pending_inrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_inrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg$D_IN;
  wire cache_ctr_wr_rsps_pending_inrg$EN;

  // register cache_ctr_wr_rsps_pending_outrg
  reg [3 : 0] cache_ctr_wr_rsps_pending_outrg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_outrg$D_IN;
  wire cache_ctr_wr_rsps_pending_outrg$EN;

  // register cache_master_xactor_clearing
  reg cache_master_xactor_clearing;
  wire cache_master_xactor_clearing$D_IN, cache_master_xactor_clearing$EN;

  // register cache_master_xactor_shim_arff_rv
  reg [97 : 0] cache_master_xactor_shim_arff_rv;
  wire [97 : 0] cache_master_xactor_shim_arff_rv$D_IN;
  wire cache_master_xactor_shim_arff_rv$EN;

  // register cache_master_xactor_shim_awff_rv
  reg [97 : 0] cache_master_xactor_shim_awff_rv;
  wire [97 : 0] cache_master_xactor_shim_awff_rv$D_IN;
  wire cache_master_xactor_shim_awff_rv$EN;

  // register cache_master_xactor_shim_bff_rv
  reg [6 : 0] cache_master_xactor_shim_bff_rv;
  wire [6 : 0] cache_master_xactor_shim_bff_rv$D_IN;
  wire cache_master_xactor_shim_bff_rv$EN;

  // register cache_master_xactor_shim_rff_rv
  reg [72 : 0] cache_master_xactor_shim_rff_rv;
  wire [72 : 0] cache_master_xactor_shim_rff_rv$D_IN;
  wire cache_master_xactor_shim_rff_rv$EN;

  // register cache_master_xactor_shim_wff_rv
  reg [74 : 0] cache_master_xactor_shim_wff_rv;
  wire [74 : 0] cache_master_xactor_shim_wff_rv$D_IN;
  wire cache_master_xactor_shim_wff_rv$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_amo_funct7
  reg [6 : 0] cache_rg_amo_funct7;
  wire [6 : 0] cache_rg_amo_funct7$D_IN;
  wire cache_rg_amo_funct7$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  wire cache_rg_lower_word64_full$D_IN, cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [52 : 0] cache_ram_state_and_ctag_cset$DIA,
		cache_ram_state_and_ctag_cset$DIB,
		cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [128 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [128 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_master_xactor_do_clear,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_arready,
       CAN_FIRE_mem_master_aw_awready,
       CAN_FIRE_mem_master_b_bflit,
       CAN_FIRE_mem_master_r_rflit,
       CAN_FIRE_mem_master_w_wready,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_master_xactor_do_clear,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek,
       WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_arready,
       WILL_FIRE_mem_master_aw_awready,
       WILL_FIRE_mem_master_b_bflit,
       WILL_FIRE_mem_master_r_rflit,
       WILL_FIRE_mem_master_w_wready,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2,
		 MUX_cache_rg_ld_val$write_1__VAL_2,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [97 : 0] MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4,
		MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
  wire [74 : 0] MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1,
		MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [52 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_2,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_10,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_3,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_6,
	       MUX_cache_rg_state$write_1__VAL_8,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire [3 : 0] MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_1,
       MUX_cache_dw_output_ld_val$wset_1__SEL_2,
       MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2,
       MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_4,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_exc_code$write_1__SEL_8,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_lrsc_valid$write_1__VAL_2,
       MUX_cache_rg_state$write_1__SEL_17,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7321;
  reg [31 : 0] v__h7422;
  reg [31 : 0] v__h7877;
  reg [31 : 0] v__h24336;
  reg [31 : 0] v__h28772;
  reg [31 : 0] v__h33822;
  reg [31 : 0] v__h6889;
  reg [31 : 0] v__h39943;
  reg [31 : 0] v__h41466;
  reg [31 : 0] v__h41554;
  reg [31 : 0] v__h41772;
  reg [31 : 0] v__h41894;
  reg [31 : 0] v__h45011;
  reg [31 : 0] v__h45258;
  reg [31 : 0] v__h45219;
  reg [31 : 0] v__h34872;
  reg [31 : 0] v__h34629;
  reg [31 : 0] v__h35174;
  reg [31 : 0] v__h35286;
  reg [31 : 0] v__h34801;
  reg [31 : 0] v__h35925;
  reg [31 : 0] v__h35685;
  reg [31 : 0] v__h36339;
  reg [31 : 0] v__h36227;
  reg [31 : 0] v__h35854;
  reg [31 : 0] v__h36816;
  reg [31 : 0] v__h36887;
  reg [31 : 0] v__h36969;
  reg [31 : 0] v__h36745;
  reg [31 : 0] v__h40300;
  reg [31 : 0] v__h41241;
  reg [31 : 0] v__h41355;
  reg [31 : 0] v__h42195;
  reg [31 : 0] v__h42390;
  reg [31 : 0] v__h44704;
  reg [31 : 0] v__h42488;
  reg [31 : 0] v__h45649;
  reg [31 : 0] v__h37104;
  reg [31 : 0] v__h37891;
  reg [31 : 0] v__h38133;
  reg [31 : 0] v__h47037;
  reg [31 : 0] v__h6883;
  reg [31 : 0] v__h7315;
  reg [31 : 0] v__h7416;
  reg [31 : 0] v__h7871;
  reg [31 : 0] v__h24330;
  reg [31 : 0] v__h28766;
  reg [31 : 0] v__h33816;
  reg [31 : 0] v__h34623;
  reg [31 : 0] v__h34795;
  reg [31 : 0] v__h34866;
  reg [31 : 0] v__h35168;
  reg [31 : 0] v__h35280;
  reg [31 : 0] v__h35679;
  reg [31 : 0] v__h35848;
  reg [31 : 0] v__h35919;
  reg [31 : 0] v__h36221;
  reg [31 : 0] v__h36333;
  reg [31 : 0] v__h36739;
  reg [31 : 0] v__h36810;
  reg [31 : 0] v__h36881;
  reg [31 : 0] v__h36963;
  reg [31 : 0] v__h37098;
  reg [31 : 0] v__h37885;
  reg [31 : 0] v__h38127;
  reg [31 : 0] v__h39937;
  reg [31 : 0] v__h40294;
  reg [31 : 0] v__h41235;
  reg [31 : 0] v__h41349;
  reg [31 : 0] v__h41460;
  reg [31 : 0] v__h41548;
  reg [31 : 0] v__h41766;
  reg [31 : 0] v__h41888;
  reg [31 : 0] v__h42189;
  reg [31 : 0] v__h42384;
  reg [31 : 0] v__h42482;
  reg [31 : 0] v__h44698;
  reg [31 : 0] v__h45005;
  reg [31 : 0] v__h45213;
  reg [31 : 0] v__h45252;
  reg [31 : 0] v__h45643;
  reg [31 : 0] v__h47031;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56,
		CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51,
		CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988,
		IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997,
		IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534,
		IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882,
		IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886,
		_theResult___fst__h10451,
		_theResult___fst__h30508,
		_theResult___fst__h44452,
		q1__h29204,
		q1__h42554,
		x__h23209,
		x__h25595,
		x__h28554,
		x__h29265,
		x__h40585;
  reg [63 : 0] _theResult_____2__h29355,
	       _theResult_____2__h42595,
	       _theResult___fst__h9281,
	       mem_req_wr_data_wdata__h6050;
  reg [7 : 0] fabric_2_strb__h5650, mem_req_wr_data_wstrb__h6051;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5992, size_val__h42031;
  reg CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18,
      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19,
      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d410,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d419,
      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d424,
      IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432,
      IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342;
  wire [128 : 0] IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1135,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640,
		 y__h10506;
  wire [127 : 0] IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d806,
		 IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1114,
		 IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d647,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d651,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d655,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d659,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d663,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d667,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d671,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d675,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d679,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d683,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d687,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d691,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d695,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d699,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d703,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d707,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d727,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d731,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d735,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d739,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d743,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d747,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d751,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d755,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d767,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d771,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d775,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d779,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d787,
		 SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d791,
		 _theResult___fst__h40556,
		 new_st_val_128__h29356,
		 new_st_val_128__h42596,
		 result__h10453,
		 result__h10455,
		 result__h23220,
		 result__h23258,
		 result__h23291,
		 result__h23324,
		 result__h23357,
		 result__h23390,
		 result__h23423,
		 result__h23456,
		 result__h23489,
		 result__h23522,
		 result__h23555,
		 result__h23588,
		 result__h23621,
		 result__h23654,
		 result__h23687,
		 result__h23720,
		 result__h23775,
		 result__h23808,
		 result__h23841,
		 result__h23874,
		 result__h23907,
		 result__h23940,
		 result__h23973,
		 result__h24006,
		 result__h24053,
		 result__h24086,
		 result__h24119,
		 result__h24152,
		 result__h40558,
		 result__h40596,
		 result__h40632,
		 result__h40665,
		 result__h40698,
		 result__h40731,
		 result__h40764,
		 result__h40797,
		 result__h40830,
		 result__h40893,
		 result__h40926,
		 result__h40959,
		 result__h40992,
		 result__h41043,
		 result__h41076,
		 result__h42824,
		 result__h43532,
		 result__h43564,
		 result__h43596,
		 result__h43628,
		 result__h43660,
		 result__h43692,
		 result__h43724,
		 result__h43756,
		 result__h43788,
		 result__h43820,
		 result__h43852,
		 result__h43884,
		 result__h43916,
		 result__h43948,
		 result__h43980,
		 result__h44034,
		 result__h44066,
		 result__h44098,
		 result__h44130,
		 result__h44162,
		 result__h44194,
		 result__h44226,
		 result__h44258,
		 result__h44304,
		 result__h44336,
		 result__h44368,
		 result__h44400,
		 result__h44454,
		 result__h44483,
		 word128__h40451,
		 x__h42590;
  wire [96 : 0] cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55,
		cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1;
  wire [73 : 0] cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16;
  wire [63 : 0] IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1014,
		IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1707,
		IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016,
		_theResult___fst__h8917,
		_theResult___fst__h8988,
		_theResult___snd_fst__h8919,
		_theResult___snd_fst__h8990,
		_theResult___snd_fst__h9505,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q41,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q42,
		cline_fabric_addr__h37157,
		lev_0_pte_pa__h35957,
		lev_0_pte_pa_w64_fa__h35959,
		lev_1_PTN_pa__h34902,
		lev_1_pte_pa__h34904,
		lev_1_pte_pa_w64_fa__h34906,
		lev_2_pte_pa__h33875,
		lev_2_pte_pa_w64_fa__h33877,
		new_st_val_64__h29361,
		new_st_val_64__h29453,
		new_st_val_64__h30599,
		new_st_val_64__h30603,
		new_st_val_64__h30607,
		new_st_val_64__h30611,
		new_st_val_64__h30616,
		new_st_val_64__h30622,
		new_st_val_64__h30627,
		new_st_val_64__h42601,
		new_st_val_64__h42693,
		new_st_val_64__h44545,
		new_st_val_64__h44549,
		new_st_val_64__h44553,
		new_st_val_64__h44557,
		new_st_val_64__h44562,
		new_st_val_64__h44568,
		new_st_val_64__h44573,
		pa___1__h9287,
		pa___1__h9336,
		pa___1__h9405,
		pte___1__h9554,
		pte___1__h9582,
		pte___2__h9279,
		satp_pa__h4617,
		value__h9599,
		vpn_0_pa__h35956,
		vpn_1_pa__h34903,
		vpn_2_pa__h33874,
		w1___1__h29420,
		w1___1__h42660,
		w1__h29211,
		w1__h42561,
		w2__h29213,
		word64__h5972,
		x0585_BITS_127_TO_64__q75,
		x0585_BITS_63_TO_0__q60,
		x1_avValue_pa__h8828,
		x__h29359,
		x__h42599;
  wire [55 : 0] x__h34998, x__h7997, x__h9290, x__h9339, x__h9408;
  wire [31 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q37,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q38,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q39,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q40,
		cache_rg_st_amo_val_BITS_31_TO_0__q53,
		q12554_BITS_31_TO_0__q87,
		q19204_BITS_31_TO_0__q52,
		x0585_BITS_127_TO_96__q82,
		x0585_BITS_31_TO_0__q59,
		x0585_BITS_63_TO_32__q67,
		x0585_BITS_95_TO_64__q74;
  wire [15 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3,
		cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q21,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q23,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q25,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q27,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q29,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q31,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q33,
		cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q34,
		x0585_BITS_111_TO_96__q81,
		x0585_BITS_127_TO_112__q85,
		x0585_BITS_15_TO_0__q58,
		x0585_BITS_31_TO_16__q64,
		x0585_BITS_47_TO_32__q66,
		x0585_BITS_63_TO_48__q70,
		x0585_BITS_79_TO_64__q73,
		x0585_BITS_95_TO_80__q78;
  wire [7 : 0] cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8,
	       cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q22,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q24,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q26,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q28,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q30,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q32,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q35,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q36,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q43,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q44,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q45,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q46,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q47,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q48,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q49,
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q50,
	       mem_req_wr_addr_awlen__h5956,
	       strobe64__h5973,
	       strobe64__h5977,
	       strobe64__h5981,
	       strobe64__h5985,
	       x0585_BITS_103_TO_96__q80,
	       x0585_BITS_111_TO_104__q83,
	       x0585_BITS_119_TO_112__q84,
	       x0585_BITS_127_TO_120__q86,
	       x0585_BITS_15_TO_8__q61,
	       x0585_BITS_23_TO_16__q62,
	       x0585_BITS_31_TO_24__q63,
	       x0585_BITS_39_TO_32__q65,
	       x0585_BITS_47_TO_40__q68,
	       x0585_BITS_55_TO_48__q69,
	       x0585_BITS_63_TO_56__q71,
	       x0585_BITS_71_TO_64__q72,
	       x0585_BITS_79_TO_72__q76,
	       x0585_BITS_7_TO_0__q57,
	       x0585_BITS_87_TO_80__q77,
	       x0585_BITS_95_TO_88__q79;
  wire [5 : 0] access_exc_code__h5326,
	       exc_code___1__h9179,
	       shift_bits__h5673,
	       x1_avValue_exc_code__h8829;
  wire [4 : 0] IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d528,
	       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d527,
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d530,
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d531;
  wire [3 : 0] cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54;
  wire IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d428,
       IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d438,
       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d437,
       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d441,
       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d409,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d418,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d423,
       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d427,
       NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412,
       NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d1464,
       NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d452,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1266,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1329,
       NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1371,
       NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1272,
       NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311,
       NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d551,
       NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d216,
       NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d520,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1120,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1194,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1200,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1208,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d560,
       NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d897,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1118,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1163,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1171,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1178,
       NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d895,
       NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d479,
       NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d499,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1140,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1147,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1155,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1161,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1176,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1183,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1190,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1198,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1212,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1217,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1221,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d241,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d443,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d484,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d545,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d566,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d574,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d816,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d824,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d831,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d838,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d846,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d856,
       NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d902,
       NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223,
       NOT_req_width_code_EQ_0b0_798_799_AND_NOT_req__ETC___d1818,
       cache_cfg_verbosity_read__12_ULE_1___d113,
       cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1304,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1314,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1316,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1354,
       cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360,
       cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276,
       cache_ram_state_and_ctag_cset_b_read__71_BIT_5_ETC___d552,
       cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d842,
       cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d478,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d515,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d563,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d643,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d813,
       cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d835,
       cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1121,
       cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1127,
       cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d561,
       cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d898,
       cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d487,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506,
       cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d524,
       cache_rg_priv_66_ULE_0b1___d167,
       cache_rg_width_code_79_EQ_4_36_OR_cache_rg_amo_ETC___d375,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d854,
       cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d208,
       cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d481,
       lrsc_result__h24726,
       mem_req_wr_second_data_wuser__h5783,
       req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1834,
       req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1839,
       y__h9087;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst = cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst = cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = !EN_req && cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put =
	     !EN_req && cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = !EN_req ;
  assign CAN_FIRE_tlb_flush = !EN_req ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_awid
  assign mem_master_awid =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[96:93] ;

  // value method mem_master_aw_awaddr
  assign mem_master_awaddr =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[92:29] ;

  // value method mem_master_aw_awlen
  assign mem_master_awlen =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[28:21] ;

  // value method mem_master_aw_awsize
  assign mem_master_awsize =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[20:18] ;

  // value method mem_master_aw_awburst
  assign mem_master_awburst =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[17:16] ;

  // value method mem_master_aw_awlock
  assign mem_master_awlock =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[15] ;

  // value method mem_master_aw_awcache
  assign mem_master_awcache =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[14:11] ;

  // value method mem_master_aw_awprot
  assign mem_master_awprot =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[10:8] ;

  // value method mem_master_aw_awqos
  assign mem_master_awqos =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[7:4] ;

  // value method mem_master_aw_awregion
  assign mem_master_awregion =
	     cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1[3:0] ;

  // value method mem_master_aw_awvalid
  assign mem_master_awvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // action method mem_master_aw_awready
  assign CAN_FIRE_mem_master_aw_awready = 1'd1 ;
  assign WILL_FIRE_mem_master_aw_awready = 1'd1 ;

  // value method mem_master_w_wdata
  assign mem_master_wdata =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[73:10] ;

  // value method mem_master_w_wstrb
  assign mem_master_wstrb =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[9:2] ;

  // value method mem_master_w_wlast
  assign mem_master_wlast =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[1] ;

  // value method mem_master_w_wuser
  assign mem_master_wuser =
	     cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16[0] ;

  // value method mem_master_w_wvalid
  assign mem_master_wvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // action method mem_master_w_wready
  assign CAN_FIRE_mem_master_w_wready = 1'd1 ;
  assign WILL_FIRE_mem_master_w_wready = 1'd1 ;

  // action method mem_master_b_bflit
  assign CAN_FIRE_mem_master_b_bflit = 1'd1 ;
  assign WILL_FIRE_mem_master_b_bflit = mem_master_bvalid ;

  // value method mem_master_b_bready
  assign mem_master_bready = !cache_master_xactor_shim_bff_rv[6] ;

  // value method mem_master_ar_arid
  assign mem_master_arid =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[96:93] ;

  // value method mem_master_ar_araddr
  assign mem_master_araddr =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[92:29] ;

  // value method mem_master_ar_arlen
  assign mem_master_arlen =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[28:21] ;

  // value method mem_master_ar_arsize
  assign mem_master_arsize =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[20:18] ;

  // value method mem_master_ar_arburst
  assign mem_master_arburst =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[17:16] ;

  // value method mem_master_ar_arlock
  assign mem_master_arlock =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[15] ;

  // value method mem_master_ar_arcache
  assign mem_master_arcache =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[14:11] ;

  // value method mem_master_ar_arprot
  assign mem_master_arprot =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[10:8] ;

  // value method mem_master_ar_arqos
  assign mem_master_arqos =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[7:4] ;

  // value method mem_master_ar_arregion
  assign mem_master_arregion =
	     cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55[3:0] ;

  // value method mem_master_ar_arvalid
  assign mem_master_arvalid =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // action method mem_master_ar_arready
  assign CAN_FIRE_mem_master_ar_arready = 1'd1 ;
  assign WILL_FIRE_mem_master_ar_arready = 1'd1 ;

  // action method mem_master_r_rflit
  assign CAN_FIRE_mem_master_r_rflit = 1'd1 ;
  assign WILL_FIRE_mem_master_r_rflit = mem_master_rvalid ;

  // value method mem_master_r_rready
  assign mem_master_rready = !cache_master_xactor_shim_rff_rv[72] ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd53),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd129),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     !cache_master_xactor_clearing &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 !=
	     4'd15 &&
	     !cache_master_xactor_shim_wff_rv[74] &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     !cache_master_xactor_shim_awff_rv[97] &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_shift_sb_to_load_delay
  assign CAN_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;
  assign WILL_FIRE_RL_cache_rl_shift_sb_to_load_delay = 1'd1 ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__12_ULE_1___d113 ||
	      cache_tlb$RDY_lookup) &&
	     (!cache_crg_commit$port1__read ||
	      NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d443) &&
	     NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d452 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     cache_rg_state == 5'd5 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d1464 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     CAN_FIRE_RL_cache_rl_io_read_req ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     CAN_FIRE_RL_cache_rl_io_write_req ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] != 5'b00010 &&
	     cache_rg_amo_funct7[6:2] != 5'b00011 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     CAN_FIRE_RL_cache_rl_io_AMO_op_req ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_aw_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_aw_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     cache_master_xactor_ug_master_u_aw_dropWire$whas &&
	     !cache_master_xactor_shim_awff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_aw_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_aw_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_w_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     cache_master_xactor_ug_master_u_w_dropWire$whas &&
	     !cache_master_xactor_shim_wff_rv$port1__read[74] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_w_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     cache_master_xactor_ug_master_u_w_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ;

  // rule RL_cache_master_xactor_ug_master_u_b_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     cache_master_xactor_ug_master_u_b_putWire$whas &&
	     cache_master_xactor_shim_bff_rv[6] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_b_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     !cache_master_xactor_shim_bff_rv[6] &&
	     cache_master_xactor_ug_master_u_b_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_bff_rv$port1__read[6] ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_master_xactor_ug_master_u_r_warnDoPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     cache_master_xactor_ug_master_u_r_putWire$whas &&
	     cache_master_xactor_shim_rff_rv[72] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut ;

  // rule RL_cache_master_xactor_ug_master_u_r_doPut
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     !cache_master_xactor_shim_rff_rv[72] &&
	     cache_master_xactor_ug_master_u_r_putWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1266 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1329 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1371 &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_read_rsp ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_f_fabric_write_reqs$FULL_N) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     CAN_FIRE_RL_cache_rl_io_AMO_read_rsp ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     !cache_master_xactor_clearing &&
	     !cache_master_xactor_shim_arff_rv[97] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 ==
	     4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill && !EN_req ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     !EN_req &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop && !EN_req ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !EN_req && !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq && !EN_req ;

  // rule RL_cache_master_xactor_ug_master_u_ar_setPeek
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_setPeek ;

  // rule RL_cache_master_xactor_ug_master_u_ar_warnDoDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     cache_master_xactor_ug_master_u_ar_dropWire$whas &&
	     !cache_master_xactor_shim_arff_rv$port1__read[97] ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop ;

  // rule RL_cache_master_xactor_ug_master_u_ar_doDrop
  assign CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     cache_master_xactor_ug_master_u_ar_dropWire$whas ;
  assign WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ;

  // rule RL_cache_master_xactor_do_clear
  assign CAN_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;
  assign WILL_FIRE_RL_cache_master_xactor_do_clear =
	     cache_master_xactor_clearing ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d574 ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132 ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     EN_req &&
	     (req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1834 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d902 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_798_799_AND_NOT_req__ETC___d1818 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1272 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d856 ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d566 ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_17 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d524 ||
	      !cache_crg_commit$port1__read) ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1314 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;
  assign MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 =
	     cache_ctr_wr_rsps_pending_outrg + 4'd1 ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 = { 1'd0, q1__h42554 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 = { 1'd0, x__h40585 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 =
	     { cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d643,
	       IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d806 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
	       x__h42590 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h8828,
	       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1135 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 =
	     { 5'd16, lev_1_pte_pa_w64_fa__h34906, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 =
	     { 5'd16, lev_0_pte_pa_w64_fa__h35959, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 =
	     { 5'd16, cache_rg_pa, 8'd0, size_val__h42031, 18'd65536 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 =
	     { 5'd16, lev_2_pte_pa_w64_fa__h33877, 29'd851968 } ;
  assign MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5 =
	     { 5'd16, cline_fabric_addr__h37157, 29'd15532032 } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 =
	     { 1'd1, cache_f_fabric_second_write_reqs$D_OUT } ;
  assign MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 =
	     { 1'd1,
	       mem_req_wr_data_wdata__h6050,
	       mem_req_wr_data_wstrb__h6051,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5783 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { 1'd1, cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
	       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1114 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     { cache_master_xactor_shim_rff_rv$port1__read[0],
	       cache_master_xactor_shim_rff_rv$port1__read[67:4],
	       cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_2 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       exc_code___1__h9179 :
	       access_exc_code__h5326 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     cache_crg_commit$port1__read ?
	       x1_avValue_exc_code__h8829 :
	       6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_2 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       { 128'd0, lrsc_result__h24726 } :
	       { cache_rg_width_code == 3'd4 &&
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[128],
		 q1__h29204 } ;
  assign MUX_cache_rg_lrsc_valid$write_1__VAL_2 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h8917 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h34902 + vpn_1_pa__h34903 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h34902 + vpn_0_pa__h35956 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h4617 + vpn_2_pa__h33874 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044 } ;
  assign MUX_cache_rg_state$write_1__VAL_3 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (NOT_req_width_code_EQ_0b0_798_799_AND_NOT_req__ETC___d1818 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_6 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       5'd15 :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[7] &&
		 !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd8 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[22:14] ==
		       9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_10 =
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0) ?
	       ((!cache_master_xactor_shim_rff_rv$port1__read[4] ||
		 !cache_master_xactor_shim_rff_rv$port1__read[5] &&
		 cache_master_xactor_shim_rff_rv$port1__read[6]) ?
		  5'd4 :
		  ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		    !cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		     5'd7 :
		     ((cache_master_xactor_shim_rff_rv$port1__read[31:23] !=
		       9'd0 ||
		       cache_master_xactor_shim_rff_rv$port1__read[22:14] !=
		       9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     cache_crg_commit$port1__read ?
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d531 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h8919 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_master_xactor_ug_master_u_b_putWire$wget =
	     { mem_master_bid, mem_master_bresp } ;
  assign cache_master_xactor_ug_master_u_b_putWire$whas =
	     mem_master_bvalid && !cache_master_xactor_shim_bff_rv[6] ;
  assign cache_master_xactor_ug_master_u_r_putWire$wget =
	     { mem_master_rid,
	       mem_master_rdata,
	       mem_master_rresp,
	       mem_master_rlast,
	       mem_master_ruser } ;
  assign cache_master_xactor_ug_master_u_r_putWire$whas =
	     mem_master_rvalid && !cache_master_xactor_shim_rff_rv[72] ;
  assign cache_dw_valid$whas =
	     (WILL_FIRE_RL_cache_rl_io_read_rsp ||
	      WILL_FIRE_RL_cache_rl_io_AMO_read_rsp) &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d574 ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or cache_rg_ld_val)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget = cache_rg_ld_val;
      default: cache_dw_output_ld_val$wget =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_output_ld_val$wset_1__SEL_3 ?
	       129'd0 :
	       cache_rg_st_amo_val ;
  assign cache_master_xactor_ug_master_u_aw_dropWire$whas =
	     cache_master_xactor_shim_awff_rv$port1__read[97] &&
	     mem_master_awready ;
  assign cache_master_xactor_ug_master_u_w_dropWire$whas =
	     cache_master_xactor_shim_wff_rv$port1__read[74] &&
	     mem_master_wready ;
  assign cache_master_xactor_ug_master_u_ar_dropWire$whas =
	     cache_master_xactor_shim_arff_rv$port1__read[97] &&
	     mem_master_arready ;
  assign cache_crg_commit$port1__read = EN_commit || cache_crg_commit ;
  assign cache_crg_commit$port3__read =
	     !EN_req && cache_crg_commit$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port0__write_1 =
	     { 5'd16,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5956,
	       _theResult___snd_snd_fst_val__h5992,
	       18'd65536 } ;
  assign cache_master_xactor_shim_awff_rv$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_master_xactor_shim_awff_rv$port0__write_1 :
	       cache_master_xactor_shim_awff_rv ;
  assign cache_master_xactor_shim_awff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_aw_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port1__read ;
  assign cache_master_xactor_shim_awff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_awff_rv$port2__read ;
  assign cache_master_xactor_shim_wff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_master_xactor_shim_wff_rv$port0__write_1 =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_1 :
	       MUX_cache_master_xactor_shim_wff_rv$port0__write_1__VAL_2 ;
  assign cache_master_xactor_shim_wff_rv$port1__read =
	     cache_master_xactor_shim_wff_rv$EN_port0__write ?
	       cache_master_xactor_shim_wff_rv$port0__write_1 :
	       cache_master_xactor_shim_wff_rv ;
  assign cache_master_xactor_shim_wff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_w_doDrop ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port1__read ;
  assign cache_master_xactor_shim_wff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       75'h2AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_wff_rv$port2__read ;
  assign cache_master_xactor_shim_bff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_b_putWire$wget } ;
  assign cache_master_xactor_shim_bff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_b_doPut ?
	       cache_master_xactor_shim_bff_rv$port0__write_1 :
	       cache_master_xactor_shim_bff_rv ;
  assign cache_master_xactor_shim_bff_rv$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port1__read ;
  assign cache_master_xactor_shim_bff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       7'd42 :
	       cache_master_xactor_shim_bff_rv$port2__read ;
  assign cache_master_xactor_shim_arff_rv$EN_port0__write =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_2;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_3:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_master_xactor_shim_arff_rv$port0__write_1 =
	      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__VAL_5;
      default: cache_master_xactor_shim_arff_rv$port0__write_1 =
		   98'h2AAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_master_xactor_shim_arff_rv$port1__read =
	     cache_master_xactor_shim_arff_rv$EN_port0__write ?
	       cache_master_xactor_shim_arff_rv$port0__write_1 :
	       cache_master_xactor_shim_arff_rv ;
  assign cache_master_xactor_shim_arff_rv$port2__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_ar_doDrop ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port1__read ;
  assign cache_master_xactor_shim_arff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       98'h0AAAAAAAAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_arff_rv$port2__read ;
  assign cache_master_xactor_shim_rff_rv$port0__write_1 =
	     { 1'd1, cache_master_xactor_ug_master_u_r_putWire$wget } ;
  assign cache_master_xactor_shim_rff_rv$port1__read =
	     CAN_FIRE_RL_cache_master_xactor_ug_master_u_r_doPut ?
	       cache_master_xactor_shim_rff_rv$port0__write_1 :
	       cache_master_xactor_shim_rff_rv ;
  assign cache_master_xactor_shim_rff_rv$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_master_xactor_shim_rff_rv$port2__read =
	     cache_master_xactor_shim_rff_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port1__read ;
  assign cache_master_xactor_shim_rff_rv$port3__read =
	     cache_master_xactor_clearing ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       cache_master_xactor_shim_rff_rv$port2__read ;
  assign cache_crg_sb_to_load_delay$port0__write_1 =
	     { 1'd0, cache_crg_sb_to_load_delay[10:1] } ;
  assign cache_crg_sb_to_load_delay$EN_port1__write =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125 ;
  assign cache_crg_sb_to_load_delay$port2__read =
	     cache_crg_sb_to_load_delay$EN_port1__write ?
	       11'd2047 :
	       cache_crg_sb_to_load_delay$port0__write_1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_crg_commit
  assign cache_crg_commit$D_IN = cache_crg_commit$port3__read ;
  assign cache_crg_commit$EN = 1'b1 ;

  // register cache_crg_sb_to_load_delay
  assign cache_crg_sb_to_load_delay$D_IN =
	     cache_crg_sb_to_load_delay$port2__read ;
  assign cache_crg_sb_to_load_delay$EN = 1'b1 ;

  // register cache_ctr_wr_rsps_pending_inrg
  assign cache_ctr_wr_rsps_pending_inrg$D_IN =
	     cache_ctr_wr_rsps_pending_inrg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg$EN =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;

  // register cache_ctr_wr_rsps_pending_outrg
  assign cache_ctr_wr_rsps_pending_outrg$D_IN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ?
	       MUX_cache_ctr_wr_rsps_pending_outrg$write_1__VAL_1 :
	       cache_ctr_wr_rsps_pending_inrg ;
  assign cache_ctr_wr_rsps_pending_outrg$EN =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ||
	     WILL_FIRE_RL_cache_rl_discard_write_rsp ;

  // register cache_master_xactor_clearing
  assign cache_master_xactor_clearing$D_IN = !cache_master_xactor_clearing ;
  assign cache_master_xactor_clearing$EN =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ||
	     cache_master_xactor_clearing ;

  // register cache_master_xactor_shim_arff_rv
  assign cache_master_xactor_shim_arff_rv$D_IN =
	     cache_master_xactor_shim_arff_rv$port3__read ;
  assign cache_master_xactor_shim_arff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_awff_rv
  assign cache_master_xactor_shim_awff_rv$D_IN =
	     cache_master_xactor_shim_awff_rv$port3__read ;
  assign cache_master_xactor_shim_awff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_bff_rv
  assign cache_master_xactor_shim_bff_rv$D_IN =
	     cache_master_xactor_shim_bff_rv$port3__read ;
  assign cache_master_xactor_shim_bff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_rff_rv
  assign cache_master_xactor_shim_rff_rv$D_IN =
	     cache_master_xactor_shim_rff_rv$port3__read ;
  assign cache_master_xactor_shim_rff_rv$EN = 1'b1 ;

  // register cache_master_xactor_shim_wff_rv
  assign cache_master_xactor_shim_wff_rv$D_IN =
	     cache_master_xactor_shim_wff_rv$port3__read ;
  assign cache_master_xactor_shim_wff_rv$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = EN_req ;

  // register cache_rg_amo_funct7
  assign cache_rg_amo_funct7$D_IN = req_amo_funct7 ;
  assign cache_rg_amo_funct7$EN = EN_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__VAL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_exc_code$write_1__SEL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  MUX_cache_rg_exc_code$write_1__SEL_8 or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_2;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_4: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_8:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'b101010 /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	     EN_req &&
	     NOT_req_width_code_EQ_0b0_798_799_AND_NOT_req__ETC___d1818 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1272 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	       cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0) ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = EN_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_rg_ld_val$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_io_read_rsp or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_io_read_rsp:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d856 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN =
	     cache_master_xactor_shim_rff_rv$port1__read[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ;

  // register cache_rg_lower_word64_full
  assign cache_rg_lower_word64_full$D_IN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ;
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d824 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     MUX_cache_rg_lrsc_valid$write_1__VAL_2 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d566 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = EN_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = EN_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     EN_req ? req_addr : MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d545 ||
	     EN_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = EN_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_master_xactor_shim_arff_rv$port0__write_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	     !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = EN_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = EN_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     EN_req ? req_st_value : MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1217 ||
	     EN_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  MUX_cache_rg_state$write_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  EN_req or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  WILL_FIRE_RL_cache_rl_io_AMO_read_rsp or
	  MUX_cache_rg_state$write_1__VAL_6 or
	  WILL_FIRE_RL_cache_rl_io_read_rsp or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_10 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_state$write_1__SEL_17 or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_3:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_3;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    EN_req: cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_io_AMO_read_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    WILL_FIRE_RL_cache_rl_io_read_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_6;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_10;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    MUX_cache_rg_state$write_1__SEL_17:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d524 ||
	      !cache_crg_commit$port1__read) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     EN_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = EN_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5650,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5783 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_dw_output_ld_val$wset_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__SEL_2 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_output_ld_val$wset_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_2:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132 ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h9599 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_18 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       53'h0AAAAAAAAAAAAA ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       53'h0AAAAAAAAAAAAA /* unspecified value */  :
	       53'h0AAAAAAAAAAAAA /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d902 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_master_xactor_shim_rff_rv$port1__read[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_crg_commit$port1__read &&
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1314 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d428 =
	     (x1_avValue_pa__h8828[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 :
	       NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d427 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d438 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ||
	       IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 :
	       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d437 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d528 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       5'd9 :
	       IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d527 ;
  assign IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d806 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       x__h23209 :
	       x__h28554 ;
  assign IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1114 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       x__h25595 :
	       x__h29265 ;
  assign IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d1135 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044 } ;
  assign IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d437 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 &&
	       lrsc_result__h24726 ||
	       cache_f_fabric_write_reqs$FULL_N :
	       !cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       cache_rg_width_code_79_EQ_4_36_OR_cache_rg_amo_ETC___d375 &&
	       IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432 &&
	       IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 ;
  assign IF_cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_ETC___d527 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) ?
	       5'd12 :
	       ((!cache_ram_state_and_ctag_cset$DOB[52] ||
		 !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) ?
		  5'd9 :
		  5'd12) ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d441 =
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 ?
	       cache_tlb$RDY_lookup :
	       (NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d241 ||
		cache_tlb$RDY_insert && cache_tlb$RDY_lookup &&
		cache_f_pte_writebacks$FULL_N) &&
	       (!cache_soc_map$m_is_mem_addr ||
		IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d438) ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d530 =
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_ETC___d528 :
		  5'd13) ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d531 =
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d530 ;
  assign IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 =
	     x1_avValue_pa__h8828 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1014 =
	     (cache_rg_width_code == 3'd2) ?
	       { {32{q19204_BITS_31_TO_0__q52[31]}},
		 q19204_BITS_31_TO_0__q52 } :
	       q1__h29204[63:0] ;
  assign IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1707 =
	     (cache_rg_width_code == 3'd2) ?
	       { {32{q12554_BITS_31_TO_0__q87[31]}},
		 q12554_BITS_31_TO_0__q87 } :
	       q1__h42554[63:0] ;
  assign IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 =
	     (cache_rg_width_code == 3'd2) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q53[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q53 } :
	       cache_rg_st_amo_val[63:0] ;
  assign IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044 =
	     (cache_rg_width_code == 3'd4) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h29356 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d409 =
	     x1_avValue_pa__h8828[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d418 =
	     x1_avValue_pa__h8828[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d423 =
	     x1_avValue_pa__h8828[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 ;
  assign NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d427 =
	     x1_avValue_pa__h8828[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 ;
  assign NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d1464 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ;
  assign NOT_cache_f_reset_reqs_notEmpty__26_46_AND_cac_ETC___d452 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd3 &&
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) ||
	      cache_crg_sb_to_load_delay$port0__write_1 == 11'd0) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1266 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1329 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      ((!cache_master_xactor_shim_rff_rv$port1__read[7] &&
		!cache_master_xactor_shim_rff_rv$port1__read[5]) ?
		 !cache_master_xactor_shim_arff_rv[97] :
		 cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign NOT_cache_master_xactor_clearing_read__0_3_AND_ETC___d1371 =
	     !cache_master_xactor_clearing &&
	     cache_master_xactor_shim_rff_rv$port1__read[72] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	      !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	      cache_master_xactor_shim_rff_rv$port1__read[6] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	      !cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      cache_tlb$RDY_insert) ;
  assign NOT_cache_master_xactor_shim_rff_rv_port1__rea_ETC___d1272 =
	     !cache_master_xactor_shim_rff_rv$port1__read[4] ||
	     !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	     cache_master_xactor_shim_rff_rv$port1__read[6] ||
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) ||
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d551 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 ;
  assign NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d216 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d208) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d520 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1120 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1194 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1200 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1208 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d560 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 ;
  assign NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d897 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1118 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     (cache_rg_width_code == 3'd0 || cache_rg_width_code == 3'd1) ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1163 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1171 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1178 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d895 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ;
  assign NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d479 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d478 ;
  assign NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d499 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1125 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1121 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1132 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1127 ||
	      NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d897) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1140 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1147 =
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1155 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1161 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1163 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1176 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1171 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1183 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1178 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1190 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00011 &&
	     lrsc_result__h24726 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1198 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1194 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1200 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1212 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1208 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1217 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d897 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1221 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544 &&
	     !cache_soc_map$m_is_mem_addr &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d241 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h9279[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d443 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     (cache_rg_priv_66_ULE_0b1___d167 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130] ||
	      IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d441) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d484 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d479 &&
	     cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d481 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d479 &&
	     cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d481 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d545 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d566 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d563 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d574 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d544 &&
	     cache_soc_map$m_is_mem_addr &&
	     (MUX_cache_rg_lrsc_valid$write_1__VAL_2 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 &&
	      lrsc_result__h24726) ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d208 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d816 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d813 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d824 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d831 =
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d838 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d835 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d846 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d811 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d842 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 =
	     !cache_rg_priv_66_ULE_0b1___d167 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d499 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d856 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d854 ;
  assign NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d902 =
	     (!cache_rg_priv_66_ULE_0b1___d167 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$lookup[130]) &&
	     NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d850 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d898 ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_req_width_code_EQ_0b0_798_799_AND_NOT_req__ETC___d1818 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d647 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q36[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d651 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q49[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q49 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d655 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q35[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d659 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q50[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q50 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d663 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q32[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q32 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d667 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q48[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q48 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d671 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q30[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d675 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q47[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q47 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d679 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q28[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d683 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q46[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q46 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d687 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q26[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d691 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q45[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q45 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d695 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q24[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d699 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q44[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q44 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d703 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q22[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d707 =
	     { {120{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d727 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q34[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d731 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q33[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d735 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q31[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d739 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q29[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d743 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q27[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d747 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q25[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d751 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q23[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d755 =
	     { {112{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q21[15]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d767 =
	     { {96{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q40[31]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d771 =
	     { {96{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q39[31]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d775 =
	     { {96{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q38[31]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q38 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d779 =
	     { {96{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q37[31]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q37 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d787 =
	     { {64{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q42[63]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d791 =
	     { {64{cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q41[63]}},
	       cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q41 } ;
  assign _theResult___fst__h40556 =
	     (cache_rg_addr[2:0] == 3'd0) ? result__h40558 : 128'd0 ;
  assign _theResult___fst__h8917 =
	     cache_tlb$lookup[130] ? _theResult___fst__h8988 : cache_rg_addr ;
  assign _theResult___fst__h8988 =
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223) ?
	       cache_rg_addr :
	       _theResult___fst__h9281 ;
  assign _theResult___snd_fst__h8919 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h8990 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h8990 =
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223) ?
	       cache_tlb$lookup[129:66] :
	       _theResult___snd_fst__h9505 ;
  assign _theResult___snd_fst__h9505 =
	     (!pte___2__h9279[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010)) ?
	       pte___1__h9582 :
	       pte___2__h9279 ;
  assign access_exc_code__h5326 = MUX_cache_rg_exc_code$write_1__VAL_1 ;
  assign cache_cfg_verbosity_read__12_ULE_1___d113 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 =
	     cache_ctr_wr_rsps_pending_inrg -
	     cache_ctr_wr_rsps_pending_outrg ;
  assign cache_f_reset_reqs_i_notEmpty__25_AND_cache_f__ETC___d143 =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_f_reset_reqs$D_OUT || !cache_master_xactor_clearing) &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) ;
  assign cache_master_xactor_shim_arff_rvport1__read_B_ETC__q55 =
	     cache_master_xactor_shim_arff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_awff_rvport1__read_B_ETC__q1 =
	     cache_master_xactor_shim_awff_rv$port1__read[96:0] ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1304 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	      cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1314 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1316 =
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[31:23] == 9'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1354 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360 =
	     cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	     cache_master_xactor_shim_rff_rv$port1__read[4] &&
	     (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	      !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	     (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	      cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	     cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:36] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 =
	     cache_master_xactor_shim_rff_rv$port1__read[51:44] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 =
	     cache_master_xactor_shim_rff_rv$port1__read[59:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:52] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 =
	     cache_master_xactor_shim_rff_rv$port1__read[67:60] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 =
	     cache_master_xactor_shim_rff_rv$port1__read[11:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:4] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 =
	     cache_master_xactor_shim_rff_rv$port1__read[19:12] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 =
	     cache_master_xactor_shim_rff_rv$port1__read[27:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:20] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 =
	     cache_master_xactor_shim_rff_rv$port1__read[35:28] ;
  assign cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 =
	     cache_master_xactor_shim_rff_rv$port1__read[43:36] ;
  assign cache_master_xactor_shim_wff_rvport1__read_BI_ETC__q16 =
	     cache_master_xactor_shim_wff_rv$port1__read[73:0] ;
  assign cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h8828[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__71_BIT_5_ETC___d552 =
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct7[6:2] == 5'b00010 ||
	     NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d551 ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640 =
	     cache_ram_word128_set$DOB & y__h10506 ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q21 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:112] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q22 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[119:112] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q23 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[111:96] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q24 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[103:96] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q25 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:80] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q26 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[87:80] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q27 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[79:64] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q28 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[71:64] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q29 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:48] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q30 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[55:48] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q31 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[47:32] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q32 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[39:32] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q33 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:16] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q34 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[15:0] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q35 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[23:16] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q36 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[7:0] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q37 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:96] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q38 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:64] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q39 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:32] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q40 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:0] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q41 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:64] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q42 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:0] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q43 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:120] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q44 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[111:104] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q45 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:88] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q46 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[79:72] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q47 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:56] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q48 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[47:40] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q49 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[15:8] ;
  assign cache_ram_word128_set_b_read__69_AND_cache_ram_ETC__q50 =
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:24] ;
  assign cache_rg_amo_funct7_98_BITS_6_TO_2_99_EQ_0b10__ETC___d842 =
	     cache_rg_amo_funct7[6:2] == 5'b00010 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h8828 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d478 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d208 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d515 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d563 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__71_BIT_5_ETC___d552 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d561 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d643 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_rg_width_code == 3'd4 &&
	     cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[128] ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d813 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276 &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d835 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1121 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d1118 ||
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d1120 ;
  assign cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d1127 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351) ;
  assign cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d561 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_sa_ETC___d549 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 ||
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d560 ;
  assign cache_rg_op_93_EQ_1_44_OR_cache_rg_op_93_EQ_2__ETC___d898 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011) &&
	     NOT_cache_rg_op_93_EQ_2_96_97_OR_NOT_cache_rg__ETC___d895 ||
	     NOT_cache_rg_op_93_EQ_1_44_57_AND_NOT_cache_rg_ETC___d897 ;
  assign cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d216 ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223) ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d487 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_66_EQ_0b0_83_AND_NOT_cache_tlb_l_ETC___d217 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_69_BITS_59__ETC___d223) &&
	     cache_tlb$lookup[130] ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_66_EQ_0b0_83_70_OR_cache_tlb_ETC___d499 &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h9279[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) ;
  assign cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d524 =
	     cache_rg_priv_66_ULE_0b1___d167 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d226 ||
	     cache_rg_op_93_EQ_0_94_OR_cache_rg_op_93_EQ_2__ETC___d515 ||
	     NOT_cache_rg_op_93_EQ_0_94_95_AND_NOT_cache_rg_ETC___d520 ||
	     !cache_soc_map$m_is_mem_addr ;
  assign cache_rg_priv_66_ULE_0b1___d167 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q53 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_79_EQ_4_36_OR_cache_rg_amo_ETC___d375 =
	     cache_rg_width_code == 3'd4 ||
	     CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_6_ETC___d854 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct7[6:2] != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00011 ||
	      cache_rg_op != 2'd1 && cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276) ;
  assign cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d208 =
	     cache_tlb$lookup[67] | y__h9087 ;
  assign cache_tlb_lookup_cache_rg_satp_69_BITS_59_TO_4_ETC___d481 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cline_fabric_addr__h37157 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h9179 = x1_avValue_exc_code__h8829 ;
  assign lev_0_pte_pa__h35957 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h35959 = { lev_0_pte_pa__h35957[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h34902 = { 8'd0, x__h34998 } ;
  assign lev_1_pte_pa__h34904 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h34906 = { lev_1_pte_pa__h34904[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h33875 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h33877 = { lev_2_pte_pa__h33875[63:3], 3'b0 } ;
  assign lrsc_result__h24726 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_50_EQ_IF_cache_rg_priv_66_ULE_ETC___d351 ;
  assign mem_req_wr_addr_awlen__h5956 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5783 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h29356 = { 64'd0, x__h29359 } ;
  assign new_st_val_128__h42596 = { 64'd0, x__h42599 } ;
  assign new_st_val_64__h29361 = { 32'd0, _theResult_____2__h29355[31:0] } ;
  assign new_st_val_64__h29453 =
	     IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1014 +
	     IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ;
  assign new_st_val_64__h30599 = w1__h29211 ^ w2__h29213 ;
  assign new_st_val_64__h30603 = w1__h29211 & w2__h29213 ;
  assign new_st_val_64__h30607 = w1__h29211 | w2__h29213 ;
  assign new_st_val_64__h30611 =
	     (w1__h29211 < w2__h29213) ? w1__h29211 : w2__h29213 ;
  assign new_st_val_64__h30616 =
	     (w1__h29211 <= w2__h29213) ? w2__h29213 : w1__h29211 ;
  assign new_st_val_64__h30622 =
	     ((IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1014 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ^
	       64'h8000000000000000)) ?
	       w1__h29211 :
	       w2__h29213 ;
  assign new_st_val_64__h30627 =
	     ((IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1014 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ^
	       64'h8000000000000000)) ?
	       w2__h29213 :
	       w1__h29211 ;
  assign new_st_val_64__h42601 = { 32'd0, _theResult_____2__h42595[31:0] } ;
  assign new_st_val_64__h42693 =
	     IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1707 +
	     IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ;
  assign new_st_val_64__h44545 = w1__h42561 ^ w2__h29213 ;
  assign new_st_val_64__h44549 = w1__h42561 & w2__h29213 ;
  assign new_st_val_64__h44553 = w1__h42561 | w2__h29213 ;
  assign new_st_val_64__h44557 =
	     (w1__h42561 < w2__h29213) ? w1__h42561 : w2__h29213 ;
  assign new_st_val_64__h44562 =
	     (w1__h42561 <= w2__h29213) ? w2__h29213 : w1__h42561 ;
  assign new_st_val_64__h44568 =
	     ((IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1707 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ^
	       64'h8000000000000000)) ?
	       w1__h42561 :
	       w2__h29213 ;
  assign new_st_val_64__h44573 =
	     ((IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_IF_ETC___d1707 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_79_EQ_2_26_THEN_SEXT_ca_ETC___d1016 ^
	       64'h8000000000000000)) ?
	       w2__h29213 :
	       w1__h42561 ;
  assign pa___1__h9287 = { 8'd0, x__h9290 } ;
  assign pa___1__h9336 = { 8'd0, x__h9339 } ;
  assign pa___1__h9405 = { 8'd0, x__h9408 } ;
  assign pte___1__h9554 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h9582 =
	     { pte___2__h9279[63:8], 1'd1, pte___2__h9279[6:0] } ;
  assign pte___2__h9279 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h9554 ;
  assign q12554_BITS_31_TO_0__q87 = q1__h42554[31:0] ;
  assign q19204_BITS_31_TO_0__q52 = q1__h29204[31:0] ;
  assign req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1834 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1839 =
	     (req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1834 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__12_ULE_1___d113 ;
  assign result__h10453 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:0] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d787 ;
  assign result__h10455 =
	     cache_rg_is_unsigned ?
	       { 64'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:64] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d791 ;
  assign result__h23220 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d647 ;
  assign result__h23258 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d651 ;
  assign result__h23291 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d655 ;
  assign result__h23324 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d659 ;
  assign result__h23357 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d663 ;
  assign result__h23390 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d667 ;
  assign result__h23423 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d671 ;
  assign result__h23456 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d675 ;
  assign result__h23489 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d679 ;
  assign result__h23522 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d683 ;
  assign result__h23555 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d687 ;
  assign result__h23588 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d691 ;
  assign result__h23621 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d695 ;
  assign result__h23654 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d699 ;
  assign result__h23687 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d703 ;
  assign result__h23720 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d707 ;
  assign result__h23775 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d727 ;
  assign result__h23808 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d731 ;
  assign result__h23841 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d735 ;
  assign result__h23874 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d739 ;
  assign result__h23907 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d743 ;
  assign result__h23940 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d747 ;
  assign result__h23973 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d751 ;
  assign result__h24006 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d755 ;
  assign result__h24053 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d767 ;
  assign result__h24086 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d771 ;
  assign result__h24119 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d775 ;
  assign result__h24152 =
	     cache_rg_is_unsigned ?
	       { 96'd0,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d779 ;
  assign result__h40558 =
	     cache_rg_is_unsigned ?
	       word128__h40451 :
	       { {64{cache_rg_lower_word64$D_IN[63]}},
		 cache_rg_lower_word64$D_IN } ;
  assign result__h40596 =
	     cache_rg_is_unsigned ?
	       { 120'd0, cache_master_xactor_shim_rff_rv$port1__read[11:4] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q2 } ;
  assign result__h40632 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[19:12] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q5 } ;
  assign result__h40665 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[27:20] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q6 } ;
  assign result__h40698 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:28] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q8 } ;
  assign result__h40731 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[43:36] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q9 } ;
  assign result__h40764 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:44] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q12 } ;
  assign result__h40797 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[59:52] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q13 } ;
  assign result__h40830 =
	     cache_rg_is_unsigned ?
	       { 120'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:60] } :
	       { {120{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15[7]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q15 } ;
  assign result__h40893 =
	     cache_rg_is_unsigned ?
	       { 112'd0, cache_master_xactor_shim_rff_rv$port1__read[19:4] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q3 } ;
  assign result__h40926 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[35:20] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q7 } ;
  assign result__h40959 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[51:36] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q10 } ;
  assign result__h40992 =
	     cache_rg_is_unsigned ?
	       { 112'd0,
		 cache_master_xactor_shim_rff_rv$port1__read[67:52] } :
	       { {112{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14[15]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q14 } ;
  assign result__h41043 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[35:4] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q4 } ;
  assign result__h41076 =
	     cache_rg_is_unsigned ?
	       { 96'd0, cache_master_xactor_shim_rff_rv$port1__read[67:36] } :
	       { {96{cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11[31]}},
		 cache_master_xactor_shim_rff_rvport1__read_BI_ETC__q11 } ;
  assign result__h42824 =
	     { {120{x0585_BITS_7_TO_0__q57[7]}}, x0585_BITS_7_TO_0__q57 } ;
  assign result__h43532 =
	     { {120{x0585_BITS_15_TO_8__q61[7]}}, x0585_BITS_15_TO_8__q61 } ;
  assign result__h43564 =
	     { {120{x0585_BITS_23_TO_16__q62[7]}},
	       x0585_BITS_23_TO_16__q62 } ;
  assign result__h43596 =
	     { {120{x0585_BITS_31_TO_24__q63[7]}},
	       x0585_BITS_31_TO_24__q63 } ;
  assign result__h43628 =
	     { {120{x0585_BITS_39_TO_32__q65[7]}},
	       x0585_BITS_39_TO_32__q65 } ;
  assign result__h43660 =
	     { {120{x0585_BITS_47_TO_40__q68[7]}},
	       x0585_BITS_47_TO_40__q68 } ;
  assign result__h43692 =
	     { {120{x0585_BITS_55_TO_48__q69[7]}},
	       x0585_BITS_55_TO_48__q69 } ;
  assign result__h43724 =
	     { {120{x0585_BITS_63_TO_56__q71[7]}},
	       x0585_BITS_63_TO_56__q71 } ;
  assign result__h43756 =
	     { {120{x0585_BITS_71_TO_64__q72[7]}},
	       x0585_BITS_71_TO_64__q72 } ;
  assign result__h43788 =
	     { {120{x0585_BITS_79_TO_72__q76[7]}},
	       x0585_BITS_79_TO_72__q76 } ;
  assign result__h43820 =
	     { {120{x0585_BITS_87_TO_80__q77[7]}},
	       x0585_BITS_87_TO_80__q77 } ;
  assign result__h43852 =
	     { {120{x0585_BITS_95_TO_88__q79[7]}},
	       x0585_BITS_95_TO_88__q79 } ;
  assign result__h43884 =
	     { {120{x0585_BITS_103_TO_96__q80[7]}},
	       x0585_BITS_103_TO_96__q80 } ;
  assign result__h43916 =
	     { {120{x0585_BITS_111_TO_104__q83[7]}},
	       x0585_BITS_111_TO_104__q83 } ;
  assign result__h43948 =
	     { {120{x0585_BITS_119_TO_112__q84[7]}},
	       x0585_BITS_119_TO_112__q84 } ;
  assign result__h43980 =
	     { {120{x0585_BITS_127_TO_120__q86[7]}},
	       x0585_BITS_127_TO_120__q86 } ;
  assign result__h44034 =
	     { {112{x0585_BITS_15_TO_0__q58[15]}}, x0585_BITS_15_TO_0__q58 } ;
  assign result__h44066 =
	     { {112{x0585_BITS_31_TO_16__q64[15]}},
	       x0585_BITS_31_TO_16__q64 } ;
  assign result__h44098 =
	     { {112{x0585_BITS_47_TO_32__q66[15]}},
	       x0585_BITS_47_TO_32__q66 } ;
  assign result__h44130 =
	     { {112{x0585_BITS_63_TO_48__q70[15]}},
	       x0585_BITS_63_TO_48__q70 } ;
  assign result__h44162 =
	     { {112{x0585_BITS_79_TO_64__q73[15]}},
	       x0585_BITS_79_TO_64__q73 } ;
  assign result__h44194 =
	     { {112{x0585_BITS_95_TO_80__q78[15]}},
	       x0585_BITS_95_TO_80__q78 } ;
  assign result__h44226 =
	     { {112{x0585_BITS_111_TO_96__q81[15]}},
	       x0585_BITS_111_TO_96__q81 } ;
  assign result__h44258 =
	     { {112{x0585_BITS_127_TO_112__q85[15]}},
	       x0585_BITS_127_TO_112__q85 } ;
  assign result__h44304 =
	     { {96{x0585_BITS_31_TO_0__q59[31]}}, x0585_BITS_31_TO_0__q59 } ;
  assign result__h44336 =
	     { {96{x0585_BITS_63_TO_32__q67[31]}},
	       x0585_BITS_63_TO_32__q67 } ;
  assign result__h44368 =
	     { {96{x0585_BITS_95_TO_64__q74[31]}},
	       x0585_BITS_95_TO_64__q74 } ;
  assign result__h44400 =
	     { {96{x0585_BITS_127_TO_96__q82[31]}},
	       x0585_BITS_127_TO_96__q82 } ;
  assign result__h44454 =
	     { {64{x0585_BITS_63_TO_0__q60[63]}}, x0585_BITS_63_TO_0__q60 } ;
  assign result__h44483 =
	     { {64{x0585_BITS_127_TO_64__q75[63]}},
	       x0585_BITS_127_TO_64__q75 } ;
  assign satp_pa__h4617 = { 8'd0, x__h7997 } ;
  assign shift_bits__h5673 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5973 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5977 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5981 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5985 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign value__h9599 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h35956 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h34903 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h33874 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w1___1__h29420 = { 32'd0, q1__h29204[31:0] } ;
  assign w1___1__h42660 = { 32'd0, q1__h42554[31:0] } ;
  assign w1__h29211 =
	     (cache_rg_width_code == 3'd2) ?
	       w1___1__h29420 :
	       q1__h29204[63:0] ;
  assign w1__h42561 =
	     (cache_rg_width_code == 3'd2) ?
	       w1___1__h42660 :
	       q1__h42554[63:0] ;
  assign w2__h29213 =
	     (cache_rg_width_code == 3'd2) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word128__h40451 =
	     { 64'd0, cache_master_xactor_shim_rff_rv$port1__read[67:4] } ;
  assign word64__h5972 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5673 ;
  assign x0585_BITS_103_TO_96__q80 = x__h40585[103:96] ;
  assign x0585_BITS_111_TO_104__q83 = x__h40585[111:104] ;
  assign x0585_BITS_111_TO_96__q81 = x__h40585[111:96] ;
  assign x0585_BITS_119_TO_112__q84 = x__h40585[119:112] ;
  assign x0585_BITS_127_TO_112__q85 = x__h40585[127:112] ;
  assign x0585_BITS_127_TO_120__q86 = x__h40585[127:120] ;
  assign x0585_BITS_127_TO_64__q75 = x__h40585[127:64] ;
  assign x0585_BITS_127_TO_96__q82 = x__h40585[127:96] ;
  assign x0585_BITS_15_TO_0__q58 = x__h40585[15:0] ;
  assign x0585_BITS_15_TO_8__q61 = x__h40585[15:8] ;
  assign x0585_BITS_23_TO_16__q62 = x__h40585[23:16] ;
  assign x0585_BITS_31_TO_0__q59 = x__h40585[31:0] ;
  assign x0585_BITS_31_TO_16__q64 = x__h40585[31:16] ;
  assign x0585_BITS_31_TO_24__q63 = x__h40585[31:24] ;
  assign x0585_BITS_39_TO_32__q65 = x__h40585[39:32] ;
  assign x0585_BITS_47_TO_32__q66 = x__h40585[47:32] ;
  assign x0585_BITS_47_TO_40__q68 = x__h40585[47:40] ;
  assign x0585_BITS_55_TO_48__q69 = x__h40585[55:48] ;
  assign x0585_BITS_63_TO_0__q60 = x__h40585[63:0] ;
  assign x0585_BITS_63_TO_32__q67 = x__h40585[63:32] ;
  assign x0585_BITS_63_TO_48__q70 = x__h40585[63:48] ;
  assign x0585_BITS_63_TO_56__q71 = x__h40585[63:56] ;
  assign x0585_BITS_71_TO_64__q72 = x__h40585[71:64] ;
  assign x0585_BITS_79_TO_64__q73 = x__h40585[79:64] ;
  assign x0585_BITS_79_TO_72__q76 = x__h40585[79:72] ;
  assign x0585_BITS_7_TO_0__q57 = x__h40585[7:0] ;
  assign x0585_BITS_87_TO_80__q77 = x__h40585[87:80] ;
  assign x0585_BITS_95_TO_64__q74 = x__h40585[95:64] ;
  assign x0585_BITS_95_TO_80__q78 = x__h40585[95:80] ;
  assign x0585_BITS_95_TO_88__q79 = x__h40585[95:88] ;
  assign x1_avValue_exc_code__h8829 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct7[6:2] == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign x1_avValue_pa__h8828 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x__h29359 =
	     (cache_rg_width_code == 3'd2) ?
	       new_st_val_64__h29361 :
	       _theResult_____2__h29355 ;
  assign x__h34998 =
	     { cache_master_xactor_shim_rff_rv$port1__read[57:14], 12'b0 } ;
  assign x__h42590 =
	     (cache_rg_width_code == 3'd4) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h42596 ;
  assign x__h42599 =
	     (cache_rg_width_code == 3'd2) ?
	       new_st_val_64__h42601 :
	       _theResult_____2__h42595 ;
  assign x__h7997 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h9290 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h9339 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h9408 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign y__h10506 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__71_BITS__ETC___d276}} ;
  assign y__h9087 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5650 = 8'd0;
      3'b100: fabric_2_strb__h5650 = 8'b11111111;
      default: fabric_2_strb__h5650 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4: x__h28554 = 128'd1;
      default: x__h28554 = 128'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5992 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5992 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5992 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'd2, 3'd3: size_val__h42031 = cache_rg_width_code;
      default: size_val__h42031 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h9287 or pa___1__h9336 or pa___1__h9405)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h9281 = pa___1__h9287;
      2'd1: _theResult___fst__h9281 = pa___1__h9336;
      2'd2: _theResult___fst__h9281 = pa___1__h9405;
      2'd3: _theResult___fst__h9281 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5973 or
	  strobe64__h5977 or strobe64__h5981 or strobe64__h5985)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h6051 = strobe64__h5973;
      3'b001: mem_req_wr_data_wstrb__h6051 = strobe64__h5977;
      3'b010: mem_req_wr_data_wstrb__h6051 = strobe64__h5981;
      3'b011: mem_req_wr_data_wstrb__h6051 = strobe64__h5985;
      3'b100: mem_req_wr_data_wstrb__h6051 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h6051 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5972)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h6050 = word64__h5972;
      default: mem_req_wr_data_wdata__h6050 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 =
	      { cache_rg_st_amo_val[31:0], cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
      4'd15:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
      default: CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18 or
	  CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19 or
	  cache_rg_addr)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q17;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q18;
      3'd2:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 =
	      CASE_cache_rg_addr_BITS_3_TO_0_0x0_NOT_cache_r_ETC__q19;
      3'd3:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 =
	      (cache_rg_addr[3:0] == 4'h0) ?
		NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311 :
		cache_rg_addr[3:0] != 4'h8 ||
		NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
      default: IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342 =
		   cache_rg_width_code != 3'd4 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__71_B_ETC___d311;
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 =
	      IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342;
      default: CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20 =
		   cache_rg_amo_funct7[6:2] != 5'b10100 ||
		   IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_cach_ETC___d342;
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d423 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d424 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20;
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d424 =
		   NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d423;
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d418 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d419 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20;
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d419 =
		   NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d418;
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d409 or
	  CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d410 =
	      CASE_cache_rg_amo_funct7_BITS_6_TO_2_0b0_IF_ca_ETC__q20;
      4'd15:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d410 =
	      NOT_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_r_ETC___d409;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d428 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d410 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d419 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d424)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d410;
      3'd1:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d419;
      3'd2:
	  IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d424;
      default: IF_cache_rg_width_code_79_EQ_0_80_THEN_IF_IF_c_ETC___d432 =
		   cache_rg_width_code != 3'd3 ||
		   IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d428;
    endcase
  end
  always@(cache_rg_addr or result__h10453 or result__h10455)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h10451 = result__h10453;
      4'h8: _theResult___fst__h10451 = result__h10455;
      default: _theResult___fst__h10451 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d787 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d791)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h30508 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d787;
      4'h8:
	  _theResult___fst__h30508 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d791;
      default: _theResult___fst__h30508 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d767 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d771 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d775 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d779)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d767;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d771;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d775;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d779;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h24053 or
	  result__h24086 or result__h24119 or result__h24152)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 =
	      result__h24053;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 =
	      result__h24086;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 =
	      result__h24119;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 =
	      result__h24152;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d727 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d731 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d735 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d739 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d743 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d747 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d751 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d755)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d727;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d731;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d735;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d739;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d743;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d747;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d751;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d755;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h23775 or
	  result__h23808 or
	  result__h23841 or
	  result__h23874 or
	  result__h23907 or
	  result__h23940 or result__h23973 or result__h24006)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23775;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23808;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23841;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23874;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23907;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23940;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h23973;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
	      result__h24006;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d647 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d651 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d655 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d659 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d663 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d667 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d671 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d675 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d679 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d683 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d687 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d691 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d695 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d699 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d703 or
	  SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d707)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d647;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d651;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d655;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d659;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d663;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d667;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d671;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d675;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d679;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d683;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d687;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d691;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d695;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d699;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d703;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 =
	      SEXT_cache_ram_word128_set_b_read__69_AND_cach_ETC___d707;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886 or
	  _theResult___fst__h30508 or
	  cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h29204 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d874;
      3'd1:
	  q1__h29204 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d882;
      3'd2:
	  q1__h29204 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d886;
      3'd3: q1__h29204 = _theResult___fst__h30508;
      3'd4:
	  q1__h29204 =
	      cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:0];
      default: q1__h29204 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h23220 or
	  result__h23258 or
	  result__h23291 or
	  result__h23324 or
	  result__h23357 or
	  result__h23390 or
	  result__h23423 or
	  result__h23456 or
	  result__h23489 or
	  result__h23522 or
	  result__h23555 or
	  result__h23588 or
	  result__h23621 or
	  result__h23654 or result__h23687 or result__h23720)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23220;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23258;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23291;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23324;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23357;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23390;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23423;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23456;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23489;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23522;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23555;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23588;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23621;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23654;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23687;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 =
	      result__h23720;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784 or
	  _theResult___fst__h10451 or
	  cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h23209 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d724;
      3'd1:
	  x__h23209 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d764;
      3'd2:
	  x__h23209 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d784;
      3'd3: x__h23209 = _theResult___fst__h10451;
      3'd4:
	  x__h23209 =
	      cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640[127:0];
      default: x__h23209 = 128'd0;
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
	      { cache_rg_st_amo_val[15:0], cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:16],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:24],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:32],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:40],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:48],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:56],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:72],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:80],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:88],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:96],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:104],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:112],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_ram_word128_set$DOB[127:120],
		cache_rg_st_amo_val[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 =
	      { cache_rg_st_amo_val[7:0], cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { cache_ram_word128_set$DOB[127:64],
		cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
	      { cache_rg_st_amo_val[63:0], cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997 or
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h25595 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d971;
      3'd1:
	  x__h25595 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d988;
      3'd2:
	  x__h25595 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d997;
      3'd3:
	  x__h25595 = CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q51;
      3'd4: x__h25595 = cache_rg_st_amo_val[127:0];
      default: x__h25595 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  new_st_val_64__h30627 or
	  new_st_val_64__h29453 or
	  w2__h29213 or
	  new_st_val_64__h30599 or
	  new_st_val_64__h30607 or
	  new_st_val_64__h30603 or
	  new_st_val_64__h30622 or
	  new_st_val_64__h30611 or new_st_val_64__h30616)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0: _theResult_____2__h29355 = new_st_val_64__h29453;
      5'b00001: _theResult_____2__h29355 = w2__h29213;
      5'b00100: _theResult_____2__h29355 = new_st_val_64__h30599;
      5'b01000: _theResult_____2__h29355 = new_st_val_64__h30607;
      5'b01100: _theResult_____2__h29355 = new_st_val_64__h30603;
      5'b10000: _theResult_____2__h29355 = new_st_val_64__h30622;
      5'b11000: _theResult_____2__h29355 = new_st_val_64__h30611;
      5'b11100: _theResult_____2__h29355 = new_st_val_64__h30616;
      default: _theResult_____2__h29355 = new_st_val_64__h30627;
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[31:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[31:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 =
	      { IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[31:0],
		cache_ram_word128_set$DOB[95:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
	      { IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[15:0],
		cache_ram_word128_set$DOB[111:0] };
      default: IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:8],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:16],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:24],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:32],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:40],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:48],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:56],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:72],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:80],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:88],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:96],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:104],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:112],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { cache_ram_word128_set$DOB[127:120],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 =
	      { IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[7:0],
		cache_ram_word128_set$DOB[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h8828 or
	  cache_ram_word128_set$DOB or
	  IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044)
  begin
    case (x1_avValue_pa__h8828[3:0])
      4'h0:
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54 =
	      { cache_ram_word128_set$DOB[127:64],
		IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[63:0] };
      4'h8:
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54 =
	      { IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044[63:0],
		cache_ram_word128_set$DOB[63:0] };
      default: CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54 =
		   cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set$DOB or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094 or
	  IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103 or
	  CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54 or
	  IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h29265 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1077;
      3'd1:
	  x__h29265 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1094;
      3'd2:
	  x__h29265 =
	      IF_IF_cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_ETC___d1103;
      3'd3:
	  x__h29265 = CASE_x1_avValue_pa828_BITS_3_TO_0_0x0_cache_ra_ETC__q54;
      3'd4:
	  x__h29265 =
	      IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044;
      default: x__h29265 = cache_ram_word128_set$DOB[127:0];
    endcase
  end
  always@(cache_rg_addr or
	  result__h40893 or
	  result__h40926 or result__h40959 or result__h40992)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 =
	      result__h40893;
      3'd2:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 =
	      result__h40926;
      3'd4:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 =
	      result__h40959;
      3'd6:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 =
	      result__h40992;
      default: IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h40596 or
	  result__h40632 or
	  result__h40665 or
	  result__h40698 or
	  result__h40731 or
	  result__h40764 or result__h40797 or result__h40830)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40596;
      3'd1:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40632;
      3'd2:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40665;
      3'd3:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40698;
      3'd4:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40731;
      3'd5:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40764;
      3'd6:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40797;
      3'd7:
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 =
	      result__h40830;
    endcase
  end
  always@(cache_rg_addr or result__h41043 or result__h41076)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56 =
	      result__h41043;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56 =
	      result__h41076;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56 =
		   128'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534 or
	  IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56 or
	  _theResult___fst__h40556 or word128__h40451)
  begin
    case (cache_rg_width_code)
      3'd0:
	  x__h40585 =
	      IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1534;
      3'd1:
	  x__h40585 =
	      IF_cache_rg_addr_77_BITS_2_TO_0_486_EQ_0_487_T_ETC___d1554;
      3'd2:
	  x__h40585 = CASE_cache_rg_addr_BITS_2_TO_0_0_result1043_4__ETC__q56;
      3'd3: x__h40585 = _theResult___fst__h40556;
      3'd4: x__h40585 = word128__h40451;
      default: x__h40585 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or result__h44454 or result__h44483)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h44452 = result__h44454;
      4'h8: _theResult___fst__h44452 = result__h44483;
      default: _theResult___fst__h44452 = 128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h44304 or
	  result__h44336 or result__h44368 or result__h44400)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 =
	      result__h44304;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 =
	      result__h44336;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 =
	      result__h44368;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 =
	      result__h44400;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h44034 or
	  result__h44066 or
	  result__h44098 or
	  result__h44130 or
	  result__h44162 or
	  result__h44194 or result__h44226 or result__h44258)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44034;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44066;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44098;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44130;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44162;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44194;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44226;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
	      result__h44258;
      default: IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 =
		   128'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result__h42824 or
	  result__h43532 or
	  result__h43564 or
	  result__h43596 or
	  result__h43628 or
	  result__h43660 or
	  result__h43692 or
	  result__h43724 or
	  result__h43756 or
	  result__h43788 or
	  result__h43820 or
	  result__h43852 or
	  result__h43884 or
	  result__h43916 or result__h43948 or result__h43980)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h42824;
      4'h1:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43532;
      4'h2:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43564;
      4'h3:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43596;
      4'h4:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43628;
      4'h5:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43660;
      4'h6:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43692;
      4'h7:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43724;
      4'h8:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43756;
      4'h9:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43788;
      4'hA:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43820;
      4'hB:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43852;
      4'hC:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43884;
      4'hD:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43916;
      4'hE:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43948;
      4'hF:
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 =
	      result__h43980;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680 or
	  IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692 or
	  _theResult___fst__h44452 or x__h40585)
  begin
    case (cache_rg_width_code)
      3'd0:
	  q1__h42554 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1656;
      3'd1:
	  q1__h42554 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1680;
      3'd2:
	  q1__h42554 =
	      IF_cache_rg_addr_77_BITS_3_TO_0_81_EQ_0x0_82_T_ETC___d1692;
      3'd3: q1__h42554 = _theResult___fst__h44452;
      3'd4: q1__h42554 = x__h40585;
      default: q1__h42554 = 128'd0;
    endcase
  end
  always@(cache_rg_amo_funct7 or
	  new_st_val_64__h44573 or
	  new_st_val_64__h42693 or
	  w2__h29213 or
	  new_st_val_64__h44545 or
	  new_st_val_64__h44553 or
	  new_st_val_64__h44549 or
	  new_st_val_64__h44568 or
	  new_st_val_64__h44557 or new_st_val_64__h44562)
  begin
    case (cache_rg_amo_funct7[6:2])
      5'b0: _theResult_____2__h42595 = new_st_val_64__h42693;
      5'b00001: _theResult_____2__h42595 = w2__h29213;
      5'b00100: _theResult_____2__h42595 = new_st_val_64__h44545;
      5'b01000: _theResult_____2__h42595 = new_st_val_64__h44553;
      5'b01100: _theResult_____2__h42595 = new_st_val_64__h44549;
      5'b10000: _theResult_____2__h42595 = new_st_val_64__h44568;
      5'b11000: _theResult_____2__h42595 = new_st_val_64__h44557;
      5'b11100: _theResult_____2__h42595 = new_st_val_64__h44562;
      default: _theResult_____2__h42595 = new_st_val_64__h44573;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_crg_commit <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY 11'd0;
	cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY 7'd42;
	cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	    75'h2AAAAAAAAAAAAAAAAAA;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_crg_commit$EN)
	  cache_crg_commit <= `BSV_ASSIGNMENT_DELAY cache_crg_commit$D_IN;
	if (cache_crg_sb_to_load_delay$EN)
	  cache_crg_sb_to_load_delay <= `BSV_ASSIGNMENT_DELAY
	      cache_crg_sb_to_load_delay$D_IN;
	if (cache_ctr_wr_rsps_pending_inrg$EN)
	  cache_ctr_wr_rsps_pending_inrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_inrg$D_IN;
	if (cache_ctr_wr_rsps_pending_outrg$EN)
	  cache_ctr_wr_rsps_pending_outrg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_outrg$D_IN;
	if (cache_master_xactor_clearing$EN)
	  cache_master_xactor_clearing <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_clearing$D_IN;
	if (cache_master_xactor_shim_arff_rv$EN)
	  cache_master_xactor_shim_arff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_arff_rv$D_IN;
	if (cache_master_xactor_shim_awff_rv$EN)
	  cache_master_xactor_shim_awff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_awff_rv$D_IN;
	if (cache_master_xactor_shim_bff_rv$EN)
	  cache_master_xactor_shim_bff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_bff_rv$D_IN;
	if (cache_master_xactor_shim_rff_rv$EN)
	  cache_master_xactor_shim_rff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_rff_rv$D_IN;
	if (cache_master_xactor_shim_wff_rv$EN)
	  cache_master_xactor_shim_wff_rv <= `BSV_ASSIGNMENT_DELAY
	      cache_master_xactor_shim_wff_rv$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_amo_funct7$EN)
      cache_rg_amo_funct7 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct7$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_ld_val$EN)
      cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_crg_commit = 1'h0;
    cache_crg_sb_to_load_delay = 11'h2AA;
    cache_ctr_wr_rsps_pending_inrg = 4'hA;
    cache_ctr_wr_rsps_pending_outrg = 4'hA;
    cache_master_xactor_clearing = 1'h0;
    cache_master_xactor_shim_arff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_awff_rv = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_bff_rv = 7'h2A;
    cache_master_xactor_shim_rff_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    cache_master_xactor_shim_wff_rv = 75'h2AAAAAAAAAAAAAAAAAA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_amo_funct7 = 7'h2A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_addr_awlen__h5956);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", _theResult___snd_snd_fst_val__h5992, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wdata__h6050);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_data_wstrb__h6051);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", mem_req_wr_second_data_wuser__h5783, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7321 = $stime;
	  #0;
	end
    v__h7315 = v__h7321 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7315,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7422 = $stime;
	  #0;
	end
    v__h7416 = v__h7422 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7416, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h7877 = $stime;
	  #0;
	end
    v__h7871 = v__h7877 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7871,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h4617,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d484)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d487)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_66_ULE_0b1___d167 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", x1_avValue_exc_code__h8829);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d241)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", value__h9599, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", x1_avValue_exc_code__h8829);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("'h%h", value__h9599, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  cache_rg_priv_66_ULE_0b1_67_AND_cache_rg_satp__ETC___d506 &&
	  cache_cfg_verbosity >= 4'd2)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d816)
	begin
	  v__h24336 = $stime;
	  #0;
	end
    v__h24330 = v__h24336 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d816)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h24330,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d831)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d816)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d838)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d846)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1140)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  (!cache_rg_priv_66_ULE_0b1___d167 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb$lookup[130]) &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1147)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1155)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1161)
	$display("        AMO SC result = %0d", lrsc_result__h24726);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8828,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
		 x__h25595 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1168)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1176)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h8828,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1183)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1183)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1190)
	begin
	  v__h28772 = $stime;
	  #0;
	end
    v__h28766 = v__h28772 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1190)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h28766,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1190)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1198)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$display("        AMO: addr 0x%0h amo_f7 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct7,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$display("          PA 0x%0h ", x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640,
		 cache_ram_word128_set_b_read__69_AND_cache_ram_ETC___d640,
		 { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_79_EQ_4_36_THEN_cache_r_ETC___d1044 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$write(" 0x%0x",
	       { cache_rg_width_code == 3'd4 && cache_rg_st_amo_val[128],
		 x__h29265 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1204)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1212)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h8828);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_crg_commit$port1__read &&
	  NOT_cache_rg_priv_66_ULE_0b1_67_68_OR_NOT_cach_ETC___d1221)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h33822 = $stime;
	  #0;
	end
    v__h33816 = v__h33822 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h33816,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_2_pte_pa_w64_fa__h33877);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h6889 = $stime;
	  #0;
	end
    v__h6883 = v__h6889 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_reset", v__h6883, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h39943 = $stime;
	  #0;
	end
    v__h39937 = v__h39943 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h39937,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h42031, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41466 = $stime;
	  #0;
	end
    v__h41460 = v__h41466 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h41460,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_ld_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41554 = $stime;
	  #0;
	end
    v__h41548 = v__h41554 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h41548,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41772 = $stime;
	  #0;
	end
    v__h41766 = v__h41772 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h41766,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41894 = $stime;
	  #0;
	end
    v__h41888 = v__h41894 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h41888,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", size_val__h42031, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_aw_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_w_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_b_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	begin
	  v__h45011 = $stime;
	  #0;
	end
    v__h45005 = v__h45011 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$display("%0d: ERROR: %s.rl_discard_write_rsp: unexpected W response (ctr_wr_rsps_pending.value == 0)",
		 v__h45005,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54 == 4'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h45258 = $stime;
	  #0;
	end
    v__h45252 = v__h45258 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h45252,
	       "D_MMU_Cache",
	       $unsigned(cache_ctr_wr_rsps_pending_inrg_read__2_MINUS_c_ETC___d54));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	begin
	  v__h45219 = $stime;
	  #0;
	end
    v__h45213 = v__h45219 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h45213,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", cache_master_xactor_shim_bff_rv$port1__read[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd1 &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_master_xactor_shim_bff_rv$port1__read[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_r_warnDoPut)
	$display("WARNING: putting into a Sink that can't be put into");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34872 = $stime;
	  #0;
	end
    v__h34866 = v__h34872 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h34866,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34629 = $stime;
	  #0;
	end
    v__h34623 = v__h34629 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h34623,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_1_pte_pa_w64_fa__h34906);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1304)
	begin
	  v__h35174 = $stime;
	  #0;
	end
    v__h35168 = v__h35174 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1304)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h35168,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[31:23] != 9'd0 ||
	   cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1316)
	begin
	  v__h35286 = $stime;
	  #0;
	end
    v__h35280 = v__h35286 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1316)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h35280,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1316)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h34902);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h34801 = $stime;
	  #0;
	end
    v__h34795 = v__h34801 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h34795,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5326);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35925 = $stime;
	  #0;
	end
    v__h35919 = v__h35925 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h35919,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35685 = $stime;
	  #0;
	end
    v__h35679 = v__h35685 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h35679,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", lev_0_pte_pa_w64_fa__h35959);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1354)
	begin
	  v__h36339 = $stime;
	  #0;
	end
    v__h36333 = v__h36339 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1354)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h36333,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1354)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h34902);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360)
	begin
	  v__h36227 = $stime;
	  #0;
	end
    v__h36221 = v__h36227 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv_port1__read__2_ETC___d1360)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h36221,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  cache_master_xactor_shim_rff_rv$port1__read[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h35854 = $stime;
	  #0;
	end
    v__h35848 = v__h35854 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h35848,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5326);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36816 = $stime;
	  #0;
	end
    v__h36810 = v__h36816 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  (!cache_master_xactor_shim_rff_rv$port1__read[4] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	   cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h36810,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36887 = $stime;
	  #0;
	end
    v__h36881 = v__h36887 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[6] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[7] &&
	  !cache_master_xactor_shim_rff_rv$port1__read[5] &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h36881,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h9179);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36969 = $stime;
	  #0;
	end
    v__h36963 = v__h36969 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h36963,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[4] &&
	  (cache_master_xactor_shim_rff_rv$port1__read[5] ||
	   !cache_master_xactor_shim_rff_rv$port1__read[6]) &&
	  (cache_master_xactor_shim_rff_rv$port1__read[7] ||
	   cache_master_xactor_shim_rff_rv$port1__read[5]) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h34902);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h36745 = $stime;
	  #0;
	end
    v__h36739 = v__h36745 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h36739,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5326);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h40300 = $stime;
	  #0;
	end
    v__h40294 = v__h40300 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h40294,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41241 = $stime;
	  #0;
	end
    v__h41235 = v__h41241 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h41235,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h40585 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h41355 = $stime;
	  #0;
	end
    v__h41349 = v__h41355 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h41349,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42195 = $stime;
	  #0;
	end
    v__h42189 = v__h42195 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h42189,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42390 = $stime;
	  #0;
	end
    v__h42384 = v__h42390 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h42384,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h44704 = $stime;
	  #0;
	end
    v__h44698 = v__h44704 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h44698,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, q1__h42554 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h42488 = $stime;
	  #0;
	end
    v__h42482 = v__h42488 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h42482,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h45649 = $stime;
	  #0;
	end
    v__h45643 = v__h45649 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("%0d: %m.req: op:", v__h45643);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    amo_funct7 = 0x%0h", req_amo_funct7);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req &&
	  req_width_code_EQ_0b0_798_OR_req_width_code_EQ_ETC___d1839)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h37104 = $stime;
	  #0;
	end
    v__h37098 = v__h37104 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_start_cache_refill: ", v__h37098, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("    To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", cline_fabric_addr__h37157);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    Victim way %0d; => CACHE_REFILL", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	begin
	  v__h37891 = $stime;
	  #0;
	end
    v__h37885 = v__h37891 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h37885,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd1 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412 &&
	  !cache_master_xactor_shim_rff_rv$port1__read[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("'h%h", cache_master_xactor_shim_rff_rv$port1__read[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h38133 = $stime;
	  #0;
	end
    v__h38127 = v__h38133 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h38127,
		 "D_MMU_Cache",
		 access_exc_code__h5326);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_master_xactor_shim_rff_rv$port1__read[0],
		   cache_master_xactor_shim_rff_rv$port1__read[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_master_xactor_shim_rff_rv$port1__read[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_master_xactor_shim_rff_rv$port1__read[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(" 0x%0x", cache_ram_word128_set$DOB);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write(" 0x%0x",
	       { cache_master_xactor_shim_rff_rv$port1__read[0],
		 cache_master_xactor_shim_rff_rv$port1__read[67:4],
		 cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__12_ULE_2_411___d1412)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	begin
	  v__h47037 = $stime;
	  #0;
	end
    v__h47031 = v__h47037 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__12_ULE_1___d113)
	$display("%0d: %s.tlb_flush", v__h47031, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_master_xactor_ug_master_u_ar_warnDoDrop)
	$display("WARNING: dropping from Source that can't be dropped from");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

