//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// word128_fst                    O     1
// word128_snd                    O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_aw_canPeek          O     1 reg
// mem_master_aw_peek             O    97 reg
// RDY_mem_master_aw_peek         O     1 reg
// RDY_mem_master_aw_drop         O     1 reg
// mem_master_w_canPeek           O     1 reg
// mem_master_w_peek              O    74 reg
// RDY_mem_master_w_peek          O     1 reg
// RDY_mem_master_w_drop          O     1 reg
// mem_master_b_canPut            O     1 reg
// RDY_mem_master_b_put           O     1 reg
// mem_master_ar_canPeek          O     1 reg
// mem_master_ar_peek             O    97 reg
// RDY_mem_master_ar_peek         O     1 reg
// RDY_mem_master_ar_drop         O     1 reg
// mem_master_r_canPut            O     1 reg
// RDY_mem_master_r_put           O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_b_put_val           I     6 reg
// mem_master_r_put_val           I    72 reg
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// EN_mem_master_aw_drop          I     1
// EN_mem_master_w_drop           I     1
// EN_mem_master_b_put            I     1
// EN_mem_master_ar_drop          I     1
// EN_mem_master_r_put            I     1
//
// Combinational paths from inputs to outputs:
//   EN_commit -> valid
//   EN_commit -> word128_fst
//   EN_commit -> word128_snd
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    word128_fst,

		    word128_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_aw_canPeek,

		    mem_master_aw_peek,
		    RDY_mem_master_aw_peek,

		    EN_mem_master_aw_drop,
		    RDY_mem_master_aw_drop,

		    mem_master_w_canPeek,

		    mem_master_w_peek,
		    RDY_mem_master_w_peek,

		    EN_mem_master_w_drop,
		    RDY_mem_master_w_drop,

		    mem_master_b_canPut,

		    mem_master_b_put_val,
		    EN_mem_master_b_put,
		    RDY_mem_master_b_put,

		    mem_master_ar_canPeek,

		    mem_master_ar_peek,
		    RDY_mem_master_ar_peek,

		    EN_mem_master_ar_drop,
		    RDY_mem_master_ar_drop,

		    mem_master_r_canPut,

		    mem_master_r_put_val,
		    EN_mem_master_r_put,
		    RDY_mem_master_r_put);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method word128_fst
  output word128_fst;

  // value method word128_snd
  output [127 : 0] word128_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_canPeek
  output mem_master_aw_canPeek;

  // value method mem_master_aw_peek
  output [96 : 0] mem_master_aw_peek;
  output RDY_mem_master_aw_peek;

  // action method mem_master_aw_drop
  input  EN_mem_master_aw_drop;
  output RDY_mem_master_aw_drop;

  // value method mem_master_w_canPeek
  output mem_master_w_canPeek;

  // value method mem_master_w_peek
  output [73 : 0] mem_master_w_peek;
  output RDY_mem_master_w_peek;

  // action method mem_master_w_drop
  input  EN_mem_master_w_drop;
  output RDY_mem_master_w_drop;

  // value method mem_master_b_canPut
  output mem_master_b_canPut;

  // action method mem_master_b_put
  input  [5 : 0] mem_master_b_put_val;
  input  EN_mem_master_b_put;
  output RDY_mem_master_b_put;

  // value method mem_master_ar_canPeek
  output mem_master_ar_canPeek;

  // value method mem_master_ar_peek
  output [96 : 0] mem_master_ar_peek;
  output RDY_mem_master_ar_peek;

  // action method mem_master_ar_drop
  input  EN_mem_master_ar_drop;
  output RDY_mem_master_ar_drop;

  // value method mem_master_r_canPut
  output mem_master_r_canPut;

  // action method mem_master_r_put
  input  [71 : 0] mem_master_r_put_val;
  input  EN_mem_master_r_put;
  output RDY_mem_master_r_put;

  // signals for module outputs
  wire [127 : 0] st_amo_val_snd, word128_snd;
  wire [96 : 0] mem_master_ar_peek, mem_master_aw_peek;
  wire [73 : 0] mem_master_w_peek;
  wire [63 : 0] addr;
  wire [5 : 0] exc_code;
  wire RDY_mem_master_ar_drop,
       RDY_mem_master_ar_peek,
       RDY_mem_master_aw_drop,
       RDY_mem_master_aw_peek,
       RDY_mem_master_b_put,
       RDY_mem_master_r_put,
       RDY_mem_master_w_drop,
       RDY_mem_master_w_peek,
       RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       exc,
       mem_master_ar_canPeek,
       mem_master_aw_canPeek,
       mem_master_b_canPut,
       mem_master_r_canPut,
       mem_master_w_canPeek,
       st_amo_val_fst,
       valid,
       word128_fst;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$port0__write_1,
	       cache_ctr_wr_rsps_pending_crg$port1__read,
	       cache_ctr_wr_rsps_pending_crg$port1__write_1,
	       cache_ctr_wr_rsps_pending_crg$port2__read,
	       cache_ctr_wr_rsps_pending_crg$port3__read;
  wire cache_ctr_wr_rsps_pending_crg$EN_port2__write,
       cache_dw_output_ld_val$whas,
       cache_dw_output_st_amo_val$whas,
       cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_rw_reset_req$whas;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_ctr_wr_rsps_pending_crg
  reg [3 : 0] cache_ctr_wr_rsps_pending_crg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$D_IN;
  wire cache_ctr_wr_rsps_pending_crg$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_allow_cap
  reg cache_rg_allow_cap;
  wire cache_rg_allow_cap$D_IN, cache_rg_allow_cap$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_word128_set_in_cache
  reg [7 : 0] cache_rg_word128_set_in_cache;
  wire [7 : 0] cache_rg_word128_set_in_cache$D_IN;
  wire cache_rg_word128_set_in_cache$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_masterPortShim_arff
  reg [96 : 0] cache_masterPortShim_arff$D_IN;
  wire [96 : 0] cache_masterPortShim_arff$D_OUT;
  wire cache_masterPortShim_arff$CLR,
       cache_masterPortShim_arff$DEQ,
       cache_masterPortShim_arff$EMPTY_N,
       cache_masterPortShim_arff$ENQ,
       cache_masterPortShim_arff$FULL_N;

  // ports of submodule cache_masterPortShim_awff
  wire [96 : 0] cache_masterPortShim_awff$D_IN,
		cache_masterPortShim_awff$D_OUT;
  wire cache_masterPortShim_awff$CLR,
       cache_masterPortShim_awff$DEQ,
       cache_masterPortShim_awff$EMPTY_N,
       cache_masterPortShim_awff$ENQ,
       cache_masterPortShim_awff$FULL_N;

  // ports of submodule cache_masterPortShim_bff
  wire [5 : 0] cache_masterPortShim_bff$D_IN, cache_masterPortShim_bff$D_OUT;
  wire cache_masterPortShim_bff$CLR,
       cache_masterPortShim_bff$DEQ,
       cache_masterPortShim_bff$EMPTY_N,
       cache_masterPortShim_bff$ENQ,
       cache_masterPortShim_bff$FULL_N;

  // ports of submodule cache_masterPortShim_rff
  wire [71 : 0] cache_masterPortShim_rff$D_IN, cache_masterPortShim_rff$D_OUT;
  wire cache_masterPortShim_rff$CLR,
       cache_masterPortShim_rff$DEQ,
       cache_masterPortShim_rff$EMPTY_N,
       cache_masterPortShim_rff$ENQ,
       cache_masterPortShim_rff$FULL_N;

  // ports of submodule cache_masterPortShim_wff
  wire [73 : 0] cache_masterPortShim_wff$D_IN, cache_masterPortShim_wff$D_OUT;
  wire cache_masterPortShim_wff$CLR,
       cache_masterPortShim_wff$DEQ,
       cache_masterPortShim_wff$EMPTY_N,
       cache_masterPortShim_wff$ENQ,
       cache_masterPortShim_wff$FULL_N;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DIB,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_ram_word128_set
  reg [257 : 0] cache_ram_word128_set$DIB;
  reg [7 : 0] cache_ram_word128_set$ADDRB;
  wire [257 : 0] cache_ram_word128_set$DIA, cache_ram_word128_set$DOB;
  wire [7 : 0] cache_ram_word128_set$ADDRA;
  wire cache_ram_word128_set$ENA,
       cache_ram_word128_set$ENB,
       cache_ram_word128_set$WEA,
       cache_ram_word128_set$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$insert_level;
  wire [130 : 0] cache_tlb$lookup;
  wire [63 : 0] cache_tlb$insert_pte, cache_tlb$insert_pte_pa;
  wire [26 : 0] cache_tlb$insert_vpn, cache_tlb$lookup_vpn;
  wire [15 : 0] cache_tlb$insert_asid, cache_tlb$lookup_asid;
  wire cache_tlb$EN_flush,
       cache_tlb$EN_insert,
       cache_tlb$RDY_insert,
       cache_tlb$RDY_lookup;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_23,
       CAN_FIRE_commit,
       CAN_FIRE_mem_master_ar_drop,
       CAN_FIRE_mem_master_aw_drop,
       CAN_FIRE_mem_master_b_put,
       CAN_FIRE_mem_master_r_put,
       CAN_FIRE_mem_master_w_drop,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_23,
       WILL_FIRE_commit,
       WILL_FIRE_mem_master_ar_drop,
       WILL_FIRE_mem_master_aw_drop,
       WILL_FIRE_mem_master_b_put,
       WILL_FIRE_mem_master_r_put,
       WILL_FIRE_mem_master_w_drop,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_word128_set$a_put_3__VAL_1,
		 MUX_cache_ram_word128_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_4,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		 MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [96 : 0] MUX_cache_masterPortShim_arff$enq_1__VAL_1,
		MUX_cache_masterPortShim_arff$enq_1__VAL_2,
		MUX_cache_masterPortShim_arff$enq_1__VAL_3,
		MUX_cache_masterPortShim_arff$enq_1__VAL_4,
		MUX_cache_masterPortShim_arff$enq_1__VAL_5;
  wire [73 : 0] MUX_cache_masterPortShim_wff$enq_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3,
		MUX_cache_tlb$insert_3__VAL_1;
  wire [7 : 0] MUX_cache_ram_word128_set$b_put_2__VAL_2,
	       MUX_cache_ram_word128_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_4,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_12,
	       MUX_cache_rg_state$write_1__VAL_14,
	       MUX_cache_rg_state$write_1__VAL_15,
	       MUX_cache_rg_state$write_1__VAL_16,
	       MUX_cache_rg_state$write_1__VAL_18,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_5,
	       MUX_cache_rg_state$write_1__VAL_9;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_dw_valid$wset_1__SEL_1,
       MUX_cache_dw_valid$wset_1__SEL_2,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_2,
       MUX_cache_masterPortShim_arff$enq_1__SEL_3,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1,
       MUX_cache_ram_word128_set$a_put_1__SEL_1,
       MUX_cache_ram_word128_set$b_put_1__SEL_2,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__PSEL_2,
       MUX_cache_rg_exc_code$write_1__PSEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_pa$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_10,
       MUX_cache_rg_state$write_1__SEL_12,
       MUX_cache_rg_state$write_1__SEL_3,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_rg_state$write_1__SEL_8,
       MUX_cache_rg_state$write_1__SEL_9,
       MUX_cache_tlb$insert_1__SEL_1,
       MUX_cache_tlb$insert_1__SEL_2,
       MUX_cache_tlb$insert_1__SEL_3,
       MUX_cache_tlb$insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h5489;
  reg [31 : 0] v__h35301;
  reg [31 : 0] v__h40118;
  reg [31 : 0] v__h45575;
  reg [63 : 0] v__h45791;
  reg [31 : 0] v__h46528;
  reg [31 : 0] v__h46285;
  reg [63 : 0] v__h46690;
  reg [31 : 0] v__h46835;
  reg [31 : 0] v__h46947;
  reg [31 : 0] v__h46457;
  reg [31 : 0] v__h47584;
  reg [31 : 0] v__h47344;
  reg [63 : 0] v__h47746;
  reg [31 : 0] v__h48003;
  reg [31 : 0] v__h47891;
  reg [31 : 0] v__h47513;
  reg [31 : 0] v__h48478;
  reg [31 : 0] v__h48549;
  reg [31 : 0] v__h48631;
  reg [31 : 0] v__h48407;
  reg [31 : 0] v__h48760;
  reg [63 : 0] v__h48912;
  reg [31 : 0] v__h49481;
  reg [31 : 0] v__h49723;
  reg [31 : 0] v__h52372;
  reg [63 : 0] v__h52596;
  reg [63 : 0] v__h52700;
  reg [31 : 0] v__h52933;
  reg [31 : 0] v__h54135;
  reg [31 : 0] v__h54249;
  reg [31 : 0] v__h53965;
  reg [31 : 0] v__h54360;
  reg [31 : 0] v__h54482;
  reg [31 : 0] v__h54572;
  reg [31 : 0] v__h54791;
  reg [31 : 0] v__h54917;
  reg [63 : 0] v__h55132;
  reg [63 : 0] v__h55236;
  reg [31 : 0] v__h55413;
  reg [31 : 0] v__h55783;
  reg [31 : 0] v__h58102;
  reg [31 : 0] v__h55711;
  reg [31 : 0] v__h58748;
  reg [31 : 0] v__h58709;
  reg [31 : 0] v__h4600;
  reg [31 : 0] v__h5239;
  reg [31 : 0] v__h5338;
  reg [31 : 0] v__h59676;
  reg [31 : 0] v__h60994;
  reg [31 : 0] v__h4594;
  reg [31 : 0] v__h5233;
  reg [31 : 0] v__h5332;
  reg [31 : 0] v__h5483;
  reg [31 : 0] v__h35295;
  reg [31 : 0] v__h40112;
  reg [31 : 0] v__h45569;
  reg [31 : 0] v__h46279;
  reg [31 : 0] v__h46451;
  reg [31 : 0] v__h46522;
  reg [31 : 0] v__h46829;
  reg [31 : 0] v__h46941;
  reg [31 : 0] v__h47338;
  reg [31 : 0] v__h47507;
  reg [31 : 0] v__h47578;
  reg [31 : 0] v__h47885;
  reg [31 : 0] v__h47997;
  reg [31 : 0] v__h48401;
  reg [31 : 0] v__h48472;
  reg [31 : 0] v__h48543;
  reg [31 : 0] v__h48625;
  reg [31 : 0] v__h48754;
  reg [31 : 0] v__h49475;
  reg [31 : 0] v__h49717;
  reg [31 : 0] v__h52366;
  reg [31 : 0] v__h52927;
  reg [31 : 0] v__h53959;
  reg [31 : 0] v__h54129;
  reg [31 : 0] v__h54243;
  reg [31 : 0] v__h54354;
  reg [31 : 0] v__h54476;
  reg [31 : 0] v__h54566;
  reg [31 : 0] v__h54785;
  reg [31 : 0] v__h54911;
  reg [31 : 0] v__h55407;
  reg [31 : 0] v__h55705;
  reg [31 : 0] v__h55777;
  reg [31 : 0] v__h58096;
  reg [31 : 0] v__h58703;
  reg [31 : 0] v__h58742;
  reg [31 : 0] v__h59670;
  reg [31 : 0] v__h60988;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46,
		CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168,
		IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177,
		b__h36581,
		b__h40648,
		new_word128__h36563;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48,
	       IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621,
	       IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953,
	       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957,
	       IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088,
	       IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827,
	       _theResult_____2__h40859,
	       _theResult_____2__h55916,
	       _theResult___fst__h7307,
	       _theResult___snd__h57823,
	       _theResult___snd__h8652,
	       _theResult___snd_fst__h34131,
	       _theResult___snd_fst__h39820,
	       _theResult___snd_fst__h53259,
	       _theResult___snd_snd__h34132,
	       _theResult___snd_snd__h56099,
	       mem_req_wr_data_wdata__h3605,
	       w1__h40711,
	       w1__h40716,
	       w1__h55878,
	       w1__h55883;
  reg [7 : 0] fabric_2_strb__h3271, mem_req_wr_data_wstrb__h3606;
  reg [2 : 0] _theResult___snd_snd_fst_val__h3563, size_val__h55107;
  reg CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d386,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396,
      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d402,
      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d272,
      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d282,
      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d288,
      IF_cache_rg_width_code_34_EQ_0_35_OR_cache_rg__ETC___d322,
      IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299,
      IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1082,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1190,
		 IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1081,
		 IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1189,
		 IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1200,
		 IF_cache_rg_victim_way_461_THEN_cache_masterPo_ETC___d1530,
		 IF_cache_rg_victim_way_461_THEN_cache_ram_word_ETC___d1529,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728,
		 x__h8710,
		 y__h21428,
		 y__h8711,
		 y__h8732;
  wire [127 : 0] IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731,
		 IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118,
		 b__h49941,
		 b__h55661,
		 new_st_val_128__h40860,
		 new_st_val_128__h55917,
		 x__h34130,
		 x__h45103,
		 x__h55911,
		 x__h58080;
  wire [63 : 0] IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d738,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d742,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d746,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d750,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d754,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d758,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d762,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d766,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d770,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d774,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d778,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d782,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d786,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d790,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d794,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d798,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d818,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d822,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d826,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d830,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d834,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d838,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d842,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d846,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d858,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d862,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d866,
		SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d870,
		_theResult___fst__h6892,
		_theResult___fst__h6969,
		_theResult___snd__h53227,
		_theResult___snd_fst__h6894,
		_theResult___snd_fst__h6971,
		cline_fabric_addr__h48813,
		lev_0_pte_pa__h47616,
		lev_0_pte_pa_w64_fa__h47618,
		lev_1_PTN_pa__h46558,
		lev_1_pte_pa__h46560,
		lev_1_pte_pa_w64_fa__h46562,
		lev_2_pte_pa__h45628,
		lev_2_pte_pa_w64_fa__h45630,
		new_st_val_64__h40865,
		new_st_val_64__h40937,
		new_st_val_64__h42134,
		new_st_val_64__h42138,
		new_st_val_64__h42142,
		new_st_val_64__h42146,
		new_st_val_64__h42151,
		new_st_val_64__h42157,
		new_st_val_64__h42162,
		new_st_val_64__h55922,
		new_st_val_64__h55994,
		new_st_val_64__h57935,
		new_st_val_64__h57939,
		new_st_val_64__h57943,
		new_st_val_64__h57947,
		new_st_val_64__h57952,
		new_st_val_64__h57958,
		new_st_val_64__h57963,
		pa___1__h7449,
		pa___1__h7498,
		pa___1__h7567,
		pte___1__h7378,
		pte___1__h7406,
		pte___2__h7304,
		pte___2__h7306,
		result_lo__h34169,
		result_lo__h34204,
		result_lo__h34237,
		result_lo__h34270,
		result_lo__h34303,
		result_lo__h34336,
		result_lo__h34369,
		result_lo__h34402,
		result_lo__h34435,
		result_lo__h34468,
		result_lo__h34501,
		result_lo__h34534,
		result_lo__h34567,
		result_lo__h34600,
		result_lo__h34633,
		result_lo__h34666,
		result_lo__h34721,
		result_lo__h34754,
		result_lo__h34787,
		result_lo__h34820,
		result_lo__h34853,
		result_lo__h34886,
		result_lo__h34919,
		result_lo__h34952,
		result_lo__h34999,
		result_lo__h35032,
		result_lo__h35065,
		result_lo__h35098,
		result_lo__h53296,
		result_lo__h53329,
		result_lo__h53362,
		result_lo__h53395,
		result_lo__h53428,
		result_lo__h53461,
		result_lo__h53494,
		result_lo__h53527,
		result_lo__h53590,
		result_lo__h53623,
		result_lo__h53656,
		result_lo__h53689,
		result_lo__h53740,
		result_lo__h53773,
		result_lo__h56870,
		result_lo__h56902,
		result_lo__h56934,
		result_lo__h56966,
		result_lo__h56998,
		result_lo__h57030,
		result_lo__h57062,
		result_lo__h57094,
		result_lo__h57126,
		result_lo__h57158,
		result_lo__h57190,
		result_lo__h57222,
		result_lo__h57254,
		result_lo__h57286,
		result_lo__h57318,
		result_lo__h57350,
		result_lo__h57404,
		result_lo__h57436,
		result_lo__h57468,
		result_lo__h57500,
		result_lo__h57532,
		result_lo__h57564,
		result_lo__h57596,
		result_lo__h57628,
		result_lo__h57674,
		result_lo__h57706,
		result_lo__h57738,
		result_lo__h57770,
		satp_pa__h2267,
		value__h7695,
		vpn_0_pa__h47615,
		vpn_1_pa__h46559,
		vpn_2_pa__h45627,
		w1___1__h40904,
		w1___1__h55961,
		w2__h40718,
		word64__h3543,
		x1_avValue_pa__h6799,
		x__h40863,
		x__h55920;
  wire [55 : 0] x__h46641, x__h5609, x__h7452, x__h7501, x__h7570;
  wire [31 : 0] IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q50,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q58,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q65,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q72,
		cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q32,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q33,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q34,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q35,
		cache_rg_st_amo_val_BITS_31_TO_0__q45,
		w10711_BITS_31_TO_0__q44,
		w15878_BITS_31_TO_0__q77;
  wire [15 : 0] IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q51,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q55,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q57,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q61,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q64,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q68,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q71,
		IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q75,
		cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2,
		cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6,
		cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q16,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q18,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q20,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q22,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q24,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q26,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q28,
		cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q30;
  wire [7 : 0] IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q49,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q52,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q53,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q54,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q56,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q59,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q60,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q62,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q63,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q66,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q67,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q69,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q70,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q73,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q74,
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q76,
	       cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1,
	       cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4,
	       cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5,
	       cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7,
	       cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8,
	       cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11,
	       cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12,
	       cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q17,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q19,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q21,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q23,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q25,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q27,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q29,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q31,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q36,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q37,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q38,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q39,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q40,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q41,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q42,
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q43,
	       mem_req_wr_addr_awlen__h3527,
	       strobe64__h3544,
	       strobe64__h3548,
	       strobe64__h3552,
	       strobe64__h3556;
  wire [5 : 0] access_exc_code__h3011,
	       exc_code___1__h7662,
	       shift_bits__h3294,
	       x1_avValue_exc_code__h6800,
	       x1_avValue_snd__h45207,
	       y_avValue_snd__h45205;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1269,
	       IF_NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache__ETC___d1268,
	       IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1267,
	       IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d1271,
	       IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1270,
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1273,
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1274;
  wire [3 : 0] b__h45529;
  wire [1 : 0] tmp__h48969, tmp__h48970;
  wire IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d406,
       IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d292,
       IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d422,
       IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d421,
       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563,
       IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d416,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d385,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d401,
       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d405,
       NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d493,
       NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d497,
       NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d506,
       NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d515,
       NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471,
       NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522,
       NOT_cache_f_reset_reqs_notEmpty__4_50_AND_cach_ETC___d1543,
       NOT_cache_masterPortShim_rff_first__297_BIT_4__ETC___d1329,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d300,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d328,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d332,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d565,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d911,
       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d917,
       NOT_cache_rg_op_35_EQ_0_36_37_AND_NOT_cache_rg_ETC___d157,
       NOT_cache_rg_op_35_EQ_1_01_71_AND_NOT_cache_rg_ETC___d1256,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1193,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1221,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1227,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1233,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d543,
       NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d967,
       NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d435,
       NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d507,
       NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512,
       NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d531,
       NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d548,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1198,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1204,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1210,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1215,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1219,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1231,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1237,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1242,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1259,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1262,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1264,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d194,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d445,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d448,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d559,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d583,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d731,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d928,
       NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d973,
       NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438,
       NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171,
       NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d596,
       NOT_cache_w_req_width_code_wget__922_EQ_0b0_94_ETC___d1963,
       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d418,
       _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550,
       cache_cfg_verbosity_read__0_ULE_1___d61,
       cache_dw_commit_whas__12_AND_cache_dw_commit_w_ETC___d966,
       cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1372,
       cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1413,
       cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1419,
       cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1362,
       cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1374,
       cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1322,
       cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1386,
       cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1713,
       cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224,
       cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230,
       cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d562,
       cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576,
       cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d897,
       cache_rg_amo_funct5_40_EQ_0b10_41_AND_cache_ra_ETC___d903,
       cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308,
       cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d434,
       cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d567,
       cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d581,
       cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d584,
       cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d1195,
       cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d579,
       cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d970,
       cache_rg_op_35_EQ_2_38_AND_cache_rg_amo_funct5_ETC___d331,
       cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158,
       cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d187,
       cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d494,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d425,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d477,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d539,
       cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d555,
       cache_rg_priv_09_ULE_0b1___d110,
       cache_rg_satp_12_BITS_63_TO_60_13_EQ_8_14_AND__ETC___d534,
       cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164,
       cache_rg_width_code_34_EQ_0b100_93_OR_cache_rg_ETC___d408,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1248,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1253,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d899,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d913,
       cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d927,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1265,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d441,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d529,
       cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922,
       cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1979,
       cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1984,
       lrsc_result__h36188,
       mem_req_wr_second_data_wuser__h3406,
       y__h7096;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method word128_fst
  assign word128_fst =
	     cache_dw_output_ld_val$whas && cache_dw_output_ld_val$wget[128] ;

  // value method word128_snd
  assign word128_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst =
	     cache_dw_output_st_amo_val$whas &&
	     cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_canPeek
  assign mem_master_aw_canPeek = cache_masterPortShim_awff$EMPTY_N ;

  // value method mem_master_aw_peek
  assign mem_master_aw_peek = cache_masterPortShim_awff$D_OUT ;
  assign RDY_mem_master_aw_peek = cache_masterPortShim_awff$EMPTY_N ;

  // action method mem_master_aw_drop
  assign RDY_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign CAN_FIRE_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign WILL_FIRE_mem_master_aw_drop = EN_mem_master_aw_drop ;

  // value method mem_master_w_canPeek
  assign mem_master_w_canPeek = cache_masterPortShim_wff$EMPTY_N ;

  // value method mem_master_w_peek
  assign mem_master_w_peek = cache_masterPortShim_wff$D_OUT ;
  assign RDY_mem_master_w_peek = cache_masterPortShim_wff$EMPTY_N ;

  // action method mem_master_w_drop
  assign RDY_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign CAN_FIRE_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign WILL_FIRE_mem_master_w_drop = EN_mem_master_w_drop ;

  // value method mem_master_b_canPut
  assign mem_master_b_canPut = cache_masterPortShim_bff$FULL_N ;

  // action method mem_master_b_put
  assign RDY_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign CAN_FIRE_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign WILL_FIRE_mem_master_b_put = EN_mem_master_b_put ;

  // value method mem_master_ar_canPeek
  assign mem_master_ar_canPeek = cache_masterPortShim_arff$EMPTY_N ;

  // value method mem_master_ar_peek
  assign mem_master_ar_peek = cache_masterPortShim_arff$D_OUT ;
  assign RDY_mem_master_ar_peek = cache_masterPortShim_arff$EMPTY_N ;

  // action method mem_master_ar_drop
  assign RDY_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign CAN_FIRE_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign WILL_FIRE_mem_master_ar_drop = EN_mem_master_ar_drop ;

  // value method mem_master_r_canPut
  assign mem_master_r_canPut = cache_masterPortShim_rff$FULL_N ;

  // action method mem_master_r_put
  assign RDY_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign CAN_FIRE_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign WILL_FIRE_mem_master_r_put = EN_mem_master_r_put ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(32'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							    .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							    .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							    .CLR(cache_f_fabric_second_write_reqs$CLR),
							    .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							    .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							    .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(32'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_f_fabric_write_reqs$D_IN),
						     .ENQ(cache_f_fabric_write_reqs$ENQ),
						     .DEQ(cache_f_fabric_write_reqs$DEQ),
						     .CLR(cache_f_fabric_write_reqs$CLR),
						     .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						     .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						     .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128),
	  .guarded(32'd1)) cache_f_pte_writebacks(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(cache_f_pte_writebacks$D_IN),
						  .ENQ(cache_f_pte_writebacks$ENQ),
						  .DEQ(cache_f_pte_writebacks$DEQ),
						  .CLR(cache_f_pte_writebacks$CLR),
						  .D_OUT(cache_f_pte_writebacks$D_OUT),
						  .FULL_N(cache_f_pte_writebacks$FULL_N),
						  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_reqs(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_reqs$D_IN),
							     .ENQ(cache_f_reset_reqs$ENQ),
							     .DEQ(cache_f_reset_reqs$DEQ),
							     .CLR(cache_f_reset_reqs$CLR),
							     .D_OUT(cache_f_reset_reqs$D_OUT),
							     .FULL_N(cache_f_reset_reqs$FULL_N),
							     .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(32'd1)) cache_f_reset_rsps(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(cache_f_reset_rsps$D_IN),
							     .ENQ(cache_f_reset_rsps$ENQ),
							     .DEQ(cache_f_reset_rsps$DEQ),
							     .CLR(cache_f_reset_rsps$CLR),
							     .D_OUT(cache_f_reset_rsps$D_OUT),
							     .FULL_N(cache_f_reset_rsps$FULL_N),
							     .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_masterPortShim_arff
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) cache_masterPortShim_arff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_masterPortShim_arff$D_IN),
						     .ENQ(cache_masterPortShim_arff$ENQ),
						     .DEQ(cache_masterPortShim_arff$DEQ),
						     .CLR(cache_masterPortShim_arff$CLR),
						     .D_OUT(cache_masterPortShim_arff$D_OUT),
						     .FULL_N(cache_masterPortShim_arff$FULL_N),
						     .EMPTY_N(cache_masterPortShim_arff$EMPTY_N));

  // submodule cache_masterPortShim_awff
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) cache_masterPortShim_awff(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(cache_masterPortShim_awff$D_IN),
						     .ENQ(cache_masterPortShim_awff$ENQ),
						     .DEQ(cache_masterPortShim_awff$DEQ),
						     .CLR(cache_masterPortShim_awff$CLR),
						     .D_OUT(cache_masterPortShim_awff$D_OUT),
						     .FULL_N(cache_masterPortShim_awff$FULL_N),
						     .EMPTY_N(cache_masterPortShim_awff$EMPTY_N));

  // submodule cache_masterPortShim_bff
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) cache_masterPortShim_bff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_bff$D_IN),
						    .ENQ(cache_masterPortShim_bff$ENQ),
						    .DEQ(cache_masterPortShim_bff$DEQ),
						    .CLR(cache_masterPortShim_bff$CLR),
						    .D_OUT(cache_masterPortShim_bff$D_OUT),
						    .FULL_N(cache_masterPortShim_bff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_bff$EMPTY_N));

  // submodule cache_masterPortShim_rff
  FIFO2 #(.width(32'd72),
	  .guarded(32'd1)) cache_masterPortShim_rff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_rff$D_IN),
						    .ENQ(cache_masterPortShim_rff$ENQ),
						    .DEQ(cache_masterPortShim_rff$DEQ),
						    .CLR(cache_masterPortShim_rff$CLR),
						    .D_OUT(cache_masterPortShim_rff$D_OUT),
						    .FULL_N(cache_masterPortShim_rff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_rff$EMPTY_N));

  // submodule cache_masterPortShim_wff
  FIFO2 #(.width(32'd74),
	  .guarded(32'd1)) cache_masterPortShim_wff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_wff$D_IN),
						    .ENQ(cache_masterPortShim_wff$ENQ),
						    .DEQ(cache_masterPortShim_wff$DEQ),
						    .CLR(cache_masterPortShim_wff$CLR),
						    .D_OUT(cache_masterPortShim_wff$D_OUT),
						    .FULL_N(cache_masterPortShim_wff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_wff$EMPTY_N));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_ram_word128_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_word128_set(.CLKA(CLK),
						  .CLKB(CLK),
						  .ADDRA(cache_ram_word128_set$ADDRA),
						  .ADDRB(cache_ram_word128_set$ADDRB),
						  .DIA(cache_ram_word128_set$DIA),
						  .DIB(cache_ram_word128_set$DIB),
						  .WEA(cache_ram_word128_set$WEA),
						  .WEB(cache_ram_word128_set$WEB),
						  .ENA(cache_ram_word128_set$ENA),
						  .ENB(cache_ram_word128_set$ENB),
						  .DOA(),
						  .DOB(cache_ram_word128_set$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1)) cache_tlb(.CLK(CLK),
					  .RST_N(RST_N),
					  .insert_asid(cache_tlb$insert_asid),
					  .insert_level(cache_tlb$insert_level),
					  .insert_pte(cache_tlb$insert_pte),
					  .insert_pte_pa(cache_tlb$insert_pte_pa),
					  .insert_vpn(cache_tlb$insert_vpn),
					  .lookup_asid(cache_tlb$lookup_asid),
					  .lookup_vpn(cache_tlb$lookup_vpn),
					  .EN_flush(cache_tlb$EN_flush),
					  .EN_insert(cache_tlb$EN_insert),
					  .RDY_flush(),
					  .lookup(cache_tlb$lookup),
					  .RDY_lookup(cache_tlb$RDY_lookup),
					  .RDY_insert(cache_tlb$RDY_insert));

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     cache_ctr_wr_rsps_pending_crg != 4'd15 &&
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     cache_masterPortShim_awff$FULL_N &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_cfg_verbosity_read__0_ULE_1___d61 ||
	      cache_tlb$RDY_lookup) &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d448 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     cache_masterPortShim_arff$FULL_N && cache_rg_state == 5'd5 &&
	     b__h45529 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1322 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1386 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_tlb$RDY_insert) &&
	     cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     b__h45529 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_10 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_10 ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_8 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_8 ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     b__h45529 != 4'd0 && cache_masterPortShim_bff$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     cache_f_reset_reqs$EMPTY_N &&
	     (cache_rg_cset_in_cache != 6'd63 || cache_f_reset_rsps$FULL_N) &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req = CAN_FIRE_RL_cache_do_req ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_23
  assign CAN_FIRE___me_check_23 = 1'b1 ;
  assign WILL_FIRE___me_check_23 = 1'b1 ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_dw_valid$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589 ;
  assign MUX_cache_dw_valid$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1198 ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1979 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_word128_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d973 ;
  assign MUX_cache_ram_word128_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__922_EQ_0b0_94_ETC___d1963 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1713 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_3 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__297_BIT_4__ETC___d1329 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d928 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d583 ;
  assign MUX_cache_rg_pa$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) ;
  assign MUX_cache_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_8 =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign MUX_cache_rg_state$write_1__SEL_9 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_10 =
	     cache_masterPortShim_arff$FULL_N &&
	     NOT_cache_f_reset_reqs_notEmpty__4_50_AND_cach_ETC___d1543 &&
	     b__h45529 == 4'd0 ;
  assign MUX_cache_rg_state$write_1__SEL_12 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_tlb$insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 ;
  assign MUX_cache_tlb$insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1372 ;
  assign MUX_cache_tlb$insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign MUX_cache_tlb$insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d731,
		 x__h34130 } :
	       { 65'd0, _theResult___snd_fst__h39820 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       { 65'd0, _theResult___snd_fst__h53259 } :
	       { 1'd0, b__h49941 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h58080 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_4 =
	     { cache_rg_allow_cap && cache_rg_ld_val[128],
	       cache_rg_ld_val[127:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       x1_avValue_pa__h6799,
	       IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1200 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h55911 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_1 =
	     { 4'd0, lev_1_pte_pa_w64_fa__h46562, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_2 =
	     { 4'd0, lev_0_pte_pa_w64_fa__h47618, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_3 =
	     { 4'd0,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 ?
		 { 8'd0, size_val__h55107, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_4 =
	     { 4'd0, lev_2_pte_pa_w64_fa__h45630, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_5 =
	     { 4'd0, cline_fabric_addr__h48813, 29'd15532032 } ;
  assign MUX_cache_masterPortShim_wff$enq_1__VAL_2 =
	     { mem_req_wr_data_wdata__h3605,
	       mem_req_wr_data_wstrb__h3606,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h3406 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       cache_rg_victim_way ?
		 cache_rg_pa[63:12] :
		 cache_ram_state_and_ctag_cset$DOB[104:53],
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       cache_rg_victim_way ?
		 cache_ram_state_and_ctag_cset$DOB[51:0] :
		 cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1081,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1082 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1189,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1190 } ;
  assign MUX_cache_ram_word128_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64,
		 cache_ram_word128_set$DOB[128:0] } :
	       { cache_ram_word128_set$DOB[257:129],
		 cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_2 =
	     cache_rg_word128_set_in_cache + 8'd1 ;
  assign MUX_cache_ram_word128_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_4 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       exc_code___1__h7662 :
	       access_exc_code__h3011 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd__h45207 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h36188 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[128],
		 x__h45103 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;
  assign MUX_cache_rg_pa$write_1__VAL_2 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___fst__h6892 :
	       cache_rg_addr ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h46558 + vpn_1_pa__h46559 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h46558 + vpn_0_pa__h47615 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h2267 + vpn_2_pa__h45627 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_cache_w_req_width_code_wget__922_EQ_0b0_94_ETC___d1963 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_5 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ? 5'd15 : 5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_9 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       ((cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_12 =
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_14 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6] ||
		 !cache_masterPortShim_rff$D_OUT[7] &&
		 !cache_masterPortShim_rff$D_OUT[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_15 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd8 :
		     ((cache_masterPortShim_rff$D_OUT[22:14] == 9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_16 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd7 :
		     ((cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
		       cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_18 =
	     EN_commit ?
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1274 :
	       5'd4 ;
  assign MUX_cache_tlb$insert_3__VAL_1 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8) ?
	       _theResult___snd_fst__h6894 :
	       cache_tlb$lookup[129:66] ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_valid$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_valid$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_valid$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_valid$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_valid$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_4;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_ld_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_valid$wset_1__SEL_1 ? 129'd0 : cache_rg_st_amo_val ;
  assign cache_dw_output_st_amo_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589 ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_ctr_wr_rsps_pending_crg$port0__write_1 =
	     cache_ctr_wr_rsps_pending_crg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_ctr_wr_rsps_pending_crg$port0__write_1 :
	       cache_ctr_wr_rsps_pending_crg ;
  assign cache_ctr_wr_rsps_pending_crg$port1__write_1 = b__h45529 - 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_ctr_wr_rsps_pending_crg$port1__write_1 :
	       cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN_port2__write =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;
  assign cache_ctr_wr_rsps_pending_crg$port3__read =
	     cache_ctr_wr_rsps_pending_crg$EN_port2__write ?
	       4'd0 :
	       cache_ctr_wr_rsps_pending_crg$port2__read ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_ctr_wr_rsps_pending_crg
  assign cache_ctr_wr_rsps_pending_crg$D_IN =
	     cache_ctr_wr_rsps_pending_crg$port3__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_allow_cap
  assign cache_rg_allow_cap$D_IN =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d494 ;
  assign cache_rg_allow_cap$EN = MUX_cache_rg_pa$write_1__SEL_2 ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_4;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_cache_w_req_width_code_wget__922_EQ_0b0_94_ETC___d1963 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__297_BIT_4__ETC___d1329 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d928 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN = cache_masterPortShim_rff$D_OUT[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_masterPortShim_rff$D_OUT[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_masterPortShim_rff$D_OUT or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_masterPortShim_rff$D_OUT[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_40_EQ_0b10_41_AND_cache_ra_ETC___d903 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d584 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d583 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_addr :
	       MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1262 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  MUX_cache_rg_state$write_1__SEL_3 or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  MUX_cache_rg_state$write_1__SEL_5 or
	  MUX_cache_rg_state$write_1__VAL_5 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_rg_state$write_1__SEL_9 or
	  MUX_cache_rg_state$write_1__VAL_9 or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_12 or
	  MUX_cache_rg_state$write_1__VAL_12 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_14 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_15 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_16 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    MUX_cache_rg_state$write_1__SEL_3: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    MUX_cache_rg_state$write_1__SEL_5:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    MUX_cache_rg_state$write_1__SEL_9:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_9;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_12:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_12;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_14;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_15;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_16;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_18;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h48970[0] ;
  assign cache_rg_victim_way$EN = CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = CAN_FIRE_RL_cache_do_req ;

  // register cache_rg_word128_set_in_cache
  assign cache_rg_word128_set_in_cache$D_IN =
	     MUX_cache_ram_word128_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_word128_set$b_put_2__VAL_2 :
	       MUX_cache_ram_word128_set$b_put_2__VAL_4 ;
  assign cache_rg_word128_set_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h3271,
	       1'd1,
	       mem_req_wr_second_data_wuser__h3406 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1198 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$lookup[63:0], value__h7695 } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ = MUX_cache_rg_state$write_1__SEL_3 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ = MUX_cache_rg_state$write_1__SEL_3 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_masterPortShim_arff
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_3 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_2;
      MUX_cache_masterPortShim_arff$enq_1__SEL_3:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_5;
      default: cache_masterPortShim_arff$D_IN =
		   97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_masterPortShim_arff$ENQ =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign cache_masterPortShim_arff$DEQ = EN_mem_master_ar_drop ;
  assign cache_masterPortShim_arff$CLR =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_awff
  assign cache_masterPortShim_awff$D_IN =
	     { 4'd0,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h3527,
	       _theResult___snd_snd_fst_val__h3563,
	       18'd65536 } ;
  assign cache_masterPortShim_awff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_awff$DEQ = EN_mem_master_aw_drop ;
  assign cache_masterPortShim_awff$CLR =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_bff
  assign cache_masterPortShim_bff$D_IN = mem_master_b_put_val ;
  assign cache_masterPortShim_bff$ENQ = EN_mem_master_b_put ;
  assign cache_masterPortShim_bff$DEQ =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;
  assign cache_masterPortShim_bff$CLR =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_rff
  assign cache_masterPortShim_rff$D_IN = mem_master_r_put_val ;
  assign cache_masterPortShim_rff$ENQ = EN_mem_master_r_put ;
  assign cache_masterPortShim_rff$DEQ =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_masterPortShim_rff$CLR =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_wff
  assign cache_masterPortShim_wff$D_IN =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       cache_f_fabric_second_write_reqs$D_OUT :
	       MUX_cache_masterPortShim_wff$enq_1__VAL_2 ;
  assign cache_masterPortShim_wff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_wff$DEQ = EN_mem_master_w_drop ;
  assign cache_masterPortShim_wff$CLR =
	     WILL_FIRE_RL_cache_rl_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ?
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_ram_word128_set
  assign cache_ram_word128_set$ADDRA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_word128_set_in_cache ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  MUX_cache_ram_word128_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_word128_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$ADDRB =
	      MUX_cache_ram_word128_set$b_put_2__VAL_4;
      default: cache_ram_word128_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$DIA =
	     MUX_cache_ram_word128_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_word128_set$a_put_3__VAL_1 :
	       MUX_cache_ram_word128_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 or
	  MUX_cache_ram_word128_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_word128_set$b_put_1__SEL_2:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_word128_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_word128_set$DIB =
		   258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_word128_set$WEA = 1'd1 ;
  assign cache_ram_word128_set$WEB = 1'd0 ;
  assign cache_ram_word128_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d973 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign cache_ram_word128_set$ENB =
	     MUX_cache_ram_state_and_ctag_cset$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_word128_set_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$insert_1__SEL_1 or
	  cache_tlb$lookup or
	  MUX_cache_tlb$insert_1__SEL_2 or
	  MUX_cache_tlb$insert_1__SEL_3 or MUX_cache_tlb$insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$insert_1__SEL_1:
	  cache_tlb$insert_level = cache_tlb$lookup[65:64];
      MUX_cache_tlb$insert_1__SEL_2: cache_tlb$insert_level = 2'd2;
      MUX_cache_tlb$insert_1__SEL_3: cache_tlb$insert_level = 2'd1;
      MUX_cache_tlb$insert_1__SEL_4: cache_tlb$insert_level = 2'd0;
      default: cache_tlb$insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$insert_pte =
	     (MUX_cache_tlb$insert_1__SEL_2 ||
	      MUX_cache_tlb$insert_1__SEL_3 ||
	      MUX_cache_tlb$insert_1__SEL_4) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       MUX_cache_tlb$insert_3__VAL_1 ;
  assign cache_tlb$insert_pte_pa =
	     MUX_cache_tlb$insert_1__SEL_1 ?
	       cache_tlb$lookup[63:0] :
	       cache_rg_pte_pa ;
  assign cache_tlb$insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$lookup_asid = cache_rg_satp[59:44] ;
  assign cache_tlb$lookup_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$EN_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;
  assign cache_tlb$EN_insert =
	     MUX_cache_tlb$insert_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1372 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;

  // remaining internal signals
  assign IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d406 =
	     (x1_avValue_pa__h6799[3:0] == 4'h0) ?
	       CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 :
	       NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d405 ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1082 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h36581 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1190 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h40648 } :
	       cache_ram_word128_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1269 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache__ETC___d1268 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1081 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h36581 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1189 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h40648 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1267 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ?
	       cache_rg_state :
	       5'd9 ;
  assign IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d292 =
	     (cache_rg_addr[3:0] == 4'h0) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 :
	       cache_rg_addr[3:0] != 4'h8 ||
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731 =
	     cache_rg_lower_word64_full ? b__h49941 : b__h55661 ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q49 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[7:0] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q50 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[31:0] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q51 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[15:0] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q52 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[15:8] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q53 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[23:16] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q54 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[39:32] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q55 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[31:16] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q56 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[31:24] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q57 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[47:32] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q58 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:32] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q59 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[47:40] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q60 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[55:48] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q61 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:48] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q62 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:56] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q63 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[71:64] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q64 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[79:64] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q65 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[95:64] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q66 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[79:72] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q67 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[87:80] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q68 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[95:80] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q69 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[95:88] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q70 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[103:96] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q71 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[111:96] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q72 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[127:96] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q73 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[111:104] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q74 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[119:112] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q75 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[127:112] ;
  assign IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q76 =
	     IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[127:120] ;
  assign IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d1271 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1267 :
	       IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1270 ;
  assign IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d422 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d300 :
	       IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d421 ;
  assign IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1200 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118 } ;
  assign IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d1270 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache__ETC___d1268 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1269 ;
  assign IF_cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_ETC___d421 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_35_EQ_2_38_AND_cache_rg_amo_funct5_ETC___d331 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d332 ||
	       cache_f_fabric_write_reqs$FULL_N &&
	       _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d418 ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1273 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1265) ?
	       5'd4 :
	       (cache_soc_map$m_is_mem_addr ?
		  IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d1271 :
		  5'd13) ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1274 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       5'd5 :
	       IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d1273 ;
  assign IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 =
	     x1_avValue_pa__h6799 == cache_rg_lrsc_pa ;
  assign IF_cache_rg_victim_way_461_THEN_cache_masterPo_ETC___d1530 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_word128_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_461_THEN_cache_ram_word_ETC___d1529 =
	     cache_rg_victim_way ?
	       cache_ram_word128_set$DOB[128:0] :
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d416 =
	     IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 ||
	      IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413) ;
  assign IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h40860 ;
  assign IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q45[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q45 } :
	       cache_rg_st_amo_val[63:0] ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d385 =
	     x1_avValue_pa__h6799[3:0] != 4'hF ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395 =
	     x1_avValue_pa__h6799[3:0] != 4'hE ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d401 =
	     x1_avValue_pa__h6799[3:0] != 4'hC ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d405 =
	     x1_avValue_pa__h6799[3:0] != 4'h8 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d493 =
	     !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d435 &&
	     NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438 &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d441 &&
	     !pte___2__h7306[62] ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d497 =
	     !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130] ||
	      cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d494) ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d506 =
	     !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      !cache_tlb$lookup[130] ||
	      cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d187) ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d515 =
	     !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 ;
  assign NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__4_50_AND_cach_ETC___d1543 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_masterPortShim_rff_first__297_BIT_4__ETC___d1329 =
	     !cache_masterPortShim_rff$D_OUT[4] ||
	     !cache_masterPortShim_rff$D_OUT[5] &&
	     cache_masterPortShim_rff$D_OUT[6] ||
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ||
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 =
	     !cache_ram_state_and_ctag_cset$DOB[52] ||
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 =
	     !cache_ram_state_and_ctag_cset$DOB[105] ||
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d300 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ||
	     IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d328 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ||
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 ||
	      IF_cache_rg_width_code_34_EQ_0_35_OR_cache_rg__ETC___d322) &&
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 ||
	      IF_cache_rg_width_code_34_EQ_0_35_OR_cache_rg__ETC___d322) ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d332 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ||
	     !EN_commit ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d565 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d911 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d917 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_35_EQ_0_36_37_AND_NOT_cache_rg_ETC___d157 =
	     (cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ||
	      !cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149) &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      !cache_tlb$lookup[68]) ;
  assign NOT_cache_rg_op_35_EQ_1_01_71_AND_NOT_cache_rg_ETC___d1256 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1193 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) &&
	     EN_commit ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1221 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d897 ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1227 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) &&
	     EN_commit &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d911 ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1233 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) &&
	     EN_commit &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d543 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	     cache_tlb$lookup[68] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h7306[62] ;
  assign NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d967 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308) &&
	     cache_dw_commit_whas__12_AND_cache_dw_commit_w_ETC___d966 ;
  assign NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d435 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d434 ;
  assign NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d507 =
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb$lookup[68] ;
  assign NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 =
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d507 &&
	     (!cache_rg_st_amo_val[128] || cache_tlb$lookup[129]) &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] &&
	     !pte___2__h7304[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) ;
  assign NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d531 =
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     (!cache_rg_st_amo_val[128] || cache_tlb$lookup[129]) &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d529 ;
  assign NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d548 =
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     (!cache_rg_st_amo_val[128] || cache_tlb$lookup[129]) &&
	     cache_tlb$lookup[72] &&
	     !pte___2__h7304[7] &&
	     cache_rg_op != 2'd0 &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d543 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1198 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d1195 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1204 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1210 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1215 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_rg_lrsc_valid &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1219 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1221 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1231 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1227 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1237 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1233 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1242 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h36188 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1253 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1259 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_rg_op_35_EQ_1_01_71_AND_NOT_cache_rg_ETC___d1256 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1262 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1264 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) &&
	     !cache_soc_map$m_is_mem_addr &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d194 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d187 ||
	     cache_tlb$RDY_insert && cache_tlb$RDY_lookup &&
	     cache_f_pte_writebacks$FULL_N ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d445 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     !cache_tlb$lookup[130] ||
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d435 &&
	     NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438 &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d441 ||
	     cache_tlb$RDY_lookup ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d448 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup) &&
	     cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d425 &&
	     (!EN_commit ||
	      NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d445) ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d559 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_ram_state_and_ctag_cset$DOB[52] &&
	     cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 &&
	     cache_ram_state_and_ctag_cset$DOB[105] &&
	     cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d583 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d581 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d589 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474) &&
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d584 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	      lrsc_result__h36188) ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d731 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d596) &&
	     cache_rg_width_code == 3'b100 &&
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[128] ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 =
	     !cache_rg_priv_09_ULE_0b1___d110 ||
	     cache_rg_satp[63:60] != 4'd8 ||
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     (cache_rg_priv != 2'b01 || !cache_tlb$lookup[70] ||
	      cache_rg_sstatus_SUM) &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149 &&
	     cache_tlb$lookup[72] ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d928 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d927 ;
  assign NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d973 =
	     (!cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d970 ;
  assign NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438 =
	     !cache_rg_st_amo_val[128] || cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	     cache_tlb$lookup[129] ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171 =
	     !cache_tlb$lookup[72] ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[73] ;
  assign NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d596 =
	     !cache_tlb$lookup[130] ||
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149 ||
	     !cache_tlb$lookup[72] ||
	     pte___2__h7306[62] ;
  assign NOT_cache_w_req_width_code_wget__922_EQ_0b0_94_ETC___d1963 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d738 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q31[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q31 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d742 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q43[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q43 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d746 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q29[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q29 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d750 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q42[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q42 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d754 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q27[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q27 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d758 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q38[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q38 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d762 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q25[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q25 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d766 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q41[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q41 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d770 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q23[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q23 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d774 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q40[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q40 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d778 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q21[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q21 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d782 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q39[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q39 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d786 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q19[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q19 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d790 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q37[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q37 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d794 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q17[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q17 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d798 =
	     { {56{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q36[7]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q36 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d818 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q30[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q30 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d822 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q28[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q28 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d826 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q26[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q26 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d830 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q24[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q24 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d834 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q22[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q22 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d838 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q20[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q20 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d842 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q18[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q18 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d846 =
	     { {48{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q16[15]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q16 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d858 =
	     { {32{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q35[31]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q35 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d862 =
	     { {32{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q34[31]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q34 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d866 =
	     { {32{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q33[31]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q33 } ;
  assign SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d870 =
	     { {32{cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q32[31]}},
	       cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q32 } ;
  assign _0_OR_NOT_cache_ram_state_and_ctag_cset_b_read__ETC___d418 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 ||
	      IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413) &&
	     cache_rg_width_code_34_EQ_0b100_93_OR_cache_rg_ETC___d408 &&
	     IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d416 ;
  assign _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 =
	     8'd1 << size_val__h55107 <= 8'd8 ;
  assign _theResult___fst__h6892 =
	     cache_tlb$lookup[130] ? _theResult___fst__h6969 : cache_rg_addr ;
  assign _theResult___fst__h6969 =
	     (cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ?
	       cache_rg_addr :
	       _theResult___fst__h7307 ;
  assign _theResult___snd__h53227 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       64'd0 ;
  assign _theResult___snd_fst__h6894 =
	     cache_tlb$lookup[130] ?
	       _theResult___snd_fst__h6971 :
	       cache_tlb$lookup[129:66] ;
  assign _theResult___snd_fst__h6971 =
	     (cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ?
	       cache_tlb$lookup[129:66] :
	       pte___2__h7306 ;
  assign access_exc_code__h3011 = MUX_cache_rg_exc_code$write_1__VAL_4 ;
  assign b__h45529 = cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign b__h49941 =
	     { cache_masterPortShim_rff$D_OUT[67:4], cache_rg_lower_word64 } ;
  assign b__h55661 = { 64'd0, _theResult___snd_fst__h53259 } ;
  assign cache_cfg_verbosity_read__0_ULE_1___d61 =
	     cache_cfg_verbosity <= 4'd1 ;
  assign cache_dw_commit_whas__12_AND_cache_dw_commit_w_ETC___d966 =
	     EN_commit &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ;
  assign cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1 =
	     cache_masterPortShim_rff$D_OUT[11:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4 =
	     cache_masterPortShim_rff$D_OUT[19:12] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2 =
	     cache_masterPortShim_rff$D_OUT[19:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5 =
	     cache_masterPortShim_rff$D_OUT[27:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6 =
	     cache_masterPortShim_rff$D_OUT[35:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 =
	     cache_masterPortShim_rff$D_OUT[35:28] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3 =
	     cache_masterPortShim_rff$D_OUT[35:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8 =
	     cache_masterPortShim_rff$D_OUT[43:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9 =
	     cache_masterPortShim_rff$D_OUT[51:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11 =
	     cache_masterPortShim_rff$D_OUT[51:44] ;
  assign cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12 =
	     cache_masterPortShim_rff$D_OUT[59:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10 =
	     cache_masterPortShim_rff$D_OUT[67:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13 =
	     cache_masterPortShim_rff$D_OUT[67:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14 =
	     cache_masterPortShim_rff$D_OUT[67:60] ;
  assign cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1372 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1413 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1419 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1362 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1374 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1322 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      ((!cache_masterPortShim_rff$D_OUT[7] &&
		!cache_masterPortShim_rff$D_OUT[5]) ?
		 cache_masterPortShim_arff$FULL_N :
		 cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
		 cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1386 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      ((!cache_masterPortShim_rff$D_OUT[7] &&
		!cache_masterPortShim_rff$D_OUT[5]) ?
		 cache_masterPortShim_arff$FULL_N :
		 cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
		 cache_tlb$RDY_insert)) ;
  assign cache_masterPortShim_rff_i_notEmpty__296_AND_N_ETC___d1713 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_masterPortShim_rff$D_OUT[1] ||
	      cache_f_fabric_write_reqs$FULL_N) ;
  assign cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     x1_avValue_pa__h6799[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     x1_avValue_pa__h6799[63:12] ;
  assign cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d562 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     EN_commit ;
  assign cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d897 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728 =
	     x__h8710 | y__h8711 ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q16 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:112] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q17 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[119:112] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q18 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[111:96] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q19 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[103:96] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q20 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:80] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q21 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[87:80] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q22 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[79:64] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q23 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[71:64] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q24 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:48] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q25 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[55:48] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q26 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[47:32] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q27 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[39:32] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q28 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:16] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q29 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[23:16] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q30 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[15:0] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q31 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[7:0] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q32 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:96] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q33 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:64] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q34 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:32] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q35 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:0] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q36 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:120] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q37 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[111:104] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q38 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[47:40] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q39 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:88] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q40 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[79:72] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q41 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:56] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q42 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:24] ;
  assign cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC__q43 =
	     cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[15:8] ;
  assign cache_rg_amo_funct5_40_EQ_0b10_41_AND_cache_ra_ETC___d903 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ;
  assign cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308 =
	     cache_rg_lrsc_pa == x1_avValue_pa__h6799 ;
  assign cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d434 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_tlb$lookup[68] ;
  assign cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d567 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d562 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d565) ;
  assign cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d581 =
	     cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d567 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d579 ;
  assign cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_2__ETC___d584 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230) ;
  assign cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d1195 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d1193 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 ;
  assign cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d579 =
	     cache_rg_op == 2'd1 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 &&
	     IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_sa_ETC___d563 ;
  assign cache_rg_op_35_EQ_1_01_OR_cache_rg_op_35_EQ_2__ETC___d970 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_35_EQ_2_38_39_OR_NOT_cache_rg__ETC___d967 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 ;
  assign cache_rg_op_35_EQ_2_38_AND_cache_rg_amo_funct5_ETC___d331 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h36188 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d328 ;
  assign cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     NOT_cache_rg_op_35_EQ_0_36_37_AND_NOT_cache_rg_ETC___d157 ;
  assign cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d187 =
	     cache_rg_priv == 2'b0 && !cache_tlb$lookup[70] ||
	     cache_rg_priv == 2'b01 && cache_tlb$lookup[70] &&
	     !cache_rg_sstatus_SUM ||
	     !cache_tlb$lookup[68] ||
	     cache_rg_st_amo_val[128] && !cache_tlb$lookup[129] ||
	     !cache_tlb$lookup[72] ||
	     !cache_tlb$lookup[73] ||
	     pte___2__h7304[7] ||
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d494 =
	     cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	     cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	     NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171 ||
	     pte___2__h7306[62] ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d425 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (!cache_tlb$lookup[130] ||
	      cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ||
	     NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d194 &&
	     (!cache_soc_map$m_is_mem_addr ||
	      IF_cache_rg_op_35_EQ_0_36_OR_cache_rg_op_35_EQ_ETC___d422) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d477 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     (cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d539 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	     (!cache_tlb$lookup[68] ||
	      cache_rg_st_amo_val[128] && !cache_tlb$lookup[129] ||
	      !cache_tlb$lookup[73]) ;
  assign cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d555 =
	     cache_rg_priv_09_ULE_0b1___d110 &&
	     cache_rg_satp[63:60] == 4'd8 &&
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d512 &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	     (!cache_tlb$lookup[68] ||
	      cache_rg_st_amo_val[128] && !cache_tlb$lookup[129] ||
	      !cache_tlb$lookup[73] ||
	      pte___2__h7306[62]) ;
  assign cache_rg_priv_09_ULE_0b1___d110 = cache_rg_priv <= 2'b01 ;
  assign cache_rg_satp_12_BITS_63_TO_60_13_EQ_8_14_AND__ETC___d534 =
	     cache_rg_satp[63:60] == 4'd8 && cache_tlb$lookup[130] &&
	     (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	     NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d531 ;
  assign cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 =
	     cache_rg_st_amo_val[128] && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     !cache_tlb$lookup[129] ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q45 = cache_rg_st_amo_val[31:0] ;
  assign cache_rg_width_code_34_EQ_0b100_93_OR_cache_rg_ETC___d408 =
	     cache_rg_width_code == 3'b100 ||
	     CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1248 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d332 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1253 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576 &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d899 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d897 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d913 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d911 ;
  assign cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d927 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 &&
	      cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d576) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1265 =
	     cache_tlb$lookup[130] &&
	     (cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      cache_rg_st_amo_val_59_BIT_128_60_AND_NOT_cach_ETC___d164 ||
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d149 =
	     cache_tlb$lookup[67] | y__h7096 ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d441 =
	     cache_tlb$lookup[72] &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	      cache_tlb$lookup[73]) ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474 =
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d435 &&
	     NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438 &&
	     cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d441 ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d529 =
	     cache_tlb$lookup[72] && !pte___2__h7304[7] &&
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     NOT_cache_cfg_verbosity_read__0_ULT_2_21___d522 &&
	     cache_tlb$lookup[68] &&
	     cache_tlb$lookup[73] ;
  assign cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922 =
	     cache_tlb$lookup[130] &&
	     NOT_cache_rg_priv_09_EQ_0b0_25_26_OR_cache_tlb_ETC___d507 &&
	     (!cache_rg_st_amo_val[128] || cache_tlb$lookup[129]) &&
	     cache_tlb$lookup[72] &&
	     cache_tlb$lookup[73] ;
  assign cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1979 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1984 =
	     (cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1979 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     !cache_cfg_verbosity_read__0_ULE_1___d61 ;
  assign cline_fabric_addr__h48813 = { cache_rg_pa[63:6], 6'd0 } ;
  assign exc_code___1__h7662 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign lev_0_pte_pa__h47616 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h47618 = { lev_0_pte_pa__h47616[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h46558 = { 8'd0, x__h46641 } ;
  assign lev_1_pte_pa__h46560 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h46562 = { lev_1_pte_pa__h46560[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h45628 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h45630 = { lev_2_pte_pa__h45628[63:3], 3'b0 } ;
  assign lrsc_result__h36188 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_07_EQ_IF_cache_rg_priv_09_ULE_ETC___d308 ;
  assign mem_req_wr_addr_awlen__h3527 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h3406 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h40860 = { 64'd0, x__h40863 } ;
  assign new_st_val_128__h55917 = { 64'd0, x__h55920 } ;
  assign new_st_val_64__h40865 = { 32'd0, _theResult_____2__h40859[31:0] } ;
  assign new_st_val_64__h40937 =
	     IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 +
	     IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ;
  assign new_st_val_64__h42134 = w1__h40716 ^ w2__h40718 ;
  assign new_st_val_64__h42138 = w1__h40716 & w2__h40718 ;
  assign new_st_val_64__h42142 = w1__h40716 | w2__h40718 ;
  assign new_st_val_64__h42146 =
	     (w1__h40716 < w2__h40718) ? w1__h40716 : w2__h40718 ;
  assign new_st_val_64__h42151 =
	     (w1__h40716 <= w2__h40718) ? w2__h40718 : w1__h40716 ;
  assign new_st_val_64__h42157 =
	     ((IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ^
	       64'h8000000000000000)) ?
	       w1__h40716 :
	       w2__h40718 ;
  assign new_st_val_64__h42162 =
	     ((IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ^
	       64'h8000000000000000)) ?
	       w2__h40718 :
	       w1__h40716 ;
  assign new_st_val_64__h55922 = { 32'd0, _theResult_____2__h55916[31:0] } ;
  assign new_st_val_64__h55994 =
	     IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 +
	     IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ;
  assign new_st_val_64__h57935 = w1__h55883 ^ w2__h40718 ;
  assign new_st_val_64__h57939 = w1__h55883 & w2__h40718 ;
  assign new_st_val_64__h57943 = w1__h55883 | w2__h40718 ;
  assign new_st_val_64__h57947 =
	     (w1__h55883 < w2__h40718) ? w1__h55883 : w2__h40718 ;
  assign new_st_val_64__h57952 =
	     (w1__h55883 <= w2__h40718) ? w2__h40718 : w1__h55883 ;
  assign new_st_val_64__h57958 =
	     ((IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ^
	       64'h8000000000000000)) ?
	       w1__h55883 :
	       w2__h40718 ;
  assign new_st_val_64__h57963 =
	     ((IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1090 ^
	       64'h8000000000000000)) ?
	       w2__h40718 :
	       w1__h55883 ;
  assign pa___1__h7449 = { 8'd0, x__h7452 } ;
  assign pa___1__h7498 = { 8'd0, x__h7501 } ;
  assign pa___1__h7567 = { 8'd0, x__h7570 } ;
  assign pte___1__h7378 =
	     { cache_tlb$lookup[129:73], 1'd1, cache_tlb$lookup[71:66] } ;
  assign pte___1__h7406 =
	     { pte___2__h7304[63:8], 1'd1, pte___2__h7304[6:0] } ;
  assign pte___2__h7304 =
	     cache_tlb$lookup[72] ?
	       cache_tlb$lookup[129:66] :
	       pte___1__h7378 ;
  assign pte___2__h7306 =
	     (!pte___2__h7304[7] && cache_rg_op != 2'd0 &&
	      (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010)) ?
	       pte___1__h7406 :
	       pte___2__h7304 ;
  assign result_lo__h34169 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[7:0] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d738 ;
  assign result_lo__h34204 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[15:8] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d742 ;
  assign result_lo__h34237 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[23:16] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d746 ;
  assign result_lo__h34270 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:24] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d750 ;
  assign result_lo__h34303 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[39:32] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d754 ;
  assign result_lo__h34336 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[47:40] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d758 ;
  assign result_lo__h34369 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[55:48] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d762 ;
  assign result_lo__h34402 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:56] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d766 ;
  assign result_lo__h34435 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[71:64] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d770 ;
  assign result_lo__h34468 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[79:72] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d774 ;
  assign result_lo__h34501 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[87:80] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d778 ;
  assign result_lo__h34534 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:88] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d782 ;
  assign result_lo__h34567 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[103:96] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d786 ;
  assign result_lo__h34600 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[111:104] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d790 ;
  assign result_lo__h34633 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[119:112] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d794 ;
  assign result_lo__h34666 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:120] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d798 ;
  assign result_lo__h34721 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[15:0] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d818 ;
  assign result_lo__h34754 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:16] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d822 ;
  assign result_lo__h34787 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[47:32] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d826 ;
  assign result_lo__h34820 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:48] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d830 ;
  assign result_lo__h34853 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[79:64] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d834 ;
  assign result_lo__h34886 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:80] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d838 ;
  assign result_lo__h34919 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[111:96] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d842 ;
  assign result_lo__h34952 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:112] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d846 ;
  assign result_lo__h34999 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[31:0] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d858 ;
  assign result_lo__h35032 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:32] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d862 ;
  assign result_lo__h35065 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[95:64] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d866 ;
  assign result_lo__h35098 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:96] } :
	       SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d870 ;
  assign result_lo__h53296 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[11:4] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q1 } ;
  assign result_lo__h53329 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[19:12] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q4 } ;
  assign result_lo__h53362 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[27:20] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q5 } ;
  assign result_lo__h53395 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[35:28] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 } ;
  assign result_lo__h53428 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[43:36] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q8 } ;
  assign result_lo__h53461 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[51:44] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q11 } ;
  assign result_lo__h53494 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[59:52] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q12 } ;
  assign result_lo__h53527 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[67:60] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q14 } ;
  assign result_lo__h53590 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[19:4] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q2 } ;
  assign result_lo__h53623 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[35:20] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q6 } ;
  assign result_lo__h53656 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[51:36] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q9 } ;
  assign result_lo__h53689 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[67:52] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q13 } ;
  assign result_lo__h53740 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[35:4] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q3 } ;
  assign result_lo__h53773 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[67:36] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q10 } ;
  assign result_lo__h56870 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q49[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q49 } ;
  assign result_lo__h56902 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q52[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q52 } ;
  assign result_lo__h56934 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q53[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q53 } ;
  assign result_lo__h56966 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q56[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q56 } ;
  assign result_lo__h56998 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q54[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q54 } ;
  assign result_lo__h57030 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q59[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q59 } ;
  assign result_lo__h57062 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q60[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q60 } ;
  assign result_lo__h57094 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q62[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q62 } ;
  assign result_lo__h57126 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q63[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q63 } ;
  assign result_lo__h57158 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q66[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q66 } ;
  assign result_lo__h57190 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q67[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q67 } ;
  assign result_lo__h57222 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q69[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q69 } ;
  assign result_lo__h57254 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q70[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q70 } ;
  assign result_lo__h57286 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q73[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q73 } ;
  assign result_lo__h57318 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q74[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q74 } ;
  assign result_lo__h57350 =
	     { {56{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q76[7]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q76 } ;
  assign result_lo__h57404 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q51[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q51 } ;
  assign result_lo__h57436 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q55[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q55 } ;
  assign result_lo__h57468 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q57[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q57 } ;
  assign result_lo__h57500 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q61[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q61 } ;
  assign result_lo__h57532 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q64[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q64 } ;
  assign result_lo__h57564 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q68[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q68 } ;
  assign result_lo__h57596 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q71[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q71 } ;
  assign result_lo__h57628 =
	     { {48{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q75[15]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q75 } ;
  assign result_lo__h57674 =
	     { {32{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q50[31]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q50 } ;
  assign result_lo__h57706 =
	     { {32{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q58[31]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q58 } ;
  assign result_lo__h57738 =
	     { {32{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q65[31]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q65 } ;
  assign result_lo__h57770 =
	     { {32{IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q72[31]}},
	       IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC__q72 } ;
  assign satp_pa__h2267 = { 8'd0, x__h5609 } ;
  assign shift_bits__h3294 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h3544 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3548 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3552 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h3556 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h48969 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h48970 = tmp__h48969 + 2'd1 ;
  assign value__h7695 = MUX_cache_tlb$insert_3__VAL_1 ;
  assign vpn_0_pa__h47615 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h46559 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h45627 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w10711_BITS_31_TO_0__q44 = w1__h40711[31:0] ;
  assign w15878_BITS_31_TO_0__q77 = w1__h55878[31:0] ;
  assign w1___1__h40904 = { 32'd0, w1__h40711[31:0] } ;
  assign w1___1__h55961 = { 32'd0, w1__h55878[31:0] } ;
  assign w2__h40718 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h3543 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h3294 ;
  assign x1_avValue_exc_code__h6800 =
	     (cache_rg_priv_09_EQ_0b0_25_AND_NOT_cache_tlb_l_ETC___d158 ||
	      NOT_cache_rg_st_amo_val_59_BIT_128_60_36_OR_ca_ETC___d438 &&
	      NOT_cache_tlb_lookup_cache_rg_satp_12_BITS_59__ETC___d171) ?
	       exc_code___1__h7662 :
	       6'd27 ;
  assign x1_avValue_pa__h6799 = MUX_cache_rg_pa$write_1__VAL_2 ;
  assign x1_avValue_snd__h45207 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      !cache_tlb$lookup[130]) ?
	       cache_rg_exc_code :
	       y_avValue_snd__h45205 ;
  assign x__h34130 =
	     { _theResult___snd_snd__h34132, _theResult___snd_fst__h34131 } ;
  assign x__h40863 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h40865 :
	       _theResult_____2__h40859 ;
  assign x__h45103 = { _theResult___snd_snd__h34132, w1__h40711 } ;
  assign x__h46641 = { cache_masterPortShim_rff$D_OUT[57:14], 12'b0 } ;
  assign x__h55911 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h55917 ;
  assign x__h55920 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h55922 :
	       _theResult_____2__h55916 ;
  assign x__h5609 = { cache_rg_satp[43:0], 12'b0 } ;
  assign x__h58080 = { _theResult___snd_snd__h56099, w1__h55878 } ;
  assign x__h7452 = { cache_tlb$lookup[119:76], cache_rg_addr[11:0] } ;
  assign x__h7501 = { cache_tlb$lookup[119:85], cache_rg_addr[20:0] } ;
  assign x__h7570 = { cache_tlb$lookup[119:94], cache_rg_addr[29:0] } ;
  assign x__h8710 = cache_ram_word128_set$DOB[128:0] & y__h8732 ;
  assign y__h21428 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230}} ;
  assign y__h7096 = cache_rg_mstatus_MXR & cache_tlb$lookup[69] ;
  assign y__h8711 = cache_ram_word128_set$DOB[257:129] & y__h21428 ;
  assign y__h8732 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d224}} ;
  assign y_avValue_snd__h45205 =
	     (cache_rg_priv_09_ULE_0b1___d110 &&
	      cache_rg_satp[63:60] == 4'd8 &&
	      cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d1265) ?
	       x1_avValue_exc_code__h6800 :
	       cache_rg_exc_code ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h3271 = 8'd0;
      3'b100: fabric_2_strb__h3271 = 8'b11111111;
      default: fabric_2_strb__h3271 = 8'd0;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___snd_fst__h39820 = 64'd1;
      default: _theResult___snd_fst__h39820 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h3563 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h3563 = 3'b011;
      default: _theResult___snd_snd_fst_val__h3563 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h55107 = cache_rg_width_code;
      default: size_val__h55107 = 3'b100;
    endcase
  end
  always@(cache_tlb$lookup or
	  cache_rg_addr or pa___1__h7449 or pa___1__h7498 or pa___1__h7567)
  begin
    case (cache_tlb$lookup[65:64])
      2'd0: _theResult___fst__h7307 = pa___1__h7449;
      2'd1: _theResult___fst__h7307 = pa___1__h7498;
      2'd2: _theResult___fst__h7307 = pa___1__h7567;
      2'd3: _theResult___fst__h7307 = cache_rg_addr;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h3544 or
	  strobe64__h3548 or strobe64__h3552 or strobe64__h3556)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h3606 = strobe64__h3544;
      3'b001: mem_req_wr_data_wstrb__h3606 = strobe64__h3548;
      3'b010: mem_req_wr_data_wstrb__h3606 = strobe64__h3552;
      3'b011: mem_req_wr_data_wstrb__h3606 = strobe64__h3556;
      3'b100: mem_req_wr_data_wstrb__h3606 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h3606 = 8'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h3543)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h3605 = word64__h3543;
      default: mem_req_wr_data_wdata__h3605 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230 or
	  cache_ram_word128_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__19_BITS__ETC___d230)
      1'd0: new_word128__h36563 = cache_ram_word128_set$DOB[127:0];
      1'd1: new_word128__h36563 = cache_ram_word128_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 or
	  cache_rg_priv_09_ULE_0b1___d110 or
	  cache_rg_satp or cache_tlb$RDY_lookup)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3:
	  IF_cache_rg_width_code_34_EQ_0_35_OR_cache_rg__ETC___d322 =
	      !cache_rg_priv_09_ULE_0b1___d110 ||
	      cache_rg_satp[63:60] != 4'd8 ||
	      cache_tlb$RDY_lookup;
      default: IF_cache_rg_width_code_34_EQ_0_35_OR_cache_rg__ETC___d322 =
		   cache_rg_width_code == 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267)
  begin
    case (cache_rg_addr[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d272 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
      4'd15:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d272 =
	      cache_rg_addr[3:0] != 4'hF ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d282 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d282 =
		   cache_rg_addr[3:0] != 4'hE ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_addr or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267)
  begin
    case (cache_rg_addr[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d288 =
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
	      NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d288 =
		   cache_rg_addr[3:0] != 4'hC ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d272 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d282 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d288 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d292)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d272;
      3'd1:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d282;
      3'b010:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_O_ETC___d288;
      3'd3:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d292;
      default: IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299 =
		   cache_rg_width_code != 3'b100 ||
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d266 &&
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299)
  begin
    case (cache_rg_amo_funct5)
      5'b0, 5'b00100, 5'b01000, 5'b01100, 5'b10000, 5'b11000, 5'b11100:
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
	      IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299;
      default: CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15 =
		   cache_rg_amo_funct5 != 5'b10100 ||
		   IF_cache_rg_width_code_34_EQ_0_35_THEN_IF_cach_ETC___d299;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0, 4'h2, 4'h4, 4'h6, 4'h8, 4'hA, 4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 =
		   NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d395;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d385 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0,
      4'h1,
      4'h2,
      4'h3,
      4'h4,
      4'h5,
      4'h6,
      4'h7,
      4'h8,
      4'h9,
      4'hA,
      4'hB,
      4'hC,
      4'hD,
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d386 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      4'd15:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d386 =
	      NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d385;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d401 or
	  CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0, 4'h4, 4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d402 =
	      CASE_cache_rg_amo_funct5_0b0_IF_cache_rg_width_ETC__q15;
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d402 =
		   NOT_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_r_ETC___d401;
    endcase
  end
  always@(cache_rg_width_code or
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267 or
	  cache_rg_priv_09_ULE_0b1___d110 or
	  cache_rg_satp or
	  cache_tlb$RDY_lookup or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d386 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d402 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d406 or
	  cache_rg_width_code_34_EQ_0b100_93_OR_cache_rg_ETC___d408)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d386;
      3'd1:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d396;
      3'b010:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d402;
      3'd3:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
	      (!cache_rg_priv_09_ULE_0b1___d110 ||
	       cache_rg_satp[63:60] != 4'd8 ||
	       cache_tlb$RDY_lookup) &&
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d406;
      3'b100:
	  IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
	      cache_rg_width_code_34_EQ_0b100_93_OR_cache_rg_ETC___d408;
      default: IF_cache_rg_width_code_34_EQ_0_35_THEN_NOT_cac_ETC___d413 =
		   NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d267;
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h34132 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h34132 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:64];
      default: _theResult___snd_snd__h34132 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h8652 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:0];
      4'h8:
	  _theResult___snd__h8652 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[127:64];
      default: _theResult___snd__h8652 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d858 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d862 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d866 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d870)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d858;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d862;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d866;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d870;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34999 or
	  result_lo__h35032 or result_lo__h35065 or result_lo__h35098)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 =
	      result_lo__h34999;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 =
	      result_lo__h35032;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 =
	      result_lo__h35065;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 =
	      result_lo__h35098;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d818 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d822 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d826 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d830 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d834 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d838 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d842 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d846)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d818;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d822;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d826;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d830;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d834;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d838;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d842;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d846;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34721 or
	  result_lo__h34754 or
	  result_lo__h34787 or
	  result_lo__h34820 or
	  result_lo__h34853 or
	  result_lo__h34886 or result_lo__h34919 or result_lo__h34952)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34721;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34754;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34787;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34820;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34853;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34886;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34919;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
	      result_lo__h34952;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d738 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d742 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d746 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d750 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d754 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d758 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d762 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d766 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d770 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d774 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d778 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d782 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d786 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d790 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d794 or
	  SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d798)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d738;
      4'h1:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d742;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d746;
      4'h3:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d750;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d754;
      4'h5:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d758;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d762;
      4'h7:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d766;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d770;
      4'h9:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d774;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d778;
      4'hB:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d782;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d786;
      4'hD:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d790;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d794;
      4'hF:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 =
	      SEXT_cache_ram_word128_set_b_read__71_BITS_128_ETC___d798;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957 or
	  _theResult___snd__h8652 or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h40711 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945;
      3'd1:
	  w1__h40711 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953;
      3'b010:
	  w1__h40711 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d957;
      3'd3: w1__h40711 = _theResult___snd__h8652;
      3'b100:
	  w1__h40711 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:0];
      default: w1__h40711 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 or
	  w1___1__h40904 or
	  _theResult___snd__h8652 or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h40716 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945;
      3'd1:
	  w1__h40716 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953;
      3'b010: w1__h40716 = w1___1__h40904;
      3'd3: w1__h40716 = _theResult___snd__h8652;
      3'b100:
	  w1__h40716 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:0];
      default: w1__h40716 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h34169 or
	  result_lo__h34204 or
	  result_lo__h34237 or
	  result_lo__h34270 or
	  result_lo__h34303 or
	  result_lo__h34336 or
	  result_lo__h34369 or
	  result_lo__h34402 or
	  result_lo__h34435 or
	  result_lo__h34468 or
	  result_lo__h34501 or
	  result_lo__h34534 or
	  result_lo__h34567 or
	  result_lo__h34600 or result_lo__h34633 or result_lo__h34666)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34169;
      4'h1:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34204;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34237;
      4'h3:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34270;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34303;
      4'h5:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34336;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34369;
      4'h7:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34402;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34435;
      4'h9:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34468;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34501;
      4'hB:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34534;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34567;
      4'hD:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34600;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34633;
      4'hF:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 =
	      result_lo__h34666;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875 or
	  _theResult___snd__h8652 or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h34131 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d815;
      3'd1:
	  _theResult___snd_fst__h34131 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d855;
      3'b010:
	  _theResult___snd_fst__h34131 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d875;
      3'd3: _theResult___snd_fst__h34131 = _theResult___snd__h8652;
      3'b100:
	  _theResult___snd_fst__h34131 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:0];
      default: _theResult___snd_fst__h34131 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953 or
	  w10711_BITS_31_TO_0__q44 or
	  _theResult___snd__h8652 or
	  cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d945;
      3'd1:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d953;
      3'b010:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
	      { {32{w10711_BITS_31_TO_0__q44[31]}},
		w10711_BITS_31_TO_0__q44 };
      3'd3:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
	      _theResult___snd__h8652;
      3'b100:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
	      cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728[63:0];
      default: IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1088 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h42162 or
	  new_st_val_64__h40937 or
	  w2__h40718 or
	  new_st_val_64__h42134 or
	  new_st_val_64__h42142 or
	  new_st_val_64__h42138 or
	  new_st_val_64__h42157 or
	  new_st_val_64__h42146 or new_st_val_64__h42151)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h40859 = new_st_val_64__h40937;
      5'b00001: _theResult_____2__h40859 = w2__h40718;
      5'b00100: _theResult_____2__h40859 = new_st_val_64__h42134;
      5'b01000: _theResult_____2__h40859 = new_st_val_64__h42142;
      5'b01100: _theResult_____2__h40859 = new_st_val_64__h42138;
      5'b10000: _theResult_____2__h40859 = new_st_val_64__h42157;
      5'b11000: _theResult_____2__h40859 = new_st_val_64__h42146;
      5'b11100: _theResult_____2__h40859 = new_st_val_64__h42151;
      default: _theResult_____2__h40859 = new_st_val_64__h42162;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  new_word128__h36563 or
	  IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 =
	      { new_word128__h36563[127:32],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 =
	      { new_word128__h36563[127:64],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[31:0],
		new_word128__h36563[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 =
	      { new_word128__h36563[127:96],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[31:0],
		new_word128__h36563[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 =
	      { IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[31:0],
		new_word128__h36563[95:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 =
		   new_word128__h36563;
    endcase
  end
  always@(x1_avValue_pa__h6799 or new_word128__h36563 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 =
	      { new_word128__h36563[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 =
	      { new_word128__h36563[127:64],
		cache_rg_st_amo_val[31:0],
		new_word128__h36563[31:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 =
	      { new_word128__h36563[127:96],
		cache_rg_st_amo_val[31:0],
		new_word128__h36563[63:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 =
	      { cache_rg_st_amo_val[31:0], new_word128__h36563[95:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 =
		   new_word128__h36563;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  new_word128__h36563 or
	  IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:16],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:32],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:48],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:64],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:80],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:96],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { new_word128__h36563[127:112],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
	      { IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[15:0],
		new_word128__h36563[111:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 =
		   new_word128__h36563;
    endcase
  end
  always@(x1_avValue_pa__h6799 or new_word128__h36563 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:32],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[15:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:48],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[31:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:64],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[47:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:80],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[63:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:96],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[79:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { new_word128__h36563[127:112],
		cache_rg_st_amo_val[15:0],
		new_word128__h36563[95:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
	      { cache_rg_st_amo_val[15:0], new_word128__h36563[111:0] };
      default: IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 =
		   new_word128__h36563;
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  new_word128__h36563 or
	  IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:8],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:16],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:24],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:32],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:40],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:48],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:56],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:64],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:72],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:80],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:88],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:96],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:104],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:112],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { new_word128__h36563[127:120],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 =
	      { IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[7:0],
		new_word128__h36563[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h6799 or
	  new_word128__h36563 or
	  IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46 =
	      { new_word128__h36563[127:64],
		IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[63:0] };
      4'h8:
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46 =
	      { IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118[63:0],
		new_word128__h36563[63:0] };
      default: CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46 =
		   new_word128__h36563;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h36563 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177 or
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46 or
	  IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h40648 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1151;
      3'd1:
	  b__h40648 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1168;
      3'b010:
	  b__h40648 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1177;
      3'd3:
	  b__h40648 = CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q46;
      3'b100:
	  b__h40648 =
	      IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118;
      default: b__h40648 = new_word128__h36563;
    endcase
  end
  always@(x1_avValue_pa__h6799 or new_word128__h36563 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:16],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[7:0] };
      4'h2:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:24],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[15:0] };
      4'h3:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:32],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[23:0] };
      4'h4:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:40],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[31:0] };
      4'h5:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:48],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[39:0] };
      4'h6:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:56],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[47:0] };
      4'h7:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:64],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[55:0] };
      4'h8:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:72],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[63:0] };
      4'h9:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:80],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[71:0] };
      4'hA:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:88],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[79:0] };
      4'hB:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:96],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[87:0] };
      4'hC:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:104],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[95:0] };
      4'hD:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:112],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[103:0] };
      4'hE:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { new_word128__h36563[127:120],
		cache_rg_st_amo_val[7:0],
		new_word128__h36563[111:0] };
      4'hF:
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 =
	      { cache_rg_st_amo_val[7:0], new_word128__h36563[119:0] };
    endcase
  end
  always@(x1_avValue_pa__h6799 or new_word128__h36563 or cache_rg_st_amo_val)
  begin
    case (x1_avValue_pa__h6799[3:0])
      4'h0:
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47 =
	      { new_word128__h36563[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47 =
	      { cache_rg_st_amo_val[63:0], new_word128__h36563[63:0] };
      default: CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47 =
		   new_word128__h36563;
    endcase
  end
  always@(cache_rg_width_code or
	  new_word128__h36563 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059 or
	  IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068 or
	  CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h36581 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1042;
      3'd1:
	  b__h36581 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1059;
      3'b010:
	  b__h36581 =
	      IF_IF_cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_ETC___d1068;
      3'd3:
	  b__h36581 = CASE_x1_avValue_pa799_BITS_3_TO_0_0x0_new_word_ETC__q47;
      3'b100: b__h36581 = cache_rg_st_amo_val[127:0];
      default: b__h36581 = new_word128__h36563;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h53590 or
	  result_lo__h53623 or result_lo__h53656 or result_lo__h53689)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 =
	      result_lo__h53590;
      3'd2:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 =
	      result_lo__h53623;
      3'd4:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 =
	      result_lo__h53656;
      3'd6:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 =
	      result_lo__h53689;
      default: IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h53296 or
	  result_lo__h53329 or
	  result_lo__h53362 or
	  result_lo__h53395 or
	  result_lo__h53428 or
	  result_lo__h53461 or result_lo__h53494 or result_lo__h53527)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53296;
      3'd1:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53329;
      3'd2:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53362;
      3'd3:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53395;
      3'd4:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53428;
      3'd5:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53461;
      3'd6:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53494;
      3'd7:
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 =
	      result_lo__h53527;
    endcase
  end
  always@(cache_rg_addr or result_lo__h53740 or result_lo__h53773)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48 =
	      result_lo__h53740;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48 =
	      result_lo__h53773;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621 or
	  IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48 or
	  _theResult___snd__h53227 or cache_masterPortShim_rff$D_OUT)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___snd_fst__h53259 =
	      IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1621;
      3'd1:
	  _theResult___snd_fst__h53259 =
	      IF_cache_rg_addr_20_BITS_2_TO_0_573_EQ_0_574_T_ETC___d1641;
      3'b010:
	  _theResult___snd_fst__h53259 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo3740_ETC__q48;
      3'd3: _theResult___snd_fst__h53259 = _theResult___snd__h53227;
      3'b100:
	  _theResult___snd_fst__h53259 = cache_masterPortShim_rff$D_OUT[67:4];
      default: _theResult___snd_fst__h53259 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_snd__h56099 = 64'd0;
      3'b100:
	  _theResult___snd_snd__h56099 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[127:64];
      default: _theResult___snd_snd__h56099 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___snd__h57823 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:0];
      4'h8:
	  _theResult___snd__h57823 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[127:64];
      default: _theResult___snd__h57823 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h57674 or
	  result_lo__h57706 or result_lo__h57738 or result_lo__h57770)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 =
	      result_lo__h57674;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 =
	      result_lo__h57706;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 =
	      result_lo__h57738;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 =
	      result_lo__h57770;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h57404 or
	  result_lo__h57436 or
	  result_lo__h57468 or
	  result_lo__h57500 or
	  result_lo__h57532 or
	  result_lo__h57564 or result_lo__h57596 or result_lo__h57628)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57404;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57436;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57468;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57500;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57532;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57564;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57596;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
	      result_lo__h57628;
      default: IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h56870 or
	  result_lo__h56902 or
	  result_lo__h56934 or
	  result_lo__h56966 or
	  result_lo__h56998 or
	  result_lo__h57030 or
	  result_lo__h57062 or
	  result_lo__h57094 or
	  result_lo__h57126 or
	  result_lo__h57158 or
	  result_lo__h57190 or
	  result_lo__h57222 or
	  result_lo__h57254 or
	  result_lo__h57286 or result_lo__h57318 or result_lo__h57350)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h56870;
      4'h1:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h56902;
      4'h2:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h56934;
      4'h3:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h56966;
      4'h4:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h56998;
      4'h5:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57030;
      4'h6:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57062;
      4'h7:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57094;
      4'h8:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57126;
      4'h9:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57158;
      4'hA:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57190;
      4'hB:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57222;
      4'hC:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57254;
      4'hD:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57286;
      4'hE:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57318;
      4'hF:
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 =
	      result_lo__h57350;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815 or
	  _theResult___snd__h57823 or
	  IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h55878 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779;
      3'd1:
	  w1__h55878 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803;
      3'b010:
	  w1__h55878 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1815;
      3'd3: w1__h55878 = _theResult___snd__h57823;
      3'b100:
	  w1__h55878 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:0];
      default: w1__h55878 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 or
	  w1___1__h55961 or
	  _theResult___snd__h57823 or
	  IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h55883 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779;
      3'd1:
	  w1__h55883 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803;
      3'b010: w1__h55883 = w1___1__h55961;
      3'd3: w1__h55883 = _theResult___snd__h57823;
      3'b100:
	  w1__h55883 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:0];
      default: w1__h55883 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779 or
	  IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803 or
	  w15878_BITS_31_TO_0__q77 or
	  _theResult___snd__h57823 or
	  IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1779;
      3'd1:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
	      IF_cache_rg_addr_20_BITS_3_TO_0_36_EQ_0x0_37_T_ETC___d1803;
      3'b010:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
	      { {32{w15878_BITS_31_TO_0__q77[31]}},
		w15878_BITS_31_TO_0__q77 };
      3'd3:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
	      _theResult___snd__h57823;
      3'b100:
	  IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
	      IF_cache_rg_lower_word64_full_492_THEN_cache_m_ETC___d1731[63:0];
      default: IF_cache_rg_width_code_34_EQ_0b10_83_THEN_SEXT_ETC___d1827 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h57963 or
	  new_st_val_64__h55994 or
	  w2__h40718 or
	  new_st_val_64__h57935 or
	  new_st_val_64__h57943 or
	  new_st_val_64__h57939 or
	  new_st_val_64__h57958 or
	  new_st_val_64__h57947 or new_st_val_64__h57952)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h55916 = new_st_val_64__h55994;
      5'b00001: _theResult_____2__h55916 = w2__h40718;
      5'b00100: _theResult_____2__h55916 = new_st_val_64__h57935;
      5'b01000: _theResult_____2__h55916 = new_st_val_64__h57943;
      5'b01100: _theResult_____2__h55916 = new_st_val_64__h57939;
      5'b10000: _theResult_____2__h55916 = new_st_val_64__h57958;
      5'b11000: _theResult_____2__h55916 = new_st_val_64__h57947;
      5'b11100: _theResult_____2__h55916 = new_st_val_64__h57952;
      default: _theResult_____2__h55916 = new_st_val_64__h57963;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      128'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_ctr_wr_rsps_pending_crg$EN)
	  cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_crg$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_ld_val$EN)
	  cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_allow_cap$EN)
      cache_rg_allow_cap <= `BSV_ASSIGNMENT_DELAY cache_rg_allow_cap$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
    if (cache_rg_word128_set_in_cache$EN)
      cache_rg_word128_set_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_word128_set_in_cache$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_cfg_verbosity = 4'hA;
    cache_ctr_wr_rsps_pending_crg = 4'hA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_allow_cap = 1'h0;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_word128_set_in_cache = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_addr_awlen__h3527);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", _theResult___snd_snd_fst_val__h3563, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_data_wdata__h3605);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_data_wstrb__h3606);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", mem_req_wr_second_data_wuser__h3406, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h5489 = $stime;
	  #0;
	end
    v__h5483 = v__h5489 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h5483,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h2267,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  Word128 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d474))
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d477 &&
	  cache_tlb$lookup[130])
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  !cache_tlb$lookup[130])
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d493)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d497)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", x1_avValue_exc_code__h6800);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d506)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__0_ULE_1_1_2_AND__ETC___d515)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", value__h7695, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("TLB_Lookup_Result { ", "hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", cache_tlb$lookup[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", cache_tlb$lookup[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", cache_tlb$lookup[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp_12_BITS_63_TO_60_13_EQ_8_14_AND__ETC___d534)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d539)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp[63:60] == 4'd8 &&
	  cache_tlb$lookup[130] &&
	  (cache_rg_priv != 2'b0 || cache_tlb$lookup[70]) &&
	  NOT_cache_rg_priv_09_EQ_0b1_29_28_OR_NOT_cache_ETC___d548)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d555)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", x1_avValue_exc_code__h6800);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d539)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1___d110 &&
	  cache_rg_satp_12_BITS_63_TO_60_13_EQ_8_14_AND__ETC___d534)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("'h%h", value__h7695, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_rg_priv_09_ULE_0b1_10_AND_cache_rg_satp__ETC___d523)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d559)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d899)
	begin
	  v__h35301 = $stime;
	  #0;
	end
    v__h35295 = v__h35301 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d899)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h35295,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  cache_ram_state_and_ctag_cset_b_read__19_BIT_5_ETC___d897)
	$display("        AMO LR: reserving PA 0x%0h", x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d899)
	$display("        Read-hit: addr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d913)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d896 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  NOT_cache_ram_state_and_ctag_cset_b_read__19_B_ETC___d917)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1204)
	$display("        ST: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1210)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1215)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1219)
	$display("        AMO SC result = %0d", lrsc_result__h36188);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h6799,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1081);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1225)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1231)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 x1_avValue_pa__h6799,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1237)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1237)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1242)
	begin
	  v__h40118 = $stime;
	  #0;
	end
    v__h40112 = v__h40118 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1242)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h40112,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1242)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  (!cache_rg_priv_09_ULE_0b1___d110 || cache_rg_satp[63:60] != 4'd8 ||
	   cache_tlb_lookup_cache_rg_satp_12_BITS_59_TO_4_ETC___d922) &&
	  cache_soc_map_m_is_mem_addr_IF_cache_rg_priv_0_ETC___d1248)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$display("          PA 0x%0h ", x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$display("          Cache word128 0x%0h, load-result 0x%0h",
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728,
		 cache_ram_word128_set_b_read__71_BITS_128_TO_0_ETC___d728,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_34_EQ_0b100_93_THEN_cac_ETC___d1118 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$write("          New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__1_ETC___d1190);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__19_BI_ETC___d1189);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1254)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1259)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 x1_avValue_pa__h6799);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_rg_priv_09_ULE_0b1_10_11_OR_NOT_cach_ETC___d1264)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h45575 = $stime;
	  #0;
	end
    v__h45569 = v__h45575 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h45569,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h45791 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h45791);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_2_pte_pa_w64_fa__h45630);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46528 = $stime;
	  #0;
	end
    v__h46522 = v__h46528 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h46522,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46285 = $stime;
	  #0;
	end
    v__h46279 = v__h46285 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h46279,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46690 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h46690);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_1_pte_pa_w64_fa__h46562);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1362)
	begin
	  v__h46835 = $stime;
	  #0;
	end
    v__h46829 = v__h46835 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1362)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h46829,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	   cache_masterPortShim_rff$D_OUT[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1374)
	begin
	  v__h46947 = $stime;
	  #0;
	end
    v__h46941 = v__h46947 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1374)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h46941,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__297_BIT_7_308__ETC___d1374)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h46558);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h46457 = $stime;
	  #0;
	end
    v__h46451 = v__h46457 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h46451,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3011);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47584 = $stime;
	  #0;
	end
    v__h47578 = v__h47584 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h47578,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47344 = $stime;
	  #0;
	end
    v__h47338 = v__h47344 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h47338,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47746 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h47746);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", lev_0_pte_pa_w64_fa__h47618);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1413)
	begin
	  v__h48003 = $stime;
	  #0;
	end
    v__h47997 = v__h48003 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1413)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h47997,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1413)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h46558);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1419)
	begin
	  v__h47891 = $stime;
	  #0;
	end
    v__h47885 = v__h47891 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__297_BITS_3_TO__ETC___d1419)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h47885,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  cache_masterPortShim_rff$D_OUT[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h47513 = $stime;
	  #0;
	end
    v__h47507 = v__h47513 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h47507,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3011);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48478 = $stime;
	  #0;
	end
    v__h48472 = v__h48478 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h48472,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48549 = $stime;
	  #0;
	end
    v__h48543 = v__h48549 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h48543,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 exc_code___1__h7662);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48631 = $stime;
	  #0;
	end
    v__h48625 = v__h48631 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h48625,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h46558);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48407 = $stime;
	  #0;
	end
    v__h48401 = v__h48407 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48401,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h3011);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48760 = $stime;
	  #0;
	end
    v__h48754 = v__h48760 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_start_cache_refill: ", v__h48754, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h48912 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h48912);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cline_fabric_addr__h48813);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h48970[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	begin
	  v__h49481 = $stime;
	  #0;
	end
    v__h49475 = v__h49481 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h49475,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h49723 = $stime;
	  #0;
	end
    v__h49717 = v__h49723 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h49717,
		 "D_MMU_Cache",
		 access_exc_code__h3011);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_masterPortShim_rff$D_OUT[0],
		   cache_masterPortShim_rff$D_OUT[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_word128_set_in_cache[1:0] == 2'd3 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$display("        Updating Cache word128_set 0x%0h, word128_in_cline %0d) old => new",
		 cache_rg_word128_set_in_cache,
		 cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(" 0x%0x", cache_ram_word128_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(" 0x%0x", cache_ram_word128_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("        CSet 0x%0x, Word128 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_word128_set_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_461_THEN_cache_ram_word_ETC___d1529);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_461_THEN_cache_masterPo_ETC___d1530);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__0_ULE_2_470___d1471)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52372 = $stime;
	  #0;
	end
    v__h52366 = v__h52372 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h52366,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52596 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h52596);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", size_val__h55107, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52700 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h52700);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h52933 = $stime;
	  #0;
	end
    v__h52927 = v__h52933 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h52927,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54135 = $stime;
	  #0;
	end
    v__h54129 = v__h54135 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h54129,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___snd_fst__h53259 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54249 = $stime;
	  #0;
	end
    v__h54243 = v__h54249 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h54243,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h53965 = $stime;
	  #0;
	end
    v__h53959 = v__h53965 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h53959,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h49941 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54360 = $stime;
	  #0;
	end
    v__h54354 = v__h54360 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h54354,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54482 = $stime;
	  #0;
	end
    v__h54476 = v__h54482 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h54476,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { cache_rg_allow_cap && cache_rg_ld_val[128],
		   cache_rg_ld_val[127:0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54572 = $stime;
	  #0;
	end
    v__h54566 = v__h54572 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h54566,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54791 = $stime;
	  #0;
	end
    v__h54785 = v__h54791 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h54785,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h54917 = $stime;
	  #0;
	end
    v__h54911 = v__h54917 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54911,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55132 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h55132);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", size_val__h55107, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55236 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0t            To fabric: ", v__h55236);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_34_EQ_0_35_OR_cach_ETC___d1550 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55413 = $stime;
	  #0;
	end
    v__h55407 = v__h55413 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55407,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55783 = $stime;
	  #0;
	end
    v__h55777 = v__h55783 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s: rl_io_AMO_read_rsp; f3 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h55777,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h58102 = $stime;
	  #0;
	end
    v__h58096 = v__h58102 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h58096,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h58080 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h55711 = $stime;
	  #0;
	end
    v__h55705 = v__h55711 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h55705,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h58748 = $stime;
	  #0;
	end
    v__h58742 = v__h58748 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h58742,
	       "D_MMU_Cache",
	       $unsigned(b__h45529));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	begin
	  v__h58709 = $stime;
	  #0;
	end
    v__h58703 = v__h58709 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h58703,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd1 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h4600 = $stime;
	  #0;
	end
    v__h4594 = v__h4600 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h4594,
		 "D_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h5239 = $stime;
	  #0;
	end
    v__h5233 = v__h5239 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h5233,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h5338 = $stime;
	  #0;
	end
    v__h5332 = v__h5338 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h5332, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h59676 = $stime;
	  #0;
	end
    v__h59670 = v__h59676 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("%0d: %m.req: op:", v__h59670);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" f3:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  cache_w_req_width_code_wget__922_EQ_0b0_943_OR_ETC___d1984)
	$display("    fa_req_ram_B tagCSet [0x%0x] word128_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__0_ULE_1___d61)
	begin
	  v__h60994 = $stime;
	  #0;
	end
    v__h60988 = v__h60994 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && !cache_cfg_verbosity_read__0_ULE_1___d61)
	$display("%0d: %s.tlb_flush", v__h60988, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1920, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1919, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1918, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1917, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM/MMU_Cache.bsv\", line 1916, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

